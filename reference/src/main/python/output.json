{"path": "", "class": "", "method": "", "beginline": 0, "endline": 0, "ast": ["def#():#", "", {"token": "def", "leading": "", "trailing": " ", "line": 7}, {"token": "testFunc", "leading": " ", "trailing": "", "leaf": true, "line": 7}, {"token": "(", "leading": "", "trailing": "", "line": 7}, {"token": ")", "leading": "", "trailing": "", "line": 7}, {"token": ":", "leading": "", "trailing": "", "line": 7}, ["\r\n<INDENT>#<DEDENT>", "", {"token": "\r\n", "leading": "", "trailing": "        ", "line": 7}, {"token": "<INDENT>", "leading": "        ", "trailing": "", "line": 8}, ["#", "", ["#", "", ["#", "", ["if(Trueand2==2):#", "", {"token": "if", "leading": "", "trailing": "", "line": 8}, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {"token": "(", "leading": "", "trailing": "", "line": 8}, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {"token": "True", "leading": "", "trailing": " ", "line": 8}, {"token": "and", "leading": " ", "trailing": " ", "line": 8}, "", "", "", "", "", "", "", "", "", "", "", "", "", {"token": "2", "leading": " ", "trailing": "", "line": 8}, "", "", {"token": "==", "leading": "", "trailing": "", "line": 8}, "", "", "", "", "", "", "", "", "", "", "", {"token": "2", "leading": "", "trailing": "", "line": 8}, {"token": ")", "leading": "", "trailing": "", "line": 8}, {"token": ":", "leading": "", "trailing": "", "line": 8}, ["\r\n<INDENT>#<DEDENT>", "", {"token": "\r\n", "leading": "", "trailing": "            ", "line": 8}, {"token": "<INDENT>", "leading": "            ", "trailing": "", "line": 9}, ["##", "", ["#", "", ["#\r\n", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#(\"example\")", "", ["#", "", ["#", "", {"token": "print", "leading": "", "trailing": "", "var": true, "leaf": true, "line": 9}]], {"token": "(", "leading": "", "trailing": "", "line": 9}, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {"token": "\"example\"", "leading": "", "trailing": "", "line": 9}, {"token": ")", "leading": "", "trailing": "", "line": 9}]]]]]]]]]]]]]]]]]], {"token": "\r\n", "leading": "", "trailing": "            ", "line": 9}]], ["#", "", ["#\r\n", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#", "", ["#(\"test\")", "", ["#", "", ["#", "", {"token": "print", "leading": "            ", "trailing": "", "var": true, "leaf": true, "line": 10}]], {"token": "(", "leading": "", "trailing": "", "line": 10}, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {"token": "\"test\"", "leading": "", "trailing": "", "line": 10}, {"token": ")", "leading": "", "trailing": "\r\n\r\n\r\n\r\n# class ReadData(GenericPE):\r\n#     def __init__(self):\r\n#         test._add_output(\"output\")\r\n        \r\n   \r\n\r\n# class e:\r\n#     def test():\r\n#         sum = 0\r\n#         for i in range(1,10):\r\n#             print(\"hello\")\r\n#             for j in range(1, i):\r\n#                 print(\"world\")\r\n#                 for k in range(1, j):\r\n#                     sum += j\r\n#         return sum\r\n\r\n\r\n# class f:\r\n#     def test_flat():\r\n#         sum = 0\r\n#         for i in range(1,10):\r\n#             print(\"hello\")\r\n#         for j in range(1, i):\r\n#             print(\"world\")\r\n#         for k in range(1, j):\r\n#             sum += j\r\n#         return sum", "line": 10}]]]]]]]]]]]]]]]]]], {"token": "\r\n", "leading": "\r\n\r\n\r\n\r\n# class ReadData(GenericPE):\r\n#     def __init__(self):\r\n#         test._add_output(\"output\")\r\n        \r\n   \r\n\r\n# class e:\r\n#     def test():\r\n#         sum = 0\r\n#         for i in range(1,10):\r\n#             print(\"hello\")\r\n#             for j in range(1, i):\r\n#                 print(\"world\")\r\n#                 for k in range(1, j):\r\n#                     sum += j\r\n#         return sum\r\n\r\n\r\n# class f:\r\n#     def test_flat():\r\n#         sum = 0\r\n#         for i in range(1,10):\r\n#             print(\"hello\")\r\n#         for j in range(1, i):\r\n#             print(\"world\")\r\n#         for k in range(1, j):\r\n#             sum += j\r\n#         return sum", "trailing": "", "line": 41}]]], {"token": "<DEDENT>", "leading": "", "trailing": "", "line": 42}]]]]], {"token": "<DEDENT>", "leading": "", "trailing": "", "line": 42}]]}