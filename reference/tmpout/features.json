{"path": "jsrc/BinaryTuple.java", "endline": 14, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 12, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 13, "token": "return"}, ["#+#", ["#+#", ["#+#", ["#+#", {"trailing": "", "leading": " ", "line": 13, "leaf": true, "token": "\"<\""}, {"trailing": "", "leading": "", "line": 13, "token": "+"}, {"trailing": "", "leading": "", "var": true, "line": 13, "leaf": true, "token": "val1"}], {"trailing": "", "leading": "", "line": 13, "token": "+"}, {"trailing": "", "leading": "", "line": 13, "leaf": true, "token": "\", \""}], {"trailing": "", "leading": "", "line": 13, "token": "+"}, {"trailing": "", "leading": "", "var": true, "line": 13, "leaf": true, "token": "val2"}], {"trailing": "", "leading": "", "line": 13, "token": "+"}, {"trailing": " ", "leading": "", "line": 13, "leaf": true, "token": "\">\""}], {"trailing": "\n  ", "leading": " ", "line": 13, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 14, "token": "}"}], "method": "toString", "beginline": 12, "class": "BinaryTuple", "features": [11, 12, 12, 12, 13, 14, 15, 15, 16, 16, 17, 18, 19, 19, 20, 20, 13, 14, 15, 21, 22, 22, 23, 24, 25, 26, 26], "index": 0}
{"path": "jsrc/BinaryTuple.java", "endline": 18, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 16, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 17, "token": "return"}, ["#&&#", ["(#)", {"trailing": "", "leading": " ", "line": 17, "token": "("}, ["#==#", {"trailing": " ", "leading": "", "var": true, "line": 17, "leaf": true, "token": "val1"}, {"trailing": " ", "leading": " ", "line": 17, "token": "=="}, {"trailing": "", "leading": " ", "var": true, "line": 17, "leaf": true, "token": "v1"}], {"trailing": " ", "leading": "", "line": 17, "token": ")"}], {"trailing": " ", "leading": " ", "line": 17, "token": "&&"}, ["(#)", {"trailing": "", "leading": " ", "line": 17, "token": "("}, ["#==#", {"trailing": " ", "leading": "", "var": true, "line": 17, "leaf": true, "token": "val2"}, {"trailing": " ", "leading": " ", "line": 17, "token": "=="}, {"trailing": "", "leading": " ", "var": true, "line": 17, "leaf": true, "token": "v2"}], {"trailing": " ", "leading": "", "line": 17, "token": ")"}]], {"trailing": "\n  ", "leading": " ", "line": 17, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 18, "token": "}"}], "method": "matches", "beginline": 16, "class": "BinaryTuple", "features": [13, 27, 28, 21, 13, 29, 28, 21, 30, 30, 13, 27, 31, 21, 30, 30, 13, 29, 31, 21, 30, 30], "index": 1}
{"path": "jsrc/BinaryTuple.java", "endline": 22, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 20, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 21, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 21, "leaf": true, "token": "val1"}, {"trailing": "\n  ", "leading": "", "line": 21, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 22, "token": "}"}], "method": "getVal1", "beginline": 20, "class": "BinaryTuple", "features": [13, 21], "index": 2}
{"path": "jsrc/BinaryTuple.java", "endline": 26, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 24, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 25, "token": "this"}, {"trailing": "", "leading": "", "line": 25, "token": "."}, {"trailing": " ", "leading": "", "line": 25, "leaf": true, "token": "val1"}], {"trailing": " ", "leading": " ", "line": 25, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 25, "leaf": true, "token": "val1"}], {"trailing": "\n  ", "leading": "", "line": 25, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 26, "token": "}"}], "method": "setVal1", "beginline": 24, "class": "BinaryTuple", "features": [32, 33, 34, 35, 13, 36, 37, 38, 38], "index": 3}
{"path": "jsrc/BinaryTuple.java", "endline": 30, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 28, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 29, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 29, "leaf": true, "token": "val2"}, {"trailing": "\n  ", "leading": "", "line": 29, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 30, "token": "}"}], "method": "getVal2", "beginline": 28, "class": "BinaryTuple", "features": [13, 21], "index": 4}
{"path": "jsrc/BinaryTuple.java", "endline": 34, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 32, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 33, "token": "this"}, {"trailing": "", "leading": "", "line": 33, "token": "."}, {"trailing": " ", "leading": "", "line": 33, "leaf": true, "token": "val2"}], {"trailing": " ", "leading": " ", "line": 33, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 33, "leaf": true, "token": "val2"}], {"trailing": "\n  ", "leading": "", "line": 33, "token": ";"}], {"trailing": "\n", "leading": "\n  ", "line": 34, "token": "}"}], "method": "setVal2", "beginline": 32, "class": "BinaryTuple", "features": [39, 40, 41, 42, 13, 36, 37, 43, 43], "index": 5}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 95, "ast": ["{####}", {"trailing": "\n        // for now just return in order, later use smallest domain\n        // TODO set this with a flag\n        // return varList.get(0);\n        \n        // smallest domain first\n        // ties are broken by using < therefore if equal first value (lower index has precedence)\n        // TODO why is this not really doing anything?\n        ", "leading": "", "line": 72, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n        // for now just return in order, later use smallest domain\n        // TODO set this with a flag\n        // return varList.get(0);\n        \n        // smallest domain first\n        // ties are broken by using < therefore if equal first value (lower index has precedence)\n        // TODO why is this not really doing anything?\n        ", "line": 80, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 80, "leaf": true, "token": "smallestDomain"}, {"trailing": " ", "leading": " ", "line": 80, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 80, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 80, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 80, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 80, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 80, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 80, "token": "("}, {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 80, "token": ")"}]], {"trailing": "", "leading": "", "line": 80, "token": ")"}]], {"trailing": "", "leading": "", "line": 80, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 80, "token": "("}, {"trailing": "", "leading": "", "line": 80, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 80, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 81, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "smallestVar"}, {"trailing": " ", "leading": " ", "line": 81, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 81, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 81, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 81, "token": "("}, {"trailing": "", "leading": "", "line": 81, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 81, "token": ")"}]]]], {"trailing": "\n\n        ", "leading": "", "line": 81, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n\n        ", "line": 83, "token": "for"}, {"trailing": "", "leading": " ", "line": 83, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 83, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "var"}, {"trailing": " ", "leading": " ", "line": 83, "token": "="}, {"trailing": "", "leading": " ", "line": 83, "leaf": true, "token": "1"}]], {"trailing": " ", "leading": "", "line": 83, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "var"}, {"trailing": " ", "leading": " ", "line": 83, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 83, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 83, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 83, "token": "("}, {"trailing": "", "leading": "", "line": 83, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 83, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "var"}, {"trailing": "", "leading": " ", "line": 83, "token": "++"}]], {"trailing": " ", "leading": "", "line": 83, "token": ")"}, ["{##}", {"trailing": "\n            ", "leading": " ", "line": 83, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n            ", "line": 84, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 84, "leaf": true, "token": "checkIfSmaller"}, {"trailing": " ", "leading": " ", "line": 84, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 84, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 84, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 84, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 84, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 84, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 84, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 84, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 84, "token": ")"}]], {"trailing": "", "leading": "", "line": 84, "token": ")"}]], {"trailing": "", "leading": "", "line": 84, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 84, "token": "("}, {"trailing": "", "leading": "", "line": 84, "token": ")"}]]]], {"trailing": "\n            ", "leading": "", "line": 84, "token": ";"}], ["if##", {"trailing": "", "leading": "\n            ", "line": 85, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 85, "token": "("}, ["#<#", {"trailing": " ", "leading": "", "var": true, "line": 85, "leaf": true, "token": "checkIfSmaller"}, {"trailing": " ", "leading": " ", "line": 85, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 85, "leaf": true, "token": "smallestDomain"}], {"trailing": "", "leading": "", "line": 85, "token": ")"}], ["{##}", {"trailing": "\n                ", "leading": "", "line": 85, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 86, "leaf": true, "token": "smallestDomain"}, {"trailing": " ", "leading": " ", "line": 86, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 86, "leaf": true, "token": "checkIfSmaller"}], {"trailing": "\n                ", "leading": "", "line": 86, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 87, "leaf": true, "token": "smallestVar"}, {"trailing": " ", "leading": " ", "line": 87, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 87, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 87, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 87, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 87, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 87, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 87, "token": ")"}]]], {"trailing": "\n            ", "leading": "", "line": 87, "token": ";"}], {"trailing": "\n        ", "leading": "\n            ", "line": 88, "token": "}"}]], {"trailing": "\n\n\n        ", "leading": "\n        ", "line": 89, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n\n        ", "line": 92, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 92, "leaf": true, "token": "smallestVar"}, {"trailing": "\n\n\n    ", "leading": "", "line": 92, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n\n\n    ", "line": 95, "token": "}"}], "method": "selectVarByDomain", "beginline": 72, "class": "BinaryCSPSolver", "features": [13, 44, 45, 37, 13, 46, 46, 36, 30, 30, 47, 48, 49, 50, 51, 51, 13, 46, 52, 53, 54, 54, 55, 56, 57, 58, 59, 59, 60, 61, 62, 61, 63, 63, 64, 65, 66, 67, 68, 68, 13, 44, 45, 37, 69, 69, 13, 46, 36, 45, 70, 70, 30, 30, 55, 56, 57, 71, 59, 59, 60, 61, 62, 72, 63, 63, 13, 44, 45, 73, 74, 74, 75, 76, 77, 78, 79, 79, 13, 80, 81, 82, 83, 83, 84, 84, 13, 46, 85, 81, 86, 86, 86, 86, 30, 30, 64, 65, 66, 87, 88, 88, 13, 89, 90, 82, 91, 91, 92, 92, 69, 69, 13, 44, 45, 37, 30, 30, 13, 46, 46, 36, 93, 93, 30, 30, 47, 48, 49, 50, 51, 51, 13, 46, 52, 53, 94, 94, 70, 70, 54, 54, 55, 56, 57, 58, 59, 59, 13, 52, 53, 52, 95, 95, 96, 96, 97, 97, 64, 65, 66, 67, 88, 88, 13, 80, 98, 99, 83, 83, 69, 69, 13, 85, 98, 99, 100, 100, 30, 30, 13, 44, 37, 101, 102, 102, 103, 103, 30, 30, 13, 36, 37, 101, 104, 104, 105, 105, 30, 30, 13, 44, 37, 101, 103, 103, 30, 30, 13, 46, 36, 37, 70, 70, 94, 94, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 106, 106, 95, 95, 97, 97, 13, 21, 107, 107, 107, 107, 30, 30], "index": 6}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 100, "ast": ["{#}", {"trailing": "\n        // for now just return the lowest value, should do ssosoomething else later\n        ", "leading": "", "line": 97, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        // for now just return the lowest value, should do ssosoomething else later\n        ", "line": 99, "token": "return"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 99, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 99, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 99, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 99, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 99, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 99, "token": ")"}]], {"trailing": "", "leading": "", "line": 99, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 99, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 99, "token": "("}, {"trailing": "", "leading": "", "line": 99, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 99, "token": ")"}]], {"trailing": "\n    ", "leading": "", "line": 99, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 100, "token": "}"}], "method": "selectVal", "beginline": 97, "class": "BinaryCSPSolver", "features": [13, 46, 46, 21, 47, 48, 49, 50, 51, 51, 13, 52, 53, 46, 54, 54, 55, 56, 57, 108, 59, 59, 60, 61, 62, 109, 63, 63], "index": 7}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 167, "ast": ["{#######}", {"trailing": "\n        ", "leading": "", "line": 102, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 103, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 103, "token": "<"}, {"trailing": "", "leading": "", "line": 103, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 103, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 103, "leaf": true, "token": "varDomain"}, {"trailing": " ", "leading": " ", "line": 103, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 103, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 103, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 103, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 103, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 103, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 103, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 103, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 104, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 104, "leaf": true, "token": "currentSize"}, {"trailing": " ", "leading": " ", "line": 104, "token": "="}, {"trailing": "", "leading": " ", "line": 104, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 104, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 105, "token": "for"}, {"trailing": "", "leading": " ", "line": 105, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 105, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": " ", "var": true, "line": 105, "leaf": true, "token": "varCheck"}, {"trailing": " ", "leading": " ", "line": 105, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 105, "leaf": true, "token": "varList"}], {"trailing": " ", "leading": "", "line": 105, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 105, "token": "{"}, ["#;", ["#+=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 106, "leaf": true, "token": "currentSize"}, {"trailing": " ", "leading": " ", "line": 106, "token": "+="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 106, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 106, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 106, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 106, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 106, "leaf": true, "token": "varCheck"}, {"trailing": "", "leading": "", "line": 106, "token": ")"}]], {"trailing": "", "leading": "", "line": 106, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 106, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 106, "token": "("}, {"trailing": "", "leading": "", "line": 106, "token": ")"}]]], {"trailing": "\n                    \n        ", "leading": "", "line": 106, "token": ";"}], {"trailing": " \n        ", "leading": "\n                    \n        ", "line": 108, "token": "}"}]], ["#;", ["int#", {"trailing": " ", "leading": " \n        ", "line": 109, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 109, "leaf": true, "token": "minConflicts"}, {"trailing": " ", "leading": " ", "line": 109, "token": "="}, ["-#", {"trailing": "", "leading": " ", "line": 109, "token": "-"}, {"trailing": "", "leading": "", "line": 109, "leaf": true, "token": "1"}]]], {"trailing": "\n        ", "leading": "", "line": 109, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 110, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 110, "leaf": true, "token": "minConflictsVal"}, {"trailing": " ", "leading": " ", "line": 110, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 110, "leaf": true, "token": "varDomain"}, {"trailing": "", "leading": "", "line": 110, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 110, "token": "("}, {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 110, "token": ")"}]]]], {"trailing": "\n        \n        // get all of the unassigned variables\n        // check which domains are still possible after assignment\n        // take those out?\n\n        // basically for each value, run the appropriate check forward check / MAC\n        // then see how many values are left\n        // then revert to the current settings\n        ", "leading": "", "line": 110, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        \n        // get all of the unassigned variables\n        // check which domains are still possible after assignment\n        // take those out?\n\n        // basically for each value, run the appropriate check forward check / MAC\n        // then see how many values are left\n        // then revert to the current settings\n        ", "line": 119, "token": "for"}, {"trailing": "", "leading": " ", "line": 119, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 119, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 119, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 119, "token": "="}, {"trailing": "", "leading": " ", "line": 119, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 119, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 119, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 119, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 119, "leaf": true, "token": "varDomain"}, {"trailing": "", "leading": "", "line": 119, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 119, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 119, "token": "("}, {"trailing": "", "leading": "", "line": 119, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 119, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 119, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 119, "token": "++"}]], {"trailing": " ", "leading": "", "line": 119, "token": ")"}, ["{#######}", {"trailing": "\n            ", "leading": " ", "line": 119, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n            ", "line": 120, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 120, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 120, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 120, "leaf": true, "token": "varDomain"}, {"trailing": "", "leading": "", "line": 120, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 120, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 120, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 120, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 120, "token": ")"}]]]], {"trailing": "\n            ", "leading": "", "line": 120, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 121, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 121, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 121, "leaf": true, "token": "assign"}, {"trailing": "", "leading": "", "line": 121, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 121, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 121, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 121, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 121, "token": ")"}]], {"trailing": "\n            // used to revert back if we have to\n            // if we are not using AC3_1, this will return itself, causing minimal slowdown as constant time assignment by reference\n            // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n            // ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n            ", "leading": "", "line": 121, "token": ";"}], ["#;", ["##", {"trailing": " ", "leading": "\n            // used to revert back if we have to\n            // if we are not using AC3_1, this will return itself, causing minimal slowdown as constant time assignment by reference\n            // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n            // ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n            ", "line": 126, "leaf": true, "token": "RevertData"}, {"trailing": "", "leading": " ", "var": true, "line": 126, "leaf": true, "token": "revertData"}], {"trailing": "\n            ", "leading": "", "line": 126, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n            ", "line": 127, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 127, "token": "("}, ["#||#", ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 127, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": " ", "leading": "", "line": 127, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 127, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 127, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": "", "leading": "", "line": 127, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": " ", "leading": "", "line": 127, "leaf": true, "token": "FC"}]], {"trailing": " ", "leading": " ", "line": 127, "token": "||"}, ["#==#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 127, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": " ", "leading": "", "line": 127, "leaf": true, "token": "valType"}], {"trailing": " ", "leading": " ", "line": 127, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 127, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": "", "leading": "", "line": 127, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": "", "line": 127, "token": "."}, {"trailing": "", "leading": "", "line": 127, "leaf": true, "token": "MIN_CONFLICTS_FORCE_FC"}]]], {"trailing": "", "leading": "", "line": 127, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 127, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 128, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 128, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 128, "leaf": true, "token": "forwardChecking"}, {"trailing": "", "leading": "", "line": 128, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 128, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 128, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 128, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 128, "token": "("}, {"trailing": "", "leading": "", "line": 128, "token": ")"}]], {"trailing": " ", "leading": "", "line": 128, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 128, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 128, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 128, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 128, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 128, "token": ";"}], {"trailing": " ", "leading": "\n            ", "line": 129, "token": "}"}], {"trailing": " ", "leading": " ", "line": 129, "token": "else"}, ["{#}", {"trailing": "\n                ", "leading": " ", "line": 129, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 130, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 130, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 130, "leaf": true, "token": "maintainArcConsistency"}, {"trailing": "", "leading": "", "line": 130, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 130, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 130, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 130, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 130, "token": "("}, {"trailing": "", "leading": "", "line": 130, "token": ")"}]], {"trailing": " ", "leading": "", "line": 130, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 130, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 130, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 130, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 130, "token": ")"}]], {"trailing": "\n                // revertData = forwardChecking(instance.getConstraints(), var, varList);\n            ", "leading": "", "line": 130, "token": ";"}], {"trailing": "\n            // no errors\n            ", "leading": "\n                // revertData = forwardChecking(instance.getConstraints(), var, varList);\n            ", "line": 132, "token": "}"}]], ["if##", {"trailing": "", "leading": "\n            // no errors\n            ", "line": 134, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 134, "token": "("}, ["#>=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 134, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 134, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 134, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 134, "token": "("}, {"trailing": " ", "leading": "", "line": 134, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 134, "token": ">="}, {"trailing": " ", "leading": " ", "line": 134, "leaf": true, "token": "0"}], {"trailing": "", "leading": " ", "line": 134, "token": ")"}], ["{###}", {"trailing": "\n                ", "leading": "", "line": 134, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n                ", "line": 135, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 135, "leaf": true, "token": "remainingOptions"}, {"trailing": " ", "leading": " ", "line": 135, "token": "="}, {"trailing": "", "leading": " ", "line": 135, "leaf": true, "token": "0"}]], {"trailing": "\n                ", "leading": "", "line": 135, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n                ", "line": 136, "token": "for"}, {"trailing": "", "leading": " ", "line": 136, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 136, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": " ", "var": true, "line": 136, "leaf": true, "token": "varCheck"}, {"trailing": " ", "leading": " ", "line": 136, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 136, "leaf": true, "token": "varList"}], {"trailing": " ", "leading": "", "line": 136, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": " ", "line": 136, "token": "{"}, ["#;", ["#+=#", {"trailing": " ", "leading": "\n                    ", "var": true, "line": 137, "leaf": true, "token": "remainingOptions"}, {"trailing": " ", "leading": " ", "line": 137, "token": "+="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 137, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 137, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 137, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 137, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 137, "leaf": true, "token": "varCheck"}, {"trailing": "", "leading": "", "line": 137, "token": ")"}]], {"trailing": "", "leading": "", "line": 137, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 137, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 137, "token": "("}, {"trailing": "", "leading": "", "line": 137, "token": ")"}]]], {"trailing": "\n                    \n                ", "leading": "", "line": 137, "token": ";"}], {"trailing": " \n                ", "leading": "\n                    \n                ", "line": 139, "token": "}"}]], ["if##", {"trailing": "", "leading": " \n                ", "line": 140, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 140, "token": "("}, ["#>#", {"trailing": " ", "leading": "", "var": true, "line": 140, "leaf": true, "token": "remainingOptions"}, {"trailing": " ", "leading": " ", "line": 140, "token": ">"}, {"trailing": "", "leading": " ", "var": true, "line": 140, "leaf": true, "token": "minConflicts"}], {"trailing": "", "leading": "", "line": 140, "token": ")"}], ["{##}", {"trailing": "\n                    ", "leading": "", "line": 140, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                    ", "var": true, "line": 141, "leaf": true, "token": "minConflicts"}, {"trailing": " ", "leading": " ", "line": 141, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 141, "leaf": true, "token": "remainingOptions"}], {"trailing": "\n                    ", "leading": "", "line": 141, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\n                    ", "var": true, "line": 142, "leaf": true, "token": "minConflictsVal"}, {"trailing": " ", "leading": " ", "line": 142, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 142, "leaf": true, "token": "val"}], {"trailing": "\n                ", "leading": "", "line": 142, "token": ";"}], {"trailing": "\n            ", "leading": "\n                ", "line": 143, "token": "}"}]], {"trailing": "\n            // instance.setVarDomains(revertVarDoms);\n            // instance.setLastValid(revertLastValid);\n\n            ", "leading": "\n            ", "line": 144, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n            // instance.setVarDomains(revertVarDoms);\n            // instance.setLastValid(revertLastValid);\n\n            ", "line": 148, "token": "for"}, {"trailing": "", "leading": "", "line": 148, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 148, "token": "."}, {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 148, "token": "<"}, {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 148, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 148, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 148, "token": "<"}, {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 148, "token": ">"}]], {"trailing": " ", "leading": "", "line": 148, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 148, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 148, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 148, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 148, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "getChangedDomains"}, {"trailing": "", "leading": "", "line": 148, "token": "("}, {"trailing": "", "leading": "", "line": 148, "token": ")"}]], {"trailing": "", "leading": "", "line": 148, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 148, "token": "("}, {"trailing": "", "leading": "", "line": 148, "token": ")"}]]], {"trailing": "", "leading": "", "line": 148, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 148, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 149, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 149, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 149, "leaf": true, "token": "setVarDomain"}, {"trailing": "", "leading": "", "line": 149, "token": "("}, ["#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 149, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 149, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 149, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 149, "token": "("}, {"trailing": "", "leading": "", "line": 149, "token": ")"}]], {"trailing": " ", "leading": "", "line": 149, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 149, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 149, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 149, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 149, "token": "("}, {"trailing": "", "leading": "", "line": 149, "token": ")"}]]], {"trailing": "", "leading": "", "line": 149, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 149, "token": ";"}], {"trailing": "\n\n            ", "leading": "\n            ", "line": 150, "token": "}"}]], ["if##", {"trailing": "", "leading": "\n\n            ", "line": 152, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 152, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 152, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 152, "token": "."}, {"trailing": " ", "leading": "", "line": 152, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 152, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 152, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 152, "token": "."}, {"trailing": "", "leading": "", "line": 152, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 152, "token": "."}, {"trailing": "", "leading": "", "line": 152, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 152, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 152, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n                ", "line": 153, "token": "for"}, {"trailing": "", "leading": "", "line": 153, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 153, "token": "."}, {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 153, "token": "<"}, {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 153, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 153, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 153, "token": "<"}, {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 153, "token": ","}, {"trailing": "", "leading": " ", "line": 153, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 153, "token": ">"}]], {"trailing": " ", "leading": "", "line": 153, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 153, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 153, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 153, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 153, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "getChangedLastValid"}, {"trailing": "", "leading": "", "line": 153, "token": "("}, {"trailing": "", "leading": "", "line": 153, "token": ")"}]], {"trailing": "", "leading": "", "line": 153, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 153, "token": "("}, {"trailing": "", "leading": "", "line": 153, "token": ")"}]]], {"trailing": "", "leading": "", "line": 153, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": "", "line": 153, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n                    ", "line": 154, "token": "for"}, {"trailing": "", "leading": "", "line": 154, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 154, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 154, "token": "."}, {"trailing": "", "leading": "", "line": 154, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 154, "token": "<"}, {"trailing": "", "leading": "", "line": 154, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 154, "token": ","}, {"trailing": "", "leading": " ", "line": 154, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 154, "token": ">"}]], {"trailing": " ", "leading": " ", "var": true, "line": 154, "leaf": true, "token": "innerEntry"}, {"trailing": " ", "leading": " ", "line": 154, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 154, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 154, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 154, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 154, "token": "("}, {"trailing": "", "leading": "", "line": 154, "token": ")"}]], {"trailing": "", "leading": "", "line": 154, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 154, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 154, "token": "("}, {"trailing": "", "leading": "", "line": 154, "token": ")"}]]], {"trailing": "", "leading": "", "line": 154, "token": ")"}, ["{#}", {"trailing": "\n                        ", "leading": "", "line": 154, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                        ", "var": true, "line": 155, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 155, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 155, "leaf": true, "token": "setLastValidValue"}, {"trailing": "", "leading": "", "line": 155, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 155, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 155, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 155, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 155, "token": "("}, {"trailing": "", "leading": "", "line": 155, "token": ")"}]], {"trailing": " ", "leading": "", "line": 155, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 155, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 155, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 155, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 155, "token": "("}, {"trailing": "", "leading": "", "line": 155, "token": ")"}]], {"trailing": " ", "leading": "", "line": 155, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 155, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 155, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 155, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 155, "token": "("}, {"trailing": "", "leading": "", "line": 155, "token": ")"}]]], {"trailing": "", "leading": "", "line": 155, "token": ")"}]], {"trailing": "\n                    ", "leading": "", "line": 155, "token": ";"}], {"trailing": "\n                ", "leading": "\n                    ", "line": 156, "token": "}"}]], {"trailing": "\n            ", "leading": "\n                ", "line": 157, "token": "}"}]], {"trailing": "\n            \n\n\n            \n        ", "leading": "\n            ", "line": 158, "token": "}"}]], {"trailing": "\n        \n        ", "leading": "\n            \n\n\n            \n        ", "line": 163, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n        \n        ", "line": 165, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 165, "leaf": true, "token": "minConflictsVal"}, {"trailing": "\n    \n    ", "leading": "", "line": 165, "token": ";"}], {"trailing": "\n    \n    \n    /**\n     * \n     * @param depth current depth and therefore how many variables have been assigned (not true in this model)\n     * @param variableNo as we asign 2 way, we only look at one value of the domain in each instance, and recur with incremented variableNo\n     */\n    ", "leading": "\n    \n    ", "line": 167, "token": "}"}], "method": "selectValByConflicts", "beginline": 102, "class": "BinaryCSPSolver", "features": [110, 111, 111, 112, 113, 114, 115, 116, 117, 117, 13, 44, 118, 37, 119, 119, 13, 46, 36, 118, 30, 30, 47, 48, 49, 120, 51, 51, 13, 52, 53, 36, 54, 54, 13, 44, 45, 37, 30, 30, 60, 72, 121, 122, 123, 123, 113, 124, 125, 126, 126, 13, 127, 82, 119, 119, 13, 128, 82, 30, 30, 13, 129, 37, 99, 130, 130, 30, 30, 13, 46, 46, 131, 93, 93, 30, 30, 47, 48, 49, 50, 51, 51, 13, 52, 53, 46, 132, 132, 54, 54, 64, 65, 66, 133, 88, 88, 13, 44, 45, 37, 69, 69, 75, 134, 76, 77, 79, 79, 13, 44, 45, 37, 84, 84, 13, 46, 36, 45, 135, 135, 30, 30, 55, 56, 57, 71, 59, 59, 60, 61, 62, 72, 63, 63, 13, 44, 45, 73, 74, 74, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 86, 86, 137, 137, 30, 30, 64, 65, 66, 87, 88, 88, 13, 89, 90, 82, 91, 91, 92, 92, 69, 69, 13, 44, 45, 37, 30, 30, 13, 46, 36, 45, 94, 94, 70, 70, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 95, 95, 96, 96, 97, 97, 13, 46, 37, 99, 138, 138, 138, 138, 30, 30, 139, 140, 141, 142, 143, 143, 13, 144, 52, 53, 145, 145, 146, 146, 13, 147, 52, 53, 148, 148, 30, 30, 149, 150, 151, 152, 153, 153, 13, 118, 37, 99, 154, 154, 13, 46, 27, 155, 156, 156, 157, 157, 30, 30, 158, 159, 160, 161, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 172, 173, 174, 175, 176, 176, 13, 46, 27, 177, 178, 178, 179, 179, 180, 180, 181, 182, 183, 184, 185, 185, 163, 164, 164, 165, 186, 186, 187, 188, 189, 190, 191, 191, 192, 193, 194, 195, 196, 196, 13, 44, 37, 197, 198, 198, 199, 199, 200, 201, 202, 203, 204, 204, 13, 46, 205, 52, 206, 206, 207, 207, 208, 208, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 215, 215, 216, 216, 217, 217, 13, 218, 52, 36, 219, 219, 30, 30, 13, 44, 37, 220, 103, 103, 198, 198, 30, 30, 221, 222, 223, 224, 225, 225, 13, 46, 205, 52, 226, 226, 206, 206, 227, 227, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 228, 228, 215, 215, 217, 217, 13, 218, 52, 36, 229, 229, 219, 219, 30, 30, 13, 46, 230, 98, 231, 231, 231, 231, 30, 30, 232, 233, 234, 235, 236, 236, 60, 237, 238, 239, 240, 240, 13, 44, 45, 37, 74, 74, 60, 72, 121, 122, 123, 123, 113, 124, 125, 241, 126, 126, 13, 127, 82, 101, 242, 242, 243, 243, 119, 119, 13, 128, 82, 101, 244, 244, 244, 244, 30, 30, 13, 129, 37, 99, 130, 130, 30, 30, 13, 46, 46, 131, 245, 245, 245, 245, 30, 30, 47, 48, 49, 50, 51, 51, 13, 52, 53, 46, 132, 132, 106, 106, 54, 54, 64, 65, 66, 133, 88, 88, 13, 246, 98, 101, 247, 247, 248, 248, 69, 69, 13, 249, 98, 101, 250, 250, 30, 30, 13, 44, 37, 101, 251, 251, 103, 103, 30, 30, 13, 36, 37, 101, 252, 252, 253, 253, 30, 30, 13, 44, 37, 101, 103, 103, 30, 30, 13, 36, 37, 101, 254, 254, 105, 105, 30, 30, 255, 256, 257, 258, 259, 259, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 268, 269, 270, 271, 272, 272, 113, 114, 115, 273, 274, 274, 13, 127, 82, 99, 119, 119, 13, 46, 46, 128, 275, 275, 276, 276, 30, 30, 277, 278, 279, 280, 281, 281, 282, 283, 284, 285, 286, 286, 13, 46, 37, 99, 287, 287, 288, 288, 289, 289, 290, 291, 292, 293, 294, 294, 13, 46, 144, 52, 295, 295, 296, 296, 297, 298, 299, 300, 301, 301, 13, 46, 147, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 308, 309, 309, 13, 46, 27, 98, 310, 310, 157, 157, 311, 311, 158, 159, 160, 312, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 313, 314, 315, 316, 317, 317, 255, 256, 257, 258, 318, 318, 260, 261, 262, 263, 264, 264, 319, 320, 321, 322, 323, 323, 324, 325, 326, 327, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 13, 127, 82, 101, 331, 331, 332, 332, 119, 119, 13, 46, 46, 128, 333, 333, 334, 334, 30, 30, 335, 336, 337, 338, 339, 339, 282, 283, 284, 285, 340, 340, 255, 256, 257, 258, 341, 341, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 113, 273, 266, 124, 330, 330, 13, 127, 82, 99, 119, 119, 13, 46, 46, 128, 303, 303, 342, 342, 30, 30, 305, 306, 307, 343, 309, 309, 282, 283, 284, 285, 344, 344, 13, 46, 37, 99, 345, 345, 346, 346, 289, 289, 347, 348, 349, 350, 351, 351, 13, 46, 205, 52, 352, 352, 295, 295, 353, 353, 297, 298, 299, 354, 301, 301, 13, 46, 214, 52, 295, 295, 304, 304, 297, 298, 299, 355, 301, 301, 13, 46, 218, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 356, 309, 309, 13, 21, 107, 107, 107, 107, 311, 311], "index": 8}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 203, "ast": ["{#######}", {"trailing": "\n        \n        ", "leading": "", "line": 175, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n        \n        ", "line": 177, "leaf": true, "token": "Boolean"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 177, "leaf": true, "token": "consistent"}, {"trailing": " ", "leading": " ", "line": 177, "token": "="}, {"trailing": "", "leading": " ", "line": 177, "leaf": true, "token": "true"}]], {"trailing": "\n\n        \n        // split tree\n        ", "leading": "", "line": 177, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n\n        \n        // split tree\n        ", "line": 181, "token": "int"}, {"trailing": "", "leading": " ", "var": true, "line": 181, "leaf": true, "token": "var"}], {"trailing": "\n        ", "leading": "", "line": 181, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n        ", "line": 182, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 182, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 182, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 182, "token": "."}, {"trailing": " ", "leading": "", "line": 182, "leaf": true, "token": "varType"}], {"trailing": " ", "leading": " ", "line": 182, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 182, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 182, "token": "."}, {"trailing": "", "leading": "", "line": 182, "leaf": true, "token": "VarType"}], {"trailing": "", "leading": "", "line": 182, "token": "."}, {"trailing": "", "leading": "", "line": 182, "leaf": true, "token": "ASC"}]], {"trailing": "", "leading": "", "line": 182, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 182, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 183, "leaf": true, "token": "var"}, {"trailing": " ", "leading": " ", "line": 183, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 183, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 183, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 183, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 183, "token": "("}, {"trailing": "", "leading": "", "line": 183, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 183, "token": ")"}]]], {"trailing": "\n        ", "leading": "", "line": 183, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 184, "token": "}"}], {"trailing": " ", "leading": " ", "line": 184, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 184, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 185, "leaf": true, "token": "var"}, {"trailing": " ", "leading": " ", "line": 185, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 185, "leaf": true, "token": "selectVarByDomain"}, {"trailing": "", "leading": "", "line": 185, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 185, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 185, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 185, "token": ";"}], {"trailing": "\n        ", "leading": "\n        ", "line": 186, "token": "}"}]], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 187, "token": "int"}, {"trailing": "", "leading": " ", "var": true, "line": 187, "leaf": true, "token": "val"}], {"trailing": "\n        ", "leading": "", "line": 187, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n        ", "line": 188, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 188, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 188, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 188, "token": "."}, {"trailing": " ", "leading": "", "line": 188, "leaf": true, "token": "valType"}], {"trailing": " ", "leading": " ", "line": 188, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 188, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 188, "token": "."}, {"trailing": "", "leading": "", "line": 188, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": "", "line": 188, "token": "."}, {"trailing": "", "leading": "", "line": 188, "leaf": true, "token": "ASC"}]], {"trailing": "", "leading": "", "line": 188, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 188, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 189, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 189, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 189, "leaf": true, "token": "selectVal"}, {"trailing": "", "leading": "", "line": 189, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 189, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 189, "token": ")"}]], {"trailing": " \n\n        ", "leading": "", "line": 189, "token": ";"}], {"trailing": " ", "leading": " \n\n        ", "line": 191, "token": "}"}], {"trailing": " ", "leading": " ", "line": 191, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 191, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 192, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 192, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 192, "leaf": true, "token": "selectValByConflicts"}, {"trailing": "", "leading": "", "line": 192, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 192, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 192, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 192, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 192, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 192, "token": ";"}], {"trailing": "\n        \n        ", "leading": "\n        ", "line": 193, "token": "}"}]], ["#;", ["#(#)", {"trailing": "", "leading": "\n        \n        ", "line": 195, "leaf": true, "token": "searchLeft"}, {"trailing": "", "leading": "", "line": 195, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 195, "leaf": true, "token": "varList"}, {"trailing": " ", "leading": "", "line": 195, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 195, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 195, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 195, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 195, "token": ")"}], {"trailing": "\n      \n        \n        ", "leading": "", "line": 195, "token": ";"}], ["#;", ["#(#)", {"trailing": "", "leading": "\n      \n        \n        ", "line": 198, "leaf": true, "token": "searchRight"}, {"trailing": "", "leading": "", "line": 198, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 198, "leaf": true, "token": "varList"}, {"trailing": " ", "leading": "", "line": 198, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 198, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 198, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 198, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 198, "token": ")"}], {"trailing": "\n\n\n\n\n    ", "leading": "", "line": 198, "token": ";"}], {"trailing": "\n    \n\n    ", "leading": "\n\n\n\n\n    ", "line": 203, "token": "}"}], "method": "search2Way", "beginline": 175, "class": "BinaryCSPSolver", "features": [357, 358, 359, 13, 44, 118, 37, 360, 360, 361, 362, 363, 364, 365, 365, 13, 45, 37, 366, 366, 13, 46, 27, 367, 30, 30, 368, 369, 370, 371, 372, 372, 163, 164, 164, 165, 373, 373, 374, 375, 376, 377, 378, 378, 379, 380, 381, 382, 383, 383, 13, 44, 37, 197, 384, 384, 385, 385, 13, 46, 36, 37, 30, 30, 55, 56, 57, 71, 59, 59, 60, 61, 62, 72, 63, 63, 13, 44, 37, 220, 103, 103, 384, 384, 74, 74, 386, 387, 388, 389, 390, 390, 13, 52, 36, 37, 391, 391, 392, 392, 13, 45, 37, 30, 30, 13, 46, 27, 367, 393, 393, 30, 30, 181, 182, 183, 394, 185, 185, 163, 164, 164, 165, 186, 186, 187, 188, 189, 190, 191, 191, 379, 380, 381, 382, 395, 395, 13, 44, 37, 197, 384, 384, 385, 385, 396, 397, 398, 399, 400, 400, 13, 52, 36, 37, 401, 401, 401, 401, 402, 402, 13, 44, 37, 220, 103, 103, 384, 384, 30, 30, 403, 404, 405, 406, 407, 407, 13, 144, 52, 36, 145, 145, 408, 408, 409, 409, 13, 147, 52, 36, 410, 410, 411, 411, 30, 30, 412, 413, 414, 415, 415, 13, 205, 52, 37, 416, 416, 417, 417, 418, 418, 13, 214, 52, 37, 215, 215, 216, 216, 30, 30, 13, 218, 52, 37, 419, 419, 419, 419, 30, 30, 420, 421, 422, 423, 423, 13, 205, 52, 37, 424, 424, 416, 416, 425, 425, 13, 214, 52, 37, 228, 228, 215, 215, 30, 30, 13, 218, 52, 37, 229, 229, 419, 419, 30, 30], "index": 9}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 303, "ast": ["{#########}", {"trailing": "\n        ", "leading": "", "line": 206, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 207, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 207, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 207, "leaf": true, "token": "incrementNodesSearched"}, {"trailing": "", "leading": "", "line": 207, "token": "("}, {"trailing": "", "leading": "", "line": 207, "token": ")"}]], {"trailing": "\n        // System.out.println(\"LHS\");\n        // TODO should be checking for being solved here\n        ", "leading": "", "line": 207, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n        // System.out.println(\"LHS\");\n        // TODO should be checking for being solved here\n        ", "var": true, "line": 210, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 210, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 210, "leaf": true, "token": "assign"}, {"trailing": "", "leading": "", "line": 210, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 210, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 210, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 210, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 210, "token": ")"}]], {"trailing": "\n        // if every variable has been assigned\n        // System.out.println(\"varList is: \" + varList);\n\n        // 1 as varList will contain the final variable (var) at this point\n        ", "leading": "", "line": 210, "token": ";"}], ["if##", {"trailing": "", "leading": "\n        // if every variable has been assigned\n        // System.out.println(\"varList is: \" + varList);\n\n        // 1 as varList will contain the final variable (var) at this point\n        ", "line": 215, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 215, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 215, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 215, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 215, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 215, "token": "("}, {"trailing": " ", "leading": "", "line": 215, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 215, "token": "=="}, {"trailing": "", "leading": " ", "line": 215, "leaf": true, "token": "1"}], {"trailing": "", "leading": "", "line": 215, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 215, "token": "{"}, ["if##else#", {"trailing": "", "leading": "\n            ", "line": 216, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 216, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 216, "token": "!"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 216, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 216, "token": "."}, {"trailing": "", "leading": "", "line": 216, "leaf": true, "token": "allSolutions"}]], {"trailing": "", "leading": "", "line": 216, "token": ")"}], ["{####}", {"trailing": "\n                ", "leading": "", "line": 216, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 217, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 217, "token": "."}, {"trailing": "", "leading": "", "line": 217, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 217, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 217, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 217, "token": "("}, ["#+#", ["#+#", {"trailing": " ", "leading": "", "line": 217, "leaf": true, "token": "\"Total time \""}, {"trailing": " ", "leading": " ", "line": 217, "token": "+"}, ["(#)", {"trailing": "", "leading": " ", "line": 217, "token": "("}, ["#-#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 217, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 217, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 217, "leaf": true, "token": "currentTimeMillis"}, {"trailing": "", "leading": "", "line": 217, "token": "("}, {"trailing": " ", "leading": "", "line": 217, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 217, "token": "-"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 217, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 217, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 217, "leaf": true, "token": "getStartTime"}, {"trailing": "", "leading": "", "line": 217, "token": "("}, {"trailing": "", "leading": "", "line": 217, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 217, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 217, "token": "+"}, {"trailing": "", "leading": " ", "line": 217, "leaf": true, "token": "\"ms\""}], {"trailing": "", "leading": "", "line": 217, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 217, "token": ";"}], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 218, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 218, "token": "."}, {"trailing": "", "leading": "", "line": 218, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 218, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 218, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 218, "token": "("}, ["#+#", {"trailing": " ", "leading": "", "line": 218, "leaf": true, "token": "\"Nodes searched: \""}, {"trailing": " ", "leading": " ", "line": 218, "token": "+"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 218, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 218, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 218, "leaf": true, "token": "getNodesSearched"}, {"trailing": "", "leading": "", "line": 218, "token": "("}, {"trailing": "", "leading": "", "line": 218, "token": ")"}]]], {"trailing": "", "leading": "", "line": 218, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 218, "token": ";"}], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 219, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 219, "token": "."}, {"trailing": "", "leading": "", "line": 219, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 219, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 219, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 219, "token": "("}, ["#+#", {"trailing": " ", "leading": "", "line": 219, "leaf": true, "token": "\"Arc Revisions: \""}, {"trailing": " ", "leading": " ", "line": 219, "token": "+"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 219, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 219, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 219, "leaf": true, "token": "getArcRevisions"}, {"trailing": "", "leading": "", "line": 219, "token": "("}, {"trailing": "", "leading": "", "line": 219, "token": ")"}]]], {"trailing": "", "leading": "", "line": 219, "token": ")"}]], {"trailing": "\n                // for(int i = 0; i < instance.getNoVariables(); i ++){\n                //     System.out.println(\"Var: \" + i + \" Val: \" + instance.getVarAssignment(i).getAsInt());\n                    \n                // }\n                \n                // running these will allow for visual checking\n                // (the chess checker will also logically check it)\n                // note that these are for testing, and can crash the solution if the wrong problem instance\n                // is given to it. as for example we cannot check a sudoku with say 30 variables\n                // VisualChecker.drawChess(instance);\n                // VisualChecker.drawSudoku(instance);\n                // VisualChecker.drawLangsfords(instance);\n                \n                ", "leading": "", "line": 219, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n                // for(int i = 0; i < instance.getNoVariables(); i ++){\n                //     System.out.println(\"Var: \" + i + \" Val: \" + instance.getVarAssignment(i).getAsInt());\n                    \n                // }\n                \n                // running these will allow for visual checking\n                // (the chess checker will also logically check it)\n                // note that these are for testing, and can crash the solution if the wrong problem instance\n                // is given to it. as for example we cannot check a sudoku with say 30 variables\n                // VisualChecker.drawChess(instance);\n                // VisualChecker.drawSudoku(instance);\n                // VisualChecker.drawLangsfords(instance);\n                \n                ", "var": true, "line": 233, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 233, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 233, "leaf": true, "token": "exit"}, {"trailing": "", "leading": "", "line": 233, "token": "("}, {"trailing": "", "leading": "", "line": 233, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 233, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 233, "token": ";"}], {"trailing": "\n            // store solution then force backtrack so that we will keep checking all solutions\n            ", "leading": "\n            ", "line": 234, "token": "}"}], {"trailing": " ", "leading": "\n            // store solution then force backtrack so that we will keep checking all solutions\n            ", "line": 236, "token": "else"}, ["{####return;}", {"trailing": "\n                ", "leading": " ", "line": 236, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n                ", "line": 237, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 237, "token": "<"}, {"trailing": "", "leading": "", "line": 237, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 237, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 237, "leaf": true, "token": "sol"}, {"trailing": " ", "leading": " ", "line": 237, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 237, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 237, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 237, "token": "<"}, {"trailing": "", "leading": "", "line": 237, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 237, "token": ">"}]], {"trailing": "", "leading": "", "line": 237, "token": "("}, {"trailing": "", "leading": "", "line": 237, "token": ")"}]]]], {"trailing": "\n                ", "leading": "", "line": 237, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n                ", "line": 238, "token": "for"}, {"trailing": "", "leading": "", "line": 238, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 238, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 238, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 238, "token": "="}, {"trailing": "", "leading": " ", "line": 238, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 238, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 238, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 238, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 238, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 238, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 238, "leaf": true, "token": "getNoVariables"}, {"trailing": "", "leading": "", "line": 238, "token": "("}, {"trailing": "", "leading": "", "line": 238, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 238, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 238, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 238, "token": "++"}]], {"trailing": "", "leading": "", "line": 238, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": "", "line": 238, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                    ", "var": true, "line": 239, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 239, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 239, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 239, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 239, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 239, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 239, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 239, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 239, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 239, "token": ")"}]], {"trailing": "", "leading": "", "line": 239, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 239, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 239, "token": "("}, {"trailing": "", "leading": "", "line": 239, "token": ")"}]], {"trailing": "", "leading": "", "line": 239, "token": ")"}]], {"trailing": "\n                    \n                ", "leading": "", "line": 239, "token": ";"}], {"trailing": "\n                ", "leading": "\n                    \n                ", "line": 241, "token": "}"}]], ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 242, "leaf": true, "token": "allSolutions"}, {"trailing": "", "leading": "", "line": 242, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 242, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 242, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 242, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 242, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 242, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 243, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 243, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 243, "leaf": true, "token": "unassign"}, {"trailing": "", "leading": "", "line": 243, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 243, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 243, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 243, "token": ";"}], {"trailing": "", "leading": "\n                ", "line": 244, "token": "return"}, {"trailing": "\n            ", "leading": "", "line": 244, "token": ";"}, {"trailing": "\n            \n            \n        ", "leading": "\n            ", "line": 245, "token": "}"}]], {"trailing": "\n        //print solution and exit\n\n        \n        // used to revert back if we have to\n        // ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n        \n        // if we are not using AC3_1, this will return itself, causing minimal slowdown as constant time assignment by reference\n        // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n        \n        \n\n        // if still maintaining arc consistency, then we can continue into the tree\n        // looks like it is adding additional work, but I suspect the compiler can handle this pretty well since the pruneType is final\n        ", "leading": "\n            \n            \n        ", "line": 248, "token": "}"}]], ["#;", ["##", {"trailing": " ", "leading": "\n        //print solution and exit\n\n        \n        // used to revert back if we have to\n        // ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n        \n        // if we are not using AC3_1, this will return itself, causing minimal slowdown as constant time assignment by reference\n        // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n        \n        \n\n        // if still maintaining arc consistency, then we can continue into the tree\n        // looks like it is adding additional work, but I suspect the compiler can handle this pretty well since the pruneType is final\n        ", "line": 262, "leaf": true, "token": "RevertData"}, {"trailing": "", "leading": " ", "var": true, "line": 262, "leaf": true, "token": "revertData"}], {"trailing": "\n        ", "leading": "", "line": 262, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n        ", "line": 263, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 263, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 263, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 263, "token": "."}, {"trailing": " ", "leading": "", "line": 263, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 263, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 263, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 263, "token": "."}, {"trailing": "", "leading": "", "line": 263, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 263, "token": "."}, {"trailing": "", "leading": "", "line": 263, "leaf": true, "token": "FC"}]], {"trailing": "", "leading": "", "line": 263, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 263, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 264, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 264, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 264, "leaf": true, "token": "forwardChecking"}, {"trailing": "", "leading": "", "line": 264, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 264, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 264, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 264, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 264, "token": "("}, {"trailing": "", "leading": "", "line": 264, "token": ")"}]], {"trailing": " ", "leading": "", "line": 264, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 264, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 264, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 264, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 264, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 264, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 265, "token": "}"}], {"trailing": " ", "leading": " ", "line": 265, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 265, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 266, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 266, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 266, "leaf": true, "token": "maintainArcConsistency"}, {"trailing": "", "leading": "", "line": 266, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 266, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 266, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 266, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 266, "token": "("}, {"trailing": "", "leading": "", "line": 266, "token": ")"}]], {"trailing": " ", "leading": "", "line": 266, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 266, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 266, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 266, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 266, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 266, "token": ";"}], {"trailing": "\n\n        // no errors\n        ", "leading": "\n        ", "line": 267, "token": "}"}]], ["if##", {"trailing": " ", "leading": "\n\n        // no errors\n        ", "line": 270, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 270, "token": "("}, ["#>=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 270, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 270, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 270, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 270, "token": "("}, {"trailing": " ", "leading": "", "line": 270, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 270, "token": ">="}, {"trailing": "", "leading": " ", "line": 270, "leaf": true, "token": "0"}], {"trailing": "", "leading": "", "line": 270, "token": ")"}], ["{###}", {"trailing": "\n            \n            // allows us to revert to the original varList as required\n            ", "leading": "", "line": 270, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n            \n            // allows us to revert to the original varList as required\n            ", "line": 273, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 273, "token": "<"}, {"trailing": "", "leading": "", "line": 273, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 273, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 273, "leaf": true, "token": "tempList"}, {"trailing": " ", "leading": " ", "line": 273, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 273, "leaf": true, "token": "deepCopyIntList"}, {"trailing": "", "leading": "", "line": 273, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 273, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 273, "token": ")"}]]], {"trailing": "\n            // variable has been assigned so we no longer need to worry about it.\n            ", "leading": "", "line": 273, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n            // variable has been assigned so we no longer need to worry about it.\n            ", "var": true, "line": 275, "leaf": true, "token": "tempList"}, {"trailing": "", "leading": "", "line": 275, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 275, "leaf": true, "token": "remove"}, {"trailing": "", "leading": "", "line": 275, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 275, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 275, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 275, "leaf": true, "token": "valueOf"}, {"trailing": "", "leading": "", "line": 275, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 275, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 275, "token": ")"}]], {"trailing": "", "leading": "", "line": 275, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 275, "token": ";"}], ["#;", ["#(#)", {"trailing": "", "leading": "\n            ", "line": 276, "leaf": true, "token": "search2Way"}, {"trailing": "", "leading": "", "line": 276, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 276, "leaf": true, "token": "tempList"}, {"trailing": "", "leading": "", "line": 276, "token": ")"}], {"trailing": "\n\n            \n            \n        ", "leading": "", "line": 276, "token": ";"}], {"trailing": "\n        // remove pruning and unasign\n        // unasign\n        ", "leading": "\n\n            \n            \n        ", "line": 280, "token": "}"}]], ["#;", ["#.#", {"trailing": "", "leading": "\n        // remove pruning and unasign\n        // unasign\n        ", "var": true, "line": 283, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 283, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 283, "leaf": true, "token": "unassign"}, {"trailing": "", "leading": "", "line": 283, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 283, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 283, "token": ")"}]], {"trailing": "\n        \n        // instance.setVarDomains(revertVarDoms);\n        //revert the domains\n        ", "leading": "", "line": 283, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        \n        // instance.setVarDomains(revertVarDoms);\n        //revert the domains\n        ", "line": 287, "token": "for"}, {"trailing": "", "leading": "", "line": 287, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 287, "token": "."}, {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 287, "token": "<"}, {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 287, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 287, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 287, "token": "<"}, {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 287, "token": ">"}]], {"trailing": " ", "leading": "", "line": 287, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 287, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 287, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 287, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 287, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "getChangedDomains"}, {"trailing": "", "leading": "", "line": 287, "token": "("}, {"trailing": "", "leading": "", "line": 287, "token": ")"}]], {"trailing": "", "leading": "", "line": 287, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 287, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 287, "token": "("}, {"trailing": "", "leading": "", "line": 287, "token": ")"}]]], {"trailing": "", "leading": "", "line": 287, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 287, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 288, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 288, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 288, "leaf": true, "token": "setVarDomain"}, {"trailing": "", "leading": "", "line": 288, "token": "("}, ["#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 288, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 288, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 288, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 288, "token": "("}, {"trailing": "", "leading": "", "line": 288, "token": ")"}]], {"trailing": " ", "leading": "", "line": 288, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 288, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 288, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 288, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 288, "token": "("}, {"trailing": "", "leading": "", "line": 288, "token": ")"}]]], {"trailing": "", "leading": "", "line": 288, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 288, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n        ", "line": 289, "token": "}"}]], ["if##", {"trailing": "", "leading": "\n\n        ", "line": 291, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 291, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 291, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 291, "token": "."}, {"trailing": " ", "leading": "", "line": 291, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 291, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 291, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 291, "token": "."}, {"trailing": "", "leading": "", "line": 291, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 291, "token": "."}, {"trailing": "", "leading": "", "line": 291, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 291, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 291, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n            ", "line": 292, "token": "for"}, {"trailing": "", "leading": "", "line": 292, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 292, "token": "."}, {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 292, "token": "<"}, {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 292, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 292, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 292, "token": "<"}, {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 292, "token": ","}, {"trailing": "", "leading": " ", "line": 292, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 292, "token": ">"}]], {"trailing": " ", "leading": "", "line": 292, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 292, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 292, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 292, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 292, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "getChangedLastValid"}, {"trailing": "", "leading": "", "line": 292, "token": "("}, {"trailing": "", "leading": "", "line": 292, "token": ")"}]], {"trailing": "", "leading": "", "line": 292, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 292, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 292, "token": "("}, {"trailing": "", "leading": "", "line": 292, "token": ")"}]]], {"trailing": "", "leading": "", "line": 292, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 292, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n                ", "line": 293, "token": "for"}, {"trailing": "", "leading": "", "line": 293, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 293, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 293, "token": "."}, {"trailing": "", "leading": "", "line": 293, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 293, "token": "<"}, {"trailing": "", "leading": "", "line": 293, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 293, "token": ","}, {"trailing": "", "leading": " ", "line": 293, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 293, "token": ">"}]], {"trailing": " ", "leading": " ", "var": true, "line": 293, "leaf": true, "token": "innerEntry"}, {"trailing": " ", "leading": " ", "line": 293, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 293, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 293, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 293, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 293, "token": "("}, {"trailing": "", "leading": "", "line": 293, "token": ")"}]], {"trailing": "", "leading": "", "line": 293, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 293, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 293, "token": "("}, {"trailing": "", "leading": "", "line": 293, "token": ")"}]]], {"trailing": "", "leading": "", "line": 293, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": "", "line": 293, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                    ", "var": true, "line": 294, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 294, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 294, "leaf": true, "token": "setLastValidValue"}, {"trailing": "", "leading": "", "line": 294, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 294, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 294, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 294, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 294, "token": "("}, {"trailing": "", "leading": "", "line": 294, "token": ")"}]], {"trailing": " ", "leading": "", "line": 294, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 294, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 294, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 294, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 294, "token": "("}, {"trailing": "", "leading": "", "line": 294, "token": ")"}]], {"trailing": " ", "leading": "", "line": 294, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 294, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 294, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 294, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 294, "token": "("}, {"trailing": "", "leading": "", "line": 294, "token": ")"}]]], {"trailing": "", "leading": "", "line": 294, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 294, "token": ";"}], {"trailing": "\n            ", "leading": "\n                ", "line": 295, "token": "}"}]], {"trailing": "\n        ", "leading": "\n            ", "line": 296, "token": "}"}]], {"trailing": "\n        // constant time assignment by reference, so even if we are not using this it is not a significant issue\n        // instance.setLastValid(revertLastValid);\n        \n        \n        // might be faster to just use a stack of states?\n    ", "leading": "\n        ", "line": 297, "token": "}"}]], {"trailing": "\n\n    ", "leading": "\n        // constant time assignment by reference, so even if we are not using this it is not a significant issue\n        // instance.setLastValid(revertLastValid);\n        \n        \n        // might be faster to just use a stack of states?\n    ", "line": 303, "token": "}"}], "method": "searchLeft", "beginline": 206, "class": "BinaryCSPSolver", "features": [13, 46, 37, 426, 427, 428, 429, 430, 430, 13, 46, 37, 431, 431, 432, 432, 139, 140, 141, 142, 143, 143, 13, 144, 52, 53, 146, 146, 13, 147, 52, 53, 30, 30, 13, 46, 27, 98, 30, 30, 64, 65, 66, 433, 88, 88, 75, 434, 435, 436, 436, 13, 46, 437, 367, 438, 438, 439, 439, 84, 84, 440, 441, 442, 443, 444, 444, 445, 446, 446, 447, 448, 448, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 459, 460, 460, 461, 462, 462, 445, 446, 463, 464, 465, 465, 466, 467, 468, 469, 470, 470, 13, 46, 471, 14, 472, 472, 473, 473, 474, 474, 475, 476, 477, 478, 479, 479, 480, 481, 482, 483, 484, 484, 445, 446, 446, 447, 485, 485, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 486, 487, 488, 489, 490, 490, 13, 46, 14, 52, 491, 491, 492, 492, 493, 493, 494, 495, 496, 497, 498, 498, 445, 446, 446, 447, 499, 499, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 500, 501, 502, 503, 504, 504, 13, 46, 14, 52, 505, 505, 506, 506, 507, 507, 508, 509, 510, 511, 512, 512, 445, 446, 447, 513, 514, 514, 515, 516, 517, 518, 519, 519, 60, 61, 62, 122, 520, 520, 268, 269, 269, 521, 522, 522, 113, 114, 115, 116, 274, 274, 13, 44, 118, 37, 119, 119, 268, 269, 523, 524, 525, 525, 113, 114, 115, 526, 274, 274, 13, 44, 45, 73, 119, 119, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 527, 527, 528, 528, 30, 30, 529, 530, 531, 532, 533, 533, 13, 89, 90, 82, 91, 91, 92, 92, 534, 534, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 13, 46, 46, 52, 541, 541, 542, 542, 543, 543, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 95, 95, 96, 96, 549, 549, 550, 551, 552, 553, 554, 554, 13, 46, 37, 555, 556, 556, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 557, 557, 401, 401, 543, 543, 13, 46, 37, 558, 559, 559, 560, 560, 30, 30, 561, 562, 563, 564, 565, 565, 13, 52, 53, 37, 566, 566, 567, 567, 149, 150, 151, 153, 153, 13, 118, 37, 154, 154, 13, 46, 27, 367, 568, 568, 569, 569, 30, 30, 158, 159, 160, 570, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 172, 173, 174, 571, 176, 176, 13, 44, 37, 197, 198, 198, 180, 180, 200, 201, 202, 203, 204, 204, 13, 46, 205, 52, 207, 207, 572, 572, 208, 208, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 216, 216, 215, 215, 217, 217, 13, 218, 52, 36, 573, 573, 30, 30, 13, 44, 37, 220, 103, 103, 198, 198, 30, 30, 221, 222, 223, 224, 225, 225, 13, 46, 205, 52, 226, 226, 207, 207, 227, 227, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 228, 228, 216, 216, 217, 217, 13, 218, 52, 36, 229, 229, 573, 573, 30, 30, 13, 46, 230, 98, 231, 231, 231, 231, 30, 30, 232, 233, 234, 235, 236, 236, 60, 237, 238, 240, 240, 268, 269, 269, 521, 522, 522, 113, 114, 115, 116, 274, 274, 13, 44, 118, 37, 119, 119, 574, 575, 576, 577, 578, 578, 13, 52, 36, 118, 579, 579, 579, 579, 580, 580, 13, 46, 37, 101, 581, 581, 30, 30, 582, 583, 584, 585, 586, 586, 113, 587, 588, 589, 590, 590, 591, 592, 593, 594, 595, 595, 13, 52, 53, 52, 596, 596, 596, 596, 597, 597, 598, 599, 600, 601, 602, 602, 13, 52, 37, 101, 603, 603, 401, 401, 604, 604, 13, 46, 37, 605, 605, 605, 605, 30, 30, 561, 562, 563, 564, 565, 565, 13, 52, 53, 37, 106, 106, 596, 596, 567, 567, 255, 256, 257, 258, 259, 259, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 268, 269, 270, 271, 272, 272, 113, 114, 115, 273, 274, 274, 13, 127, 82, 119, 119, 13, 46, 46, 128, 275, 275, 276, 276, 30, 30, 277, 278, 279, 280, 281, 281, 282, 283, 284, 285, 286, 286, 13, 46, 37, 99, 606, 606, 288, 288, 289, 289, 290, 291, 292, 293, 294, 294, 13, 46, 144, 52, 295, 295, 296, 296, 297, 298, 299, 300, 301, 301, 13, 46, 147, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 308, 309, 309, 13, 46, 27, 98, 310, 310, 568, 568, 311, 311, 158, 159, 160, 312, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 313, 314, 315, 316, 317, 317, 255, 256, 257, 258, 318, 318, 260, 261, 262, 263, 264, 264, 319, 320, 321, 322, 323, 323, 324, 325, 326, 327, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 13, 127, 82, 101, 331, 331, 332, 332, 119, 119, 13, 46, 46, 128, 333, 333, 334, 334, 30, 30, 335, 336, 337, 338, 339, 339, 282, 283, 284, 285, 340, 340, 255, 256, 257, 258, 341, 341, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 113, 273, 266, 124, 330, 330, 13, 127, 82, 99, 119, 119, 13, 46, 46, 128, 303, 303, 342, 342, 30, 30, 305, 306, 307, 343, 309, 309, 282, 283, 284, 285, 344, 344, 13, 46, 37, 99, 345, 345, 346, 346, 289, 289, 347, 348, 349, 350, 351, 351, 13, 46, 205, 52, 352, 352, 295, 295, 353, 353, 297, 298, 299, 354, 301, 301, 13, 46, 214, 52, 295, 295, 304, 304, 297, 298, 299, 355, 301, 301, 13, 46, 218, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 356, 309, 309], "index": 10}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 359, "ast": ["{#####}", {"trailing": "\n        ", "leading": "", "line": 305, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 306, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 306, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 306, "leaf": true, "token": "incrementNodesSearched"}, {"trailing": "", "leading": "", "line": 306, "token": "("}, {"trailing": "", "leading": "", "line": 306, "token": ")"}]], {"trailing": "\n        // System.out.println(\"RHS\");\n        // remove this value as an option from the domain\n        // use list for domain options\n        ", "leading": "", "line": 306, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "\n        // System.out.println(\"RHS\");\n        // remove this value as an option from the domain\n        // use list for domain options\n        ", "line": 310, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 310, "token": "<"}, {"trailing": "", "leading": "", "line": 310, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 310, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 310, "leaf": true, "token": "revertDomain"}, {"trailing": " ", "leading": " ", "line": 310, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 310, "leaf": true, "token": "deepCopyIntList"}, {"trailing": "", "leading": "", "line": 310, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 310, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 310, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 310, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 310, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 310, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 310, "token": ")"}]], {"trailing": "", "leading": "", "line": 310, "token": ")"}]]], {"trailing": "\n        \n        // System.out.println(instance.getVarDomain(var).size());\n        \n        ", "leading": "", "line": 310, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n        \n        // System.out.println(instance.getVarDomain(var).size());\n        \n        ", "var": true, "line": 314, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 314, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 314, "leaf": true, "token": "deleteDomValue"}, {"trailing": "", "leading": "", "line": 314, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 314, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 314, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 314, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 314, "token": ")"}]], {"trailing": "\n        // System.out.println(instance.getVarDomain(var).size());\n        ", "leading": "", "line": 314, "token": ";"}], ["if##", {"trailing": "", "leading": "\n        // System.out.println(instance.getVarDomain(var).size());\n        ", "line": 316, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 316, "token": "("}, ["#>#", ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 316, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 316, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 316, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 316, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 316, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 316, "token": ")"}]], {"trailing": "", "leading": "", "line": 316, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 316, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 316, "token": "("}, {"trailing": " ", "leading": "", "line": 316, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 316, "token": ">"}, {"trailing": "", "leading": " ", "line": 316, "leaf": true, "token": "0"}], {"trailing": "", "leading": "", "line": 316, "token": ")"}], ["{#####}", {"trailing": "\n            // used to revert back if we have to\n            // only do these if we still have domain values as they are expensive\n            //ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n            // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n            // if still maintaining arc consistency, then we can continue into the tree\n            ", "leading": "", "line": 316, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n            // used to revert back if we have to\n            // only do these if we still have domain values as they are expensive\n            //ArrayList<List<Integer>> revertVarDoms = deepCopy2DIntList(instance.getVarDomains());\n            // HashMap<BinaryArcConstraint, HashMap<Integer, Integer>> revertLastValid = deepCopy2DIntMap(instance.getLastValid());\n            // if still maintaining arc consistency, then we can continue into the tree\n            ", "line": 322, "leaf": true, "token": "RevertData"}, {"trailing": "", "leading": " ", "var": true, "line": 322, "leaf": true, "token": "revertData"}], {"trailing": "\n            ", "leading": "", "line": 322, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n            ", "line": 323, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 323, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 323, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 323, "token": "."}, {"trailing": " ", "leading": "", "line": 323, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 323, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 323, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 323, "token": "."}, {"trailing": "", "leading": "", "line": 323, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 323, "token": "."}, {"trailing": "", "leading": "", "line": 323, "leaf": true, "token": "FC"}]], {"trailing": "", "leading": "", "line": 323, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 323, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 324, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 324, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 324, "leaf": true, "token": "forwardChecking"}, {"trailing": "", "leading": "", "line": 324, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 324, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 324, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 324, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 324, "token": "("}, {"trailing": "", "leading": "", "line": 324, "token": ")"}]], {"trailing": " ", "leading": "", "line": 324, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 324, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 324, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 324, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 324, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 324, "token": ";"}], {"trailing": " ", "leading": "\n            ", "line": 325, "token": "}"}], {"trailing": " ", "leading": " ", "line": 325, "token": "else"}, ["{#}", {"trailing": "\n                ", "leading": " ", "line": 325, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 326, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 326, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 326, "leaf": true, "token": "maintainArcConsistency"}, {"trailing": "", "leading": "", "line": 326, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 326, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 326, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 326, "leaf": true, "token": "getConstraints"}, {"trailing": "", "leading": "", "line": 326, "token": "("}, {"trailing": "", "leading": "", "line": 326, "token": ")"}]], {"trailing": " ", "leading": "", "line": 326, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 326, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 326, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 326, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 326, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 326, "token": ";"}], {"trailing": "\n\n            // no errors\n            ", "leading": "\n            ", "line": 327, "token": "}"}]], ["if##", {"trailing": " ", "leading": "\n\n            // no errors\n            ", "line": 330, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 330, "token": "("}, ["#>=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 330, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 330, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 330, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 330, "token": "("}, {"trailing": " ", "leading": "", "line": 330, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 330, "token": ">="}, {"trailing": "", "leading": " ", "line": 330, "leaf": true, "token": "0"}], {"trailing": "", "leading": "", "line": 330, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 330, "token": "{"}, ["#;", ["#(#)", {"trailing": "", "leading": "\n                ", "line": 331, "leaf": true, "token": "search2Way"}, {"trailing": "", "leading": "", "line": 331, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 331, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 331, "token": ")"}], {"trailing": "\n            ", "leading": "", "line": 331, "token": ";"}], {"trailing": "\n\n\n\n            // instance.setVarDomains(revertVarDoms);\n            ", "leading": "\n            ", "line": 332, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n\n\n\n            // instance.setVarDomains(revertVarDoms);\n            ", "line": 337, "token": "for"}, {"trailing": "", "leading": "", "line": 337, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 337, "token": "."}, {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 337, "token": "<"}, {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 337, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 337, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 337, "token": "<"}, {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 337, "token": ">"}]], {"trailing": " ", "leading": "", "line": 337, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 337, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 337, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 337, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 337, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "getChangedDomains"}, {"trailing": "", "leading": "", "line": 337, "token": "("}, {"trailing": "", "leading": "", "line": 337, "token": ")"}]], {"trailing": "", "leading": "", "line": 337, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 337, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 337, "token": "("}, {"trailing": "", "leading": "", "line": 337, "token": ")"}]]], {"trailing": "", "leading": "", "line": 337, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 337, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 338, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 338, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 338, "leaf": true, "token": "setVarDomain"}, {"trailing": "", "leading": "", "line": 338, "token": "("}, ["#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 338, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 338, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 338, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 338, "token": "("}, {"trailing": "", "leading": "", "line": 338, "token": ")"}]], {"trailing": " ", "leading": "", "line": 338, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 338, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 338, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 338, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 338, "token": "("}, {"trailing": "", "leading": "", "line": 338, "token": ")"}]]], {"trailing": "", "leading": "", "line": 338, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 338, "token": ";"}], {"trailing": "\n\n            ", "leading": "\n            ", "line": 339, "token": "}"}]], ["if##", {"trailing": "", "leading": "\n\n            ", "line": 341, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 341, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 341, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 341, "token": "."}, {"trailing": " ", "leading": "", "line": 341, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 341, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 341, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 341, "token": "."}, {"trailing": "", "leading": "", "line": 341, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 341, "token": "."}, {"trailing": "", "leading": "", "line": 341, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 341, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 341, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n                ", "line": 342, "token": "for"}, {"trailing": "", "leading": "", "line": 342, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 342, "token": "."}, {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 342, "token": "<"}, {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 342, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 342, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 342, "token": "<"}, {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 342, "token": ","}, {"trailing": "", "leading": " ", "line": 342, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 342, "token": ">"}]], {"trailing": " ", "leading": "", "line": 342, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 342, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 342, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 342, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 342, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "getChangedLastValid"}, {"trailing": "", "leading": "", "line": 342, "token": "("}, {"trailing": "", "leading": "", "line": 342, "token": ")"}]], {"trailing": "", "leading": "", "line": 342, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 342, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 342, "token": "("}, {"trailing": "", "leading": "", "line": 342, "token": ")"}]]], {"trailing": "", "leading": "", "line": 342, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": "", "line": 342, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n                    ", "line": 343, "token": "for"}, {"trailing": "", "leading": "", "line": 343, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 343, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 343, "token": "."}, {"trailing": "", "leading": "", "line": 343, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 343, "token": "<"}, {"trailing": "", "leading": "", "line": 343, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 343, "token": ","}, {"trailing": "", "leading": " ", "line": 343, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 343, "token": ">"}]], {"trailing": " ", "leading": " ", "var": true, "line": 343, "leaf": true, "token": "innerEntry"}, {"trailing": " ", "leading": " ", "line": 343, "token": ":"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 343, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 343, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 343, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 343, "token": "("}, {"trailing": "", "leading": "", "line": 343, "token": ")"}]], {"trailing": "", "leading": "", "line": 343, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 343, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 343, "token": "("}, {"trailing": "", "leading": "", "line": 343, "token": ")"}]]], {"trailing": "", "leading": "", "line": 343, "token": ")"}, ["{#}", {"trailing": "\n                        ", "leading": "", "line": 343, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                        ", "var": true, "line": 344, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 344, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 344, "leaf": true, "token": "setLastValidValue"}, {"trailing": "", "leading": "", "line": 344, "token": "("}, ["#,#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 344, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 344, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 344, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 344, "token": "("}, {"trailing": "", "leading": "", "line": 344, "token": ")"}]], {"trailing": " ", "leading": "", "line": 344, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 344, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 344, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 344, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 344, "token": "("}, {"trailing": "", "leading": "", "line": 344, "token": ")"}]], {"trailing": " ", "leading": "", "line": 344, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 344, "leaf": true, "token": "innerEntry"}, {"trailing": "", "leading": "", "line": 344, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 344, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 344, "token": "("}, {"trailing": "", "leading": "", "line": 344, "token": ")"}]]], {"trailing": "", "leading": "", "line": 344, "token": ")"}]], {"trailing": "\n                    ", "leading": "", "line": 344, "token": ";"}], {"trailing": "\n                ", "leading": "\n                    ", "line": 345, "token": "}"}]], {"trailing": "\n            ", "leading": "\n                ", "line": 346, "token": "}"}]], {"trailing": "\n            // instance.setLastValid(revertLastValid);\n\n        ", "leading": "\n            ", "line": 347, "token": "}"}]], {"trailing": "\n        \n        \n        ", "leading": "\n            // instance.setLastValid(revertLastValid);\n\n        ", "line": 350, "token": "}"}]], ["#;", ["#.#", {"trailing": "", "leading": "\n        \n        \n        ", "var": true, "line": 353, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 353, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 353, "leaf": true, "token": "setVarDomain"}, {"trailing": "", "leading": "", "line": 353, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 353, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 353, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 353, "leaf": true, "token": "revertDomain"}], {"trailing": "", "leading": "", "line": 353, "token": ")"}]], {"trailing": "\n        \n\n        // add value back to list\n\n        \n    ", "leading": "", "line": 353, "token": ";"}], {"trailing": "\n\n    /**\n     * forward checking of the arcs directly relying on the altered var\n     */\n    ", "leading": "\n        \n\n        // add value back to list\n\n        \n    ", "line": 359, "token": "}"}], "method": "searchRight", "beginline": 305, "class": "BinaryCSPSolver", "features": [13, 46, 37, 426, 427, 428, 429, 430, 430, 268, 269, 269, 521, 607, 607, 113, 114, 115, 116, 274, 274, 13, 44, 118, 37, 119, 119, 574, 575, 576, 577, 578, 578, 13, 46, 52, 36, 608, 608, 580, 580, 47, 48, 49, 609, 51, 51, 13, 52, 53, 52, 54, 54, 13, 46, 37, 610, 610, 611, 611, 30, 30, 612, 613, 614, 615, 616, 616, 13, 144, 52, 53, 145, 145, 617, 617, 13, 147, 52, 53, 30, 30, 13, 46, 46, 246, 618, 618, 93, 93, 30, 30, 47, 48, 49, 50, 51, 51, 13, 52, 53, 46, 566, 566, 106, 106, 54, 54, 64, 65, 66, 619, 88, 88, 60, 620, 238, 621, 621, 149, 150, 151, 622, 623, 623, 13, 118, 37, 101, 154, 154, 13, 46, 27, 367, 157, 157, 624, 624, 30, 30, 158, 159, 160, 570, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 172, 173, 174, 571, 176, 176, 13, 44, 37, 197, 198, 198, 180, 180, 200, 201, 202, 203, 204, 204, 13, 46, 205, 52, 207, 207, 625, 625, 208, 208, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 216, 216, 215, 215, 217, 217, 13, 218, 52, 36, 30, 30, 13, 44, 37, 220, 103, 103, 198, 198, 30, 30, 221, 222, 223, 224, 225, 225, 13, 46, 205, 52, 226, 226, 207, 207, 227, 227, 209, 210, 211, 212, 213, 213, 13, 214, 52, 36, 228, 228, 216, 216, 217, 217, 13, 218, 52, 36, 229, 229, 30, 30, 13, 46, 230, 98, 231, 231, 231, 231, 30, 30, 232, 233, 234, 235, 236, 236, 60, 237, 238, 626, 240, 240, 598, 599, 600, 601, 627, 627, 13, 52, 37, 101, 579, 579, 579, 579, 604, 604, 255, 256, 257, 258, 259, 259, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 268, 269, 270, 271, 272, 272, 113, 114, 115, 273, 274, 274, 13, 127, 82, 101, 119, 119, 13, 46, 46, 128, 275, 275, 276, 276, 30, 30, 277, 278, 279, 280, 281, 281, 282, 283, 284, 285, 286, 286, 13, 46, 37, 99, 288, 288, 288, 288, 289, 289, 290, 291, 292, 293, 294, 294, 13, 46, 144, 52, 295, 295, 296, 296, 297, 298, 299, 300, 301, 301, 13, 46, 147, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 308, 309, 309, 13, 46, 27, 98, 310, 310, 628, 628, 311, 311, 158, 159, 160, 312, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 313, 314, 315, 316, 317, 317, 255, 256, 257, 258, 318, 318, 260, 261, 262, 263, 264, 264, 319, 320, 321, 322, 323, 323, 324, 325, 326, 327, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 13, 127, 82, 101, 331, 331, 332, 332, 119, 119, 13, 46, 46, 128, 333, 333, 334, 334, 30, 30, 335, 336, 337, 338, 339, 339, 282, 283, 284, 285, 340, 340, 255, 256, 257, 258, 341, 341, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 113, 273, 266, 124, 330, 330, 13, 127, 82, 99, 119, 119, 13, 46, 46, 128, 303, 303, 342, 342, 30, 30, 305, 306, 307, 343, 309, 309, 282, 283, 284, 285, 344, 344, 13, 46, 37, 99, 345, 345, 346, 346, 289, 289, 347, 348, 349, 350, 351, 351, 13, 46, 205, 52, 352, 352, 295, 295, 353, 353, 297, 298, 299, 354, 301, 301, 13, 46, 214, 52, 295, 295, 304, 304, 297, 298, 299, 355, 301, 301, 13, 46, 218, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 356, 309, 309, 13, 46, 37, 629, 629, 630, 630, 311, 311, 290, 291, 292, 293, 294, 294, 13, 144, 52, 53, 631, 631, 631, 631, 296, 296, 13, 147, 52, 53, 148, 148, 30, 30], "index": 11}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 385, "ast": ["{#####}", {"trailing": "\n\n        ", "leading": "", "line": 364, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n\n        ", "line": 366, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 366, "token": "<"}, {"trailing": "", "leading": "", "line": 366, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 366, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 366, "leaf": true, "token": "constraintQueue"}, {"trailing": " ", "leading": " ", "line": 366, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 366, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 366, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 366, "token": "<"}, {"trailing": "", "leading": "", "line": 366, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": "", "leading": "", "line": 366, "token": ">"}]], {"trailing": "", "leading": "", "line": 366, "token": "("}, {"trailing": "", "leading": "", "line": 366, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 366, "token": ";"}], ["#;", ["##", {"trailing": " ", "leading": "\n        ", "line": 367, "leaf": true, "token": "RevertData"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 367, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 367, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 367, "token": "new"}, ["#()", {"trailing": "", "leading": " ", "line": 367, "leaf": true, "token": "RevertData"}, {"trailing": "", "leading": "", "line": 367, "token": "("}, {"trailing": "", "leading": "", "line": 367, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 367, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 368, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 368, "leaf": true, "token": "checkVal"}, {"trailing": " ", "leading": " ", "line": 368, "token": "="}, {"trailing": "", "leading": " ", "line": 368, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 368, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 369, "token": "for"}, {"trailing": "", "leading": " ", "line": 369, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 369, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 369, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": " ", "line": 369, "token": ":"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 369, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 369, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 369, "leaf": true, "token": "getReliantConstraints"}, {"trailing": "", "leading": "", "line": 369, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 369, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 369, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 369, "token": ")"}, ["{#}", {"trailing": "\n            // adding all arcs that include this var\n            \n            // checking for arc consistency\n            // only perform varList lookup if we have to as more expensive\n            // do not need to check any constraints from pre assigned variables\n            ", "leading": " ", "line": 369, "token": "{"}, ["if##", {"trailing": "", "leading": "\n            // adding all arcs that include this var\n            \n            // checking for arc consistency\n            // only perform varList lookup if we have to as more expensive\n            // do not need to check any constraints from pre assigned variables\n            ", "line": 375, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 375, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 375, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 375, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 375, "leaf": true, "token": "contains"}, {"trailing": "", "leading": "", "line": 375, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 375, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 375, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 375, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 375, "token": "("}, {"trailing": "", "leading": "", "line": 375, "token": ")"}]], {"trailing": "", "leading": "", "line": 375, "token": ")"}]], {"trailing": "", "leading": "", "line": 375, "token": ")"}], ["{##}", {"trailing": "\n                ", "leading": "", "line": 375, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 376, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 376, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 376, "leaf": true, "token": "revise"}, {"trailing": "", "leading": "", "line": 376, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 376, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": "", "line": 376, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 376, "leaf": true, "token": "constraint"}], {"trailing": "", "leading": "", "line": 376, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 376, "token": ";"}], ["if##", {"trailing": " ", "leading": "\n                ", "line": 377, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 377, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 377, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 377, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 377, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 377, "token": "("}, {"trailing": " ", "leading": "", "line": 377, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 377, "token": "=="}, ["-#", {"trailing": "", "leading": " ", "line": 377, "token": "-"}, {"trailing": "", "leading": "", "line": 377, "leaf": true, "token": "1"}]], {"trailing": "", "leading": "", "line": 377, "token": ")"}], ["{#}", {"trailing": "\n                    ", "leading": "", "line": 377, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n                    ", "line": 378, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 378, "leaf": true, "token": "revertData"}, {"trailing": "\n                ", "leading": "", "line": 378, "token": ";"}], {"trailing": "\n            ", "leading": "\n                ", "line": 379, "token": "}"}]], {"trailing": "\n        ", "leading": "\n            ", "line": 380, "token": "}"}]], {"trailing": "\n\n        // consistent after forward checking so return true\n        ", "leading": "\n        ", "line": 381, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n        // consistent after forward checking so return true\n        ", "line": 384, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 384, "leaf": true, "token": "revertData"}, {"trailing": "\n    ", "leading": "", "line": 384, "token": ";"}], {"trailing": "\n\n\n\n    ", "leading": "\n    ", "line": 385, "token": "}"}], "method": "forwardChecking", "beginline": 364, "class": "BinaryCSPSolver", "features": [632, 633, 633, 634, 319, 635, 636, 637, 638, 638, 13, 44, 118, 37, 639, 639, 632, 633, 640, 641, 642, 642, 319, 635, 636, 643, 638, 638, 149, 150, 151, 644, 644, 13, 44, 118, 37, 154, 154, 149, 645, 646, 647, 153, 153, 13, 44, 45, 37, 154, 154, 60, 72, 121, 122, 123, 123, 319, 322, 648, 649, 649, 13, 127, 82, 639, 639, 13, 46, 128, 82, 30, 30, 650, 651, 652, 653, 654, 654, 13, 52, 53, 128, 655, 655, 13, 46, 98, 99, 30, 30, 656, 657, 658, 659, 660, 660, 13, 46, 52, 53, 661, 661, 662, 662, 663, 664, 665, 666, 667, 667, 13, 44, 37, 101, 103, 103, 668, 668, 669, 670, 671, 672, 673, 673, 13, 144, 52, 36, 408, 408, 408, 408, 674, 674, 13, 147, 52, 36, 675, 675, 676, 676, 30, 30, 13, 46, 27, 98, 677, 677, 231, 231, 30, 30, 232, 233, 234, 678, 236, 236, 75, 134, 434, 435, 679, 679, 13, 21, 101, 101, 680, 680, 681, 681, 84, 84, 13, 21, 682, 682, 680, 680, 30, 30], "index": 12}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 425, "ast": ["{#####}", {"trailing": "\n        ", "leading": "", "line": 389, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 390, "leaf": true, "token": "HashSet"}, ["<#>", {"trailing": "", "leading": "", "line": 390, "token": "<"}, {"trailing": "", "leading": "", "line": 390, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 390, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 390, "leaf": true, "token": "constraintSet"}, {"trailing": " ", "leading": " ", "line": 390, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 390, "token": "new"}, ["##", ["##", {"trailing": "", "leading": " ", "line": 390, "leaf": true, "token": "HashSet"}, ["<#>", {"trailing": "", "leading": "", "line": 390, "token": "<"}, {"trailing": "", "leading": "", "line": 390, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": "", "leading": "", "line": 390, "token": ">"}]], ["(#)", {"trailing": "", "leading": "", "line": 390, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 390, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 390, "token": ")"}]]]]], {"trailing": "\n        ", "leading": "", "line": 390, "token": ";"}], ["#;", ["##", {"trailing": " ", "leading": "\n        ", "line": 391, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": "", "leading": " ", "var": true, "line": 391, "leaf": true, "token": "currentConstraint"}], {"trailing": "\n        ", "leading": "", "line": 391, "token": ";"}], ["#;", ["##", {"trailing": " ", "leading": "\n        ", "line": 392, "leaf": true, "token": "RevertData"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 392, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 392, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 392, "token": "new"}, ["#()", {"trailing": "", "leading": " ", "line": 392, "leaf": true, "token": "RevertData"}, {"trailing": "", "leading": "", "line": 392, "token": "("}, {"trailing": "", "leading": "", "line": 392, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 392, "token": ";"}], ["while##", {"trailing": "", "leading": "\n        ", "line": 393, "token": "while"}, ["(#)", {"trailing": "", "leading": "", "line": 393, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 393, "token": "!"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 393, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 393, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 393, "leaf": true, "token": "isEmpty"}, {"trailing": "", "leading": "", "line": 393, "token": "("}, {"trailing": "", "leading": "", "line": 393, "token": ")"}]]], {"trailing": "", "leading": "", "line": 393, "token": ")"}], ["{####}", {"trailing": "\n            ", "leading": "", "line": 393, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 394, "leaf": true, "token": "currentConstraint"}, {"trailing": " ", "leading": " ", "line": 394, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 394, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 394, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 394, "leaf": true, "token": "poll"}, {"trailing": "", "leading": "", "line": 394, "token": "("}, {"trailing": "", "leading": "", "line": 394, "token": ")"}]]], {"trailing": "\n            ", "leading": "", "line": 394, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 395, "leaf": true, "token": "constraintSet"}, {"trailing": "", "leading": "", "line": 395, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 395, "leaf": true, "token": "remove"}, {"trailing": "", "leading": "", "line": 395, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 395, "leaf": true, "token": "currentConstraint"}, {"trailing": "", "leading": "", "line": 395, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 395, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 396, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": " ", "line": 396, "token": "="}, ["#(#)", {"trailing": "", "leading": " ", "line": 396, "leaf": true, "token": "revise"}, {"trailing": "", "leading": "", "line": 396, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 396, "leaf": true, "token": "revertData"}, {"trailing": " ", "leading": "", "line": 396, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 396, "leaf": true, "token": "currentConstraint"}], {"trailing": "", "leading": "", "line": 396, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 396, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n            ", "line": 397, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 397, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 397, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 397, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 397, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 397, "token": "("}, {"trailing": " ", "leading": "", "line": 397, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 397, "token": "=="}, ["-#", {"trailing": "", "leading": " ", "line": 397, "token": "-"}, {"trailing": "", "leading": "", "line": 397, "leaf": true, "token": "1"}]], {"trailing": "", "leading": "", "line": 397, "token": ")"}], ["{#}", {"trailing": "\n                // no longer consistent and we can reject\n                // System.out.println(\"not consistent\");\n                ", "leading": "", "line": 397, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n                // no longer consistent and we can reject\n                // System.out.println(\"not consistent\");\n                ", "line": 400, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 400, "leaf": true, "token": "revertData"}, {"trailing": "\n            ", "leading": "", "line": 400, "token": ";"}], {"trailing": " ", "leading": "\n            ", "line": 401, "token": "}"}], {"trailing": " ", "leading": " ", "line": 401, "token": "else"}, ["if##", {"trailing": "", "leading": " ", "line": 401, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 401, "token": "("}, ["#>#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 401, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 401, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 401, "leaf": true, "token": "getChanged"}, {"trailing": "", "leading": "", "line": 401, "token": "("}, {"trailing": " ", "leading": "", "line": 401, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 401, "token": ">"}, {"trailing": "", "leading": " ", "line": 401, "leaf": true, "token": "0"}], {"trailing": "", "leading": "", "line": 401, "token": ")"}], ["{###}", {"trailing": "\n                // domain updated so we must add to the queue\n\n                ", "leading": "", "line": 401, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n                // domain updated so we must add to the queue\n\n                ", "line": 404, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 404, "leaf": true, "token": "checkVar"}, {"trailing": " ", "leading": " ", "line": 404, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 404, "leaf": true, "token": "currentConstraint"}, {"trailing": "", "leading": "", "line": 404, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 404, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 404, "token": "("}, {"trailing": "", "leading": "", "line": 404, "token": ")"}]]]], {"trailing": " // var that we will add arcs for\n                ", "leading": "", "line": 404, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": " // var that we will add arcs for\n                ", "line": 405, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 405, "leaf": true, "token": "excludeVar"}, {"trailing": " ", "leading": " ", "line": 405, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 405, "leaf": true, "token": "currentConstraint"}, {"trailing": "", "leading": "", "line": 405, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 405, "leaf": true, "token": "getSecondVar"}, {"trailing": "", "leading": "", "line": 405, "token": "("}, {"trailing": "", "leading": "", "line": 405, "token": ")"}]]]], {"trailing": " // var for which we do not need to add the arc as we have just checked the inverse\n\n                // iterate through every constraint and add to queue if they have potentially been affected\n                ", "leading": "", "line": 405, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": " // var for which we do not need to add the arc as we have just checked the inverse\n\n                // iterate through every constraint and add to queue if they have potentially been affected\n                ", "line": 408, "token": "for"}, {"trailing": "", "leading": " ", "line": 408, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 408, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 408, "leaf": true, "token": "checkConstraint"}, {"trailing": " ", "leading": " ", "line": 408, "token": ":"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 408, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 408, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 408, "leaf": true, "token": "getReliantConstraints"}, {"trailing": "", "leading": "", "line": 408, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 408, "leaf": true, "token": "checkVar"}, {"trailing": "", "leading": "", "line": 408, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 408, "token": ")"}, ["{#}", {"trailing": "\n                    \n                    // checking for arc consistency\n                    // only perform varList lookup if we have to as more expensive\n                    // do not need to check any constraints from pre assigned variables\n                    ", "leading": " ", "line": 408, "token": "{"}, ["if##", {"trailing": "", "leading": "\n                    \n                    // checking for arc consistency\n                    // only perform varList lookup if we have to as more expensive\n                    // do not need to check any constraints from pre assigned variables\n                    ", "line": 413, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 413, "token": "("}, ["#&&#", ["#&&#", ["(#)", {"trailing": "", "leading": "", "line": 413, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 413, "token": "!"}, ["(#)", {"trailing": "", "leading": "", "line": 413, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 413, "leaf": true, "token": "checkConstraint"}, {"trailing": "", "leading": "", "line": 413, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 413, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 413, "token": "("}, {"trailing": " ", "leading": "", "line": 413, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 413, "token": "=="}, {"trailing": "", "leading": " ", "var": true, "line": 413, "leaf": true, "token": "excludeVar"}], {"trailing": "", "leading": "", "line": 413, "token": ")"}]], {"trailing": " ", "leading": "", "line": 413, "token": ")"}], {"trailing": " ", "leading": " ", "line": 413, "token": "&&"}, ["!#", {"trailing": "", "leading": " ", "line": 413, "token": "!"}, ["(#)", {"trailing": "", "leading": "", "line": 413, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 413, "leaf": true, "token": "constraintSet"}, {"trailing": "", "leading": "", "line": 413, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 413, "leaf": true, "token": "contains"}, {"trailing": "", "leading": "", "line": 413, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 413, "leaf": true, "token": "checkConstraint"}, {"trailing": "", "leading": "", "line": 413, "token": ")"}]], {"trailing": " ", "leading": "", "line": 413, "token": ")"}]]], {"trailing": " ", "leading": " ", "line": 413, "token": "&&"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 413, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 413, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 413, "leaf": true, "token": "contains"}, {"trailing": "", "leading": "", "line": 413, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 413, "leaf": true, "token": "checkConstraint"}, {"trailing": "", "leading": "", "line": 413, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 413, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 413, "token": "("}, {"trailing": "", "leading": "", "line": 413, "token": ")"}]], {"trailing": "", "leading": "", "line": 413, "token": ")"}]]], {"trailing": "", "leading": "", "line": 413, "token": ")"}], ["{##}", {"trailing": "\n                        ", "leading": "", "line": 413, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                        ", "var": true, "line": 414, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 414, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 414, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 414, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 414, "leaf": true, "token": "checkConstraint"}, {"trailing": "", "leading": "", "line": 414, "token": ")"}]], {"trailing": "\n                        ", "leading": "", "line": 414, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n                        ", "var": true, "line": 415, "leaf": true, "token": "constraintSet"}, {"trailing": "", "leading": "", "line": 415, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 415, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 415, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 415, "leaf": true, "token": "checkConstraint"}, {"trailing": "", "leading": "", "line": 415, "token": ")"}]], {"trailing": "\n                    ", "leading": "", "line": 415, "token": ";"}], {"trailing": "\n\n                ", "leading": "\n                    ", "line": 416, "token": "}"}]], {"trailing": "\n\n            ", "leading": "\n\n                ", "line": 418, "token": "}"}]], {"trailing": "\n            // if result == 0 we do nothing\n        ", "leading": "\n\n            ", "line": 420, "token": "}"}]]], {"trailing": "\n        ", "leading": "\n            // if result == 0 we do nothing\n        ", "line": 422, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n        ", "line": 423, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 423, "leaf": true, "token": "revertData"}, {"trailing": "\n\n    ", "leading": "", "line": 423, "token": ";"}], {"trailing": "\n\n    \n\n\n\n    /**\n     * function to return the list of all constraints involving a var that has has been altered\n     */\n    ", "leading": "\n\n    ", "line": 425, "token": "}"}], "method": "arcConsistency", "beginline": 389, "class": "BinaryCSPSolver", "features": [683, 684, 684, 685, 319, 635, 636, 637, 686, 686, 13, 44, 118, 37, 639, 639, 683, 684, 684, 687, 688, 688, 319, 635, 636, 637, 686, 686, 13, 118, 689, 36, 639, 639, 319, 637, 690, 691, 691, 13, 118, 37, 639, 639, 149, 150, 151, 153, 153, 13, 44, 118, 37, 154, 154, 149, 645, 646, 647, 153, 153, 13, 46, 437, 692, 693, 693, 154, 154, 694, 695, 696, 697, 698, 698, 13, 44, 37, 699, 198, 198, 700, 700, 13, 46, 36, 37, 701, 701, 702, 702, 30, 30, 703, 704, 705, 706, 707, 707, 13, 46, 37, 699, 581, 581, 708, 708, 582, 583, 584, 585, 586, 586, 13, 52, 53, 37, 401, 401, 709, 709, 710, 710, 13, 44, 37, 699, 103, 103, 30, 30, 669, 670, 671, 672, 673, 673, 13, 144, 52, 36, 408, 408, 408, 408, 674, 674, 13, 147, 52, 36, 410, 410, 148, 148, 30, 30, 13, 46, 27, 367, 677, 677, 231, 231, 30, 30, 232, 233, 234, 678, 236, 236, 75, 134, 434, 711, 679, 679, 13, 21, 197, 699, 680, 680, 681, 681, 84, 84, 13, 46, 246, 98, 712, 712, 713, 713, 30, 30, 232, 233, 234, 714, 236, 236, 60, 620, 238, 715, 240, 240, 13, 44, 45, 37, 74, 74, 13, 46, 36, 45, 716, 716, 717, 717, 30, 30, 663, 664, 665, 718, 667, 667, 13, 44, 45, 37, 668, 668, 13, 46, 36, 45, 719, 719, 720, 720, 30, 30, 721, 722, 723, 724, 725, 725, 319, 322, 648, 726, 727, 727, 13, 127, 82, 101, 639, 639, 13, 46, 128, 82, 30, 30, 650, 651, 652, 653, 654, 654, 13, 52, 53, 128, 401, 401, 655, 655, 13, 46, 27, 437, 661, 661, 30, 30, 663, 664, 665, 728, 667, 667, 13, 29, 437, 28, 729, 729, 668, 668, 13, 46, 437, 31, 730, 730, 731, 731, 30, 30, 656, 657, 658, 732, 660, 660, 13, 52, 53, 437, 733, 733, 132, 132, 662, 662, 13, 46, 31, 98, 30, 30, 656, 657, 658, 734, 660, 660, 13, 46, 52, 53, 717, 717, 735, 735, 662, 662, 663, 664, 665, 666, 667, 667, 13, 46, 37, 101, 736, 736, 737, 737, 668, 668, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 733, 733, 106, 106, 543, 543, 13, 46, 37, 101, 738, 738, 739, 739, 30, 30, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 106, 106, 733, 733, 543, 543, 13, 21, 680, 680, 682, 682, 30, 30], "index": 13}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 452, "ast": ["{####}", {"trailing": "\n\n\n        ", "leading": "", "line": 434, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n\n\n        ", "line": 437, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 437, "token": "<"}, {"trailing": "", "leading": "", "line": 437, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 437, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 437, "leaf": true, "token": "constraintQueue"}, {"trailing": " ", "leading": " ", "line": 437, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 437, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 437, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 437, "token": "<"}, {"trailing": "", "leading": "", "line": 437, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": "", "leading": "", "line": 437, "token": ">"}]], {"trailing": "", "leading": "", "line": 437, "token": "("}, {"trailing": "", "leading": "", "line": 437, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 437, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 438, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 438, "leaf": true, "token": "checkVal"}, {"trailing": " ", "leading": " ", "line": 438, "token": "="}, {"trailing": "", "leading": " ", "line": 438, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 438, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 439, "token": "for"}, {"trailing": "", "leading": " ", "line": 439, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 439, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 439, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": " ", "line": 439, "token": ":"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 439, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 439, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 439, "leaf": true, "token": "getReliantConstraints"}, {"trailing": "", "leading": "", "line": 439, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 439, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 439, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 439, "token": ")"}, ["{#}", {"trailing": "\n            // adding all arcs that include this var\n            \n\n            // checking for arc consistency\n            // do not need to check any constraints from pre assigned variables\n            ", "leading": " ", "line": 439, "token": "{"}, ["if##", {"trailing": "", "leading": "\n            // adding all arcs that include this var\n            \n\n            // checking for arc consistency\n            // do not need to check any constraints from pre assigned variables\n            ", "line": 445, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 445, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 445, "leaf": true, "token": "varList"}, {"trailing": "", "leading": "", "line": 445, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 445, "leaf": true, "token": "contains"}, {"trailing": "", "leading": "", "line": 445, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 445, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 445, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 445, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 445, "token": "("}, {"trailing": "", "leading": "", "line": 445, "token": ")"}]], {"trailing": "", "leading": "", "line": 445, "token": ")"}]], {"trailing": "", "leading": "", "line": 445, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 445, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 446, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 446, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 446, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 446, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 446, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 446, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 446, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n            ", "line": 447, "token": "}"}]], {"trailing": "\n        \n        ", "leading": "\n\n        ", "line": 449, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n        \n        ", "line": 451, "token": "return"}, ["#(#)", {"trailing": "", "leading": " ", "line": 451, "leaf": true, "token": "arcConsistency"}, {"trailing": "", "leading": "", "line": 451, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 451, "leaf": true, "token": "constraintQueue"}, {"trailing": " ", "leading": "", "line": 451, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 451, "leaf": true, "token": "constraints"}, {"trailing": " ", "leading": "", "line": 451, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 451, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 451, "token": ")"}], {"trailing": "\n    ", "leading": "", "line": 451, "token": ";"}], {"trailing": "\n\n    \n    /**\n     * called to create the initial global arc consistency\n     */\n    ", "leading": "\n    ", "line": 452, "token": "}"}], "method": "maintainArcConsistency", "beginline": 434, "class": "BinaryCSPSolver", "features": [632, 633, 633, 634, 319, 635, 636, 637, 638, 638, 13, 44, 118, 37, 639, 639, 632, 633, 640, 641, 642, 642, 319, 635, 636, 643, 638, 638, 13, 44, 45, 37, 639, 639, 60, 72, 121, 122, 123, 123, 319, 322, 648, 649, 649, 13, 127, 82, 639, 639, 13, 46, 128, 82, 30, 30, 650, 651, 652, 653, 654, 654, 13, 52, 53, 128, 655, 655, 13, 46, 98, 99, 30, 30, 656, 657, 658, 659, 660, 660, 13, 46, 52, 53, 661, 661, 662, 662, 663, 664, 665, 666, 667, 667, 13, 46, 37, 101, 535, 535, 668, 668, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 733, 733, 132, 132, 543, 543, 740, 741, 742, 743, 743, 13, 205, 52, 21, 744, 744, 745, 745, 746, 746, 13, 214, 52, 21, 30, 30, 13, 218, 52, 21, 747, 747, 30, 30], "index": 14}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 487, "ast": ["{######}", {"trailing": "\n\n        ", "leading": "", "line": 458, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n\n        ", "line": 460, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 460, "token": "<"}, {"trailing": "", "leading": "", "line": 460, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 460, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 460, "leaf": true, "token": "constraintQueue"}, {"trailing": " ", "leading": " ", "line": 460, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 460, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 460, "leaf": true, "token": "LinkedList"}, ["<#>", {"trailing": "", "leading": "", "line": 460, "token": "<"}, {"trailing": "", "leading": "", "line": 460, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": "", "leading": "", "line": 460, "token": ">"}]], {"trailing": "", "leading": "", "line": 460, "token": "("}, {"trailing": "", "leading": "", "line": 460, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 460, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 461, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 461, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": " ", "line": 461, "token": "="}, {"trailing": "", "leading": " ", "line": 461, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 461, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 462, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 462, "leaf": true, "token": "var2"}, {"trailing": " ", "leading": " ", "line": 462, "token": "="}, {"trailing": "", "leading": " ", "line": 462, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 462, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 463, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 463, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 463, "token": "="}, {"trailing": "", "leading": " ", "line": 463, "leaf": true, "token": "0"}]], {"trailing": "\n        ", "leading": "", "line": 463, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 464, "token": "for"}, {"trailing": "", "leading": " ", "line": 464, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 464, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 464, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": " ", "line": 464, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 464, "leaf": true, "token": "constraints"}], {"trailing": " ", "leading": "", "line": 464, "token": ")"}, ["{##}", {"trailing": "\n            // add all arcs from this constraint to the queue\n            ", "leading": " ", "line": 464, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            // add all arcs from this constraint to the queue\n            ", "var": true, "line": 466, "leaf": true, "token": "constraintQueue"}, {"trailing": "", "leading": "", "line": 466, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 466, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 466, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 466, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 466, "token": ")"}]], {"trailing": "\n\n\n            // only called if using AC3_1\n            ", "leading": "", "line": 466, "token": ";"}], ["if##", {"trailing": "", "leading": "\n\n\n            // only called if using AC3_1\n            ", "line": 470, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 470, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 470, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 470, "token": "."}, {"trailing": " ", "leading": "", "line": 470, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 470, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 470, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 470, "token": "."}, {"trailing": "", "leading": "", "line": 470, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 470, "token": "."}, {"trailing": "", "leading": "", "line": 470, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 470, "token": ")"}], ["{####}", {"trailing": "\n                // first value in the domain is the smallest\n                ", "leading": "", "line": 470, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                // first value in the domain is the smallest\n                ", "var": true, "line": 472, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 472, "token": "="}, ["#-#", ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 472, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 472, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 472, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 472, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 472, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 472, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 472, "leaf": true, "token": "getSecondVar"}, {"trailing": "", "leading": "", "line": 472, "token": "("}, {"trailing": "", "leading": "", "line": 472, "token": ")"}]], {"trailing": "", "leading": "", "line": 472, "token": ")"}]], {"trailing": "", "leading": "", "line": 472, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 472, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 472, "token": "("}, {"trailing": "", "leading": "", "line": 472, "leaf": true, "token": "0"}, {"trailing": " ", "leading": "", "line": 472, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 472, "token": "-"}, {"trailing": "", "leading": " ", "line": 472, "leaf": true, "token": "1"}]], {"trailing": "\n\n\n                ", "leading": "", "line": 472, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n\n\n                ", "var": true, "line": 475, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 475, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 475, "leaf": true, "token": "instantiateConstraintMap"}, {"trailing": "", "leading": "", "line": 475, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 475, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 475, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 475, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "\n                ", "line": 476, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 476, "token": "<"}, {"trailing": "", "leading": "", "line": 476, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 476, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 476, "leaf": true, "token": "varDomain"}, {"trailing": " ", "leading": " ", "line": 476, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 476, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 476, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 476, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 476, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 476, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 476, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 476, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 476, "token": "("}, {"trailing": "", "leading": "", "line": 476, "token": ")"}]], {"trailing": "", "leading": "", "line": 476, "token": ")"}]]]], {"trailing": "\n            \n                ", "leading": "", "line": 476, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n            \n                ", "line": 478, "token": "for"}, {"trailing": "", "leading": "", "line": 478, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 478, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 478, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 478, "token": "="}, {"trailing": "", "leading": " ", "line": 478, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 478, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 478, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 478, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 478, "leaf": true, "token": "varDomain"}, {"trailing": "", "leading": "", "line": 478, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 478, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 478, "token": "("}, {"trailing": "", "leading": "", "line": 478, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 478, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 478, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 478, "token": "++"}]], {"trailing": "", "leading": "", "line": 478, "token": ")"}, ["{#}", {"trailing": "\n                    ", "leading": "", "line": 478, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                    ", "var": true, "line": 479, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 479, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 479, "leaf": true, "token": "setLastValidValue"}, {"trailing": "", "leading": "", "line": 479, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 479, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": "", "line": 479, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 479, "leaf": true, "token": "varDomain"}, {"trailing": "", "leading": "", "line": 479, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 479, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 479, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 479, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 479, "token": ")"}]], {"trailing": " ", "leading": "", "line": 479, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 479, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 479, "token": ")"}]], {"trailing": "\n        \n                ", "leading": "", "line": 479, "token": ";"}], {"trailing": "\n            ", "leading": "\n        \n                ", "line": 481, "token": "}"}]], {"trailing": "\n            \n        ", "leading": "\n            ", "line": 482, "token": "}"}]], {"trailing": "\n        \n        ", "leading": "\n            \n        ", "line": 484, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n        \n        ", "line": 486, "token": "return"}, ["#(#)", {"trailing": "", "leading": " ", "line": 486, "leaf": true, "token": "arcConsistency"}, {"trailing": "", "leading": "", "line": 486, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 486, "leaf": true, "token": "constraintQueue"}, {"trailing": " ", "leading": "", "line": 486, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 486, "leaf": true, "token": "constraints"}, {"trailing": " ", "leading": "", "line": 486, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 486, "leaf": true, "token": "varList"}], {"trailing": "", "leading": "", "line": 486, "token": ")"}], {"trailing": "\n    ", "leading": "", "line": 486, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 487, "token": "}"}], "method": "createArcConsistency", "beginline": 458, "class": "BinaryCSPSolver", "features": [632, 633, 633, 634, 319, 635, 636, 637, 638, 638, 13, 44, 118, 37, 639, 639, 632, 633, 640, 641, 642, 642, 319, 635, 636, 643, 638, 638, 13, 44, 45, 37, 639, 639, 60, 72, 121, 122, 123, 123, 13, 44, 45, 37, 74, 74, 60, 72, 121, 122, 123, 123, 13, 44, 45, 37, 74, 74, 60, 72, 121, 122, 123, 123, 319, 322, 648, 649, 649, 13, 127, 82, 639, 639, 13, 128, 82, 30, 30, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 132, 132, 543, 543, 13, 46, 27, 98, 30, 30, 158, 159, 160, 312, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 313, 314, 315, 316, 317, 317, 13, 44, 37, 101, 103, 103, 748, 748, 13, 46, 46, 749, 750, 750, 30, 30, 47, 48, 49, 50, 51, 51, 13, 46, 52, 53, 751, 751, 752, 752, 54, 54, 721, 722, 723, 753, 725, 725, 55, 56, 57, 754, 755, 755, 60, 61, 62, 756, 63, 63, 75, 757, 76, 758, 759, 759, 13, 46, 37, 101, 760, 760, 761, 761, 84, 84, 762, 763, 764, 765, 766, 766, 13, 52, 53, 37, 767, 767, 106, 106, 768, 768, 110, 111, 111, 112, 769, 769, 113, 114, 115, 116, 117, 117, 13, 44, 118, 37, 119, 119, 13, 46, 36, 118, 770, 770, 93, 93, 30, 30, 47, 48, 49, 120, 51, 51, 13, 46, 52, 53, 717, 717, 771, 771, 54, 54, 663, 664, 665, 666, 667, 667, 13, 44, 45, 73, 668, 668, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 137, 137, 30, 30, 64, 65, 66, 87, 88, 88, 13, 89, 90, 82, 91, 91, 92, 92, 69, 69, 13, 46, 37, 99, 772, 772, 773, 773, 30, 30, 347, 348, 349, 350, 351, 351, 13, 205, 52, 53, 774, 774, 417, 417, 353, 353, 13, 46, 214, 52, 94, 94, 135, 135, 30, 30, 55, 56, 57, 775, 59, 59, 13, 52, 53, 214, 95, 95, 96, 96, 97, 97, 13, 218, 52, 53, 419, 419, 419, 419, 30, 30, 740, 741, 742, 743, 743, 13, 205, 52, 21, 744, 744, 745, 745, 746, 746, 13, 214, 52, 21, 776, 776, 30, 30, 13, 218, 52, 21, 30, 30], "index": 15}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 619, "ast": ["{##########}", {"trailing": "\n\n        ", "leading": "", "line": 489, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n\n        ", "var": true, "line": 491, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 491, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 491, "leaf": true, "token": "incrementArcRevisions"}, {"trailing": "", "leading": "", "line": 491, "token": "("}, {"trailing": "", "leading": "", "line": 491, "token": ")"}]], {"trailing": "\n\n\n        // probably going to take an arc constraint\n        // System.out.println(\"constraint is \" + arcConstraint.getConstraint() + \"Inverted: \" + arcConstraint.getIsInverted());\n        ", "leading": "", "line": 491, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n\n\n        // probably going to take an arc constraint\n        // System.out.println(\"constraint is \" + arcConstraint.getConstraint() + \"Inverted: \" + arcConstraint.getIsInverted());\n        ", "var": true, "line": 496, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 496, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 496, "leaf": true, "token": "setChanged"}, {"trailing": "", "leading": "", "line": 496, "token": "("}, {"trailing": "", "leading": "", "line": 496, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 496, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 496, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 497, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 497, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": " ", "line": 497, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 497, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 497, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 497, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 497, "token": "("}, {"trailing": "", "leading": "", "line": 497, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 497, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        ", "line": 498, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 498, "leaf": true, "token": "var2"}, {"trailing": " ", "leading": " ", "line": 498, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 498, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 498, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 498, "leaf": true, "token": "getSecondVar"}, {"trailing": "", "leading": "", "line": 498, "token": "("}, {"trailing": "", "leading": "", "line": 498, "token": ")"}]]]], {"trailing": "\n        \n        \n        ", "leading": "", "line": 498, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "\n        \n        \n        ", "line": 501, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 501, "token": "<"}, {"trailing": "", "leading": "", "line": 501, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 501, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 501, "leaf": true, "token": "firstDom"}, {"trailing": " ", "leading": " ", "line": 501, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 501, "token": "new"}, ["#()", ["#<>", {"trailing": "", "leading": " ", "line": 501, "leaf": true, "token": "ArrayList"}, {"trailing": "", "leading": "", "line": 501, "token": "<"}, {"trailing": "", "leading": "", "line": 501, "token": ">"}], {"trailing": "", "leading": "", "line": 501, "token": "("}, {"trailing": "", "leading": "", "line": 501, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 501, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 502, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 502, "token": "<"}, {"trailing": "", "leading": "", "line": 502, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 502, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 502, "leaf": true, "token": "secondDom"}, {"trailing": " ", "leading": " ", "line": 502, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 502, "token": "new"}, ["#()", ["#<>", {"trailing": "", "leading": " ", "line": 502, "leaf": true, "token": "ArrayList"}, {"trailing": "", "leading": "", "line": 502, "token": "<"}, {"trailing": "", "leading": "", "line": 502, "token": ">"}], {"trailing": "", "leading": "", "line": 502, "token": "("}, {"trailing": "", "leading": "", "line": 502, "token": ")"}]]]], {"trailing": "\n\n\n        // first check if either of these have been assigned (as this is therefore the only valid domain)\n        // could set the domain to be only the assigned variable at the time of assigning, but no real need to\n        // and by not doing so means there is less work to be done to revert an assignment\n        ", "leading": "", "line": 502, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n\n\n        // first check if either of these have been assigned (as this is therefore the only valid domain)\n        // could set the domain to be only the assigned variable at the time of assigning, but no real need to\n        // and by not doing so means there is less work to be done to revert an assignment\n        ", "line": 508, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 508, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 508, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 508, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 508, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 508, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 508, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 508, "token": ")"}]], {"trailing": "", "leading": "", "line": 508, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 508, "leaf": true, "token": "isPresent"}, {"trailing": "", "leading": "", "line": 508, "token": "("}, {"trailing": "", "leading": "", "line": 508, "token": ")"}]], {"trailing": "", "leading": "", "line": 508, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 508, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 509, "leaf": true, "token": "firstDom"}, {"trailing": "", "leading": "", "line": 509, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 509, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 509, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 509, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 509, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 509, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 509, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 509, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 509, "token": ")"}]], {"trailing": "", "leading": "", "line": 509, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 509, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 509, "token": "("}, {"trailing": "", "leading": "", "line": 509, "token": ")"}]], {"trailing": "", "leading": "", "line": 509, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 509, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 510, "token": "}"}], {"trailing": " ", "leading": " ", "line": 510, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 510, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 511, "leaf": true, "token": "firstDom"}, {"trailing": " ", "leading": " ", "line": 511, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 511, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 511, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 511, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 511, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 511, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 511, "token": ")"}]]], {"trailing": "\n        ", "leading": "", "line": 511, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n        ", "line": 512, "token": "}"}]], ["if##else#", {"trailing": "", "leading": "\n\n        ", "line": 514, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 514, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 514, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 514, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 514, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 514, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 514, "leaf": true, "token": "var2"}, {"trailing": "", "leading": "", "line": 514, "token": ")"}]], {"trailing": "", "leading": "", "line": 514, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 514, "leaf": true, "token": "isPresent"}, {"trailing": "", "leading": "", "line": 514, "token": "("}, {"trailing": "", "leading": "", "line": 514, "token": ")"}]], {"trailing": "", "leading": "", "line": 514, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 514, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 515, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 515, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 515, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 515, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 515, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 515, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 515, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 515, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 515, "leaf": true, "token": "var2"}, {"trailing": "", "leading": "", "line": 515, "token": ")"}]], {"trailing": "", "leading": "", "line": 515, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 515, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 515, "token": "("}, {"trailing": "", "leading": "", "line": 515, "token": ")"}]], {"trailing": "", "leading": "", "line": 515, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 515, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 516, "token": "}"}], {"trailing": " ", "leading": " ", "line": 516, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 516, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n            ", "var": true, "line": 517, "leaf": true, "token": "secondDom"}, {"trailing": " ", "leading": " ", "line": 517, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 517, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 517, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 517, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 517, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 517, "leaf": true, "token": "var2"}, {"trailing": "", "leading": "", "line": 517, "token": ")"}]]], {"trailing": "\n        ", "leading": "", "line": 517, "token": ";"}], {"trailing": "\n        \n        // iterate through backwards so that removing elements is safe\n        ", "leading": "\n        ", "line": 518, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n        \n        // iterate through backwards so that removing elements is safe\n        ", "line": 521, "token": "for"}, {"trailing": "", "leading": "", "line": 521, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 521, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 521, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 521, "token": "="}, ["#-#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 521, "leaf": true, "token": "firstDom"}, {"trailing": "", "leading": "", "line": 521, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 521, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 521, "token": "("}, {"trailing": " ", "leading": "", "line": 521, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 521, "token": "-"}, {"trailing": "", "leading": " ", "line": 521, "leaf": true, "token": "1"}]]], {"trailing": " ", "leading": "", "line": 521, "token": ";"}, ["#>=#", {"trailing": " ", "leading": " ", "var": true, "line": 521, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 521, "token": ">="}, {"trailing": "", "leading": " ", "line": 521, "leaf": true, "token": "0"}], {"trailing": " ", "leading": "", "line": 521, "token": ";"}, ["#--", {"trailing": " ", "leading": " ", "var": true, "line": 521, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 521, "token": "--"}]], {"trailing": "", "leading": "", "line": 521, "token": ")"}, ["{####}", {"trailing": "\n            ", "leading": "", "line": 521, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n            ", "line": 522, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 522, "leaf": true, "token": "d1"}, {"trailing": " ", "leading": " ", "line": 522, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 522, "leaf": true, "token": "firstDom"}, {"trailing": "", "leading": "", "line": 522, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 522, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 522, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 522, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 522, "token": ")"}]]]], {"trailing": "\n            // System.out.println(\"d1 is \" + d1);\n            ", "leading": "", "line": 522, "token": ";"}], ["#;", ["##", {"trailing": " ", "leading": "\n            // System.out.println(\"d1 is \" + d1);\n            ", "line": 524, "leaf": true, "token": "Boolean"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 524, "leaf": true, "token": "supported"}, {"trailing": " ", "leading": " ", "line": 524, "token": "="}, {"trailing": "", "leading": " ", "line": 524, "leaf": true, "token": "false"}]], {"trailing": "\n\n\n\n            // using AC3_1 efficiency improvements\n            ", "leading": "", "line": 524, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n\n\n\n            // using AC3_1 efficiency improvements\n            ", "line": 529, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 529, "token": "("}, ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 529, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 529, "token": "."}, {"trailing": " ", "leading": "", "line": 529, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 529, "token": "=="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 529, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 529, "token": "."}, {"trailing": "", "leading": "", "line": 529, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 529, "token": "."}, {"trailing": "", "leading": "", "line": 529, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 529, "token": ")"}], ["{##}", {"trailing": "\n                ", "leading": "", "line": 529, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n                ", "line": 530, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 530, "leaf": true, "token": "last"}, {"trailing": " ", "leading": " ", "line": 530, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 530, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 530, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 530, "leaf": true, "token": "getLastValidValuePos"}, {"trailing": "", "leading": "", "line": 530, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 530, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": "", "line": 530, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 530, "leaf": true, "token": "d1"}], {"trailing": "", "leading": "", "line": 530, "token": ")"}]]]], {"trailing": "\n            \n                // successful value still exists so no further work to be done\n                ", "leading": "", "line": 530, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n            \n                // successful value still exists so no further work to be done\n                ", "line": 533, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 533, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 533, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 533, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 533, "leaf": true, "token": "contains"}, {"trailing": "", "leading": "", "line": 533, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 533, "leaf": true, "token": "last"}, {"trailing": "", "leading": "", "line": 533, "token": ")"}]], {"trailing": "", "leading": "", "line": 533, "token": ")"}], ["{#}", {"trailing": "\n                    ", "leading": "", "line": 533, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                    ", "var": true, "line": 534, "leaf": true, "token": "supported"}, {"trailing": " ", "leading": " ", "line": 534, "token": "="}, {"trailing": "", "leading": " ", "line": 534, "leaf": true, "token": "true"}], {"trailing": "\n                ", "leading": "", "line": 534, "token": ";"}], {"trailing": "\n                ", "leading": "\n                ", "line": 535, "token": "}"}], {"trailing": " ", "leading": "\n                ", "line": 536, "token": "else"}, ["{###}", {"trailing": "\n                    ", "leading": " ", "line": 536, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n                    ", "line": 537, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 537, "leaf": true, "token": "lastPos"}, {"trailing": " ", "leading": " ", "line": 537, "token": "="}, {"trailing": "", "leading": " ", "line": 537, "leaf": true, "token": "0"}]], {"trailing": "\n                    // find the value closest (and > the last value we checked)\n                    // should never \n                    ", "leading": "", "line": 537, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n                    // find the value closest (and > the last value we checked)\n                    // should never \n                    ", "line": 540, "token": "for"}, {"trailing": "", "leading": " ", "line": 540, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 540, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 540, "leaf": true, "token": "pos"}, {"trailing": " ", "leading": " ", "line": 540, "token": "="}, {"trailing": "", "leading": " ", "line": 540, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 540, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 540, "leaf": true, "token": "pos"}, {"trailing": " ", "leading": " ", "line": 540, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 540, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 540, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 540, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 540, "token": "("}, {"trailing": "", "leading": "", "line": 540, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 540, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 540, "leaf": true, "token": "pos"}, {"trailing": "", "leading": " ", "line": 540, "token": "++"}]], {"trailing": " ", "leading": "", "line": 540, "token": ")"}, ["{#}", {"trailing": "\n                        ", "leading": " ", "line": 540, "token": "{"}, ["if##", {"trailing": "", "leading": "\n                        ", "line": 541, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 541, "token": "("}, ["#>#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 541, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 541, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 541, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 541, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 541, "leaf": true, "token": "pos"}, {"trailing": " ", "leading": "", "line": 541, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 541, "token": ">"}, {"trailing": "", "leading": " ", "var": true, "line": 541, "leaf": true, "token": "last"}], {"trailing": "", "leading": "", "line": 541, "token": ")"}], ["{#break;}", {"trailing": "\n                            ", "leading": "", "line": 541, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                            ", "var": true, "line": 542, "leaf": true, "token": "lastPos"}, {"trailing": " ", "leading": " ", "line": 542, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 542, "leaf": true, "token": "pos"}], {"trailing": "\n                            \n                            ", "leading": "", "line": 542, "token": ";"}], {"trailing": "", "leading": "\n                            \n                            ", "line": 544, "token": "break"}, {"trailing": "\n                        ", "leading": "", "line": 544, "token": ";"}, {"trailing": "\n                    ", "leading": "\n                        ", "line": 545, "token": "}"}]], {"trailing": "\n                \n                    // only check those after last\n                    ", "leading": "\n                    ", "line": 546, "token": "}"}]], ["for(#)#", {"trailing": " ", "leading": "\n                \n                    // only check those after last\n                    ", "line": 549, "token": "for"}, {"trailing": "", "leading": " ", "line": 549, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 549, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 549, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 549, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 549, "leaf": true, "token": "lastPos"}]], {"trailing": " ", "leading": "", "line": 549, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 549, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 549, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 549, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 549, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 549, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 549, "token": "("}, {"trailing": "", "leading": "", "line": 549, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 549, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 549, "leaf": true, "token": "j"}, {"trailing": "", "leading": " ", "line": 549, "token": "++"}]], {"trailing": " ", "leading": "", "line": 549, "token": ")"}, ["{##}", {"trailing": " \n                        ", "leading": " ", "line": 549, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": " \n                        ", "line": 550, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 550, "leaf": true, "token": "d2"}, {"trailing": " ", "leading": " ", "line": 550, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 550, "leaf": true, "token": "secondDom"}, {"trailing": "", "leading": "", "line": 550, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 550, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 550, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 550, "leaf": true, "token": "j"}, {"trailing": "", "leading": "", "line": 550, "token": ")"}]]]], {"trailing": "\n                        // System.out.println(\"d2 is \" + d2);  \n                        // checks if there is a constraint that satisfies these values\n                        // again using flag to tell which way round to look at values\n                        ", "leading": "", "line": 550, "token": ";"}], ["if##", {"trailing": "", "leading": "\n                        // System.out.println(\"d2 is \" + d2);  \n                        // checks if there is a constraint that satisfies these values\n                        // again using flag to tell which way round to look at values\n                        ", "line": 554, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 554, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 554, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 554, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 554, "leaf": true, "token": "getConstraint"}, {"trailing": "", "leading": "", "line": 554, "token": "("}, {"trailing": "", "leading": "", "line": 554, "token": ")"}]], {"trailing": "", "leading": "", "line": 554, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 554, "leaf": true, "token": "cCheck"}, {"trailing": "", "leading": "", "line": 554, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 554, "leaf": true, "token": "d1"}, {"trailing": " ", "leading": "", "line": 554, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 554, "leaf": true, "token": "d2"}, {"trailing": " ", "leading": "", "line": 554, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 554, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 554, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 554, "leaf": true, "token": "getIsInverted"}, {"trailing": "", "leading": "", "line": 554, "token": "("}, {"trailing": "", "leading": "", "line": 554, "token": ")"}]]], {"trailing": "", "leading": "", "line": 554, "token": ")"}]], {"trailing": "", "leading": "", "line": 554, "token": ")"}], ["{#####break;}", {"trailing": "\n                            ", "leading": "", "line": 554, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                            ", "var": true, "line": 555, "leaf": true, "token": "supported"}, {"trailing": " ", "leading": " ", "line": 555, "token": "="}, {"trailing": "", "leading": " ", "line": 555, "leaf": true, "token": "true"}], {"trailing": "\n                            //set revertData last if it has not already been set\n                            \n                            ", "leading": "", "line": 555, "token": ";"}], ["if##", {"trailing": "", "leading": "\n                            //set revertData last if it has not already been set\n                            \n                            ", "line": 558, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 558, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 558, "token": "!"}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 558, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 558, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 558, "leaf": true, "token": "getChangedLastValid"}, {"trailing": "", "leading": "", "line": 558, "token": "("}, {"trailing": "", "leading": "", "line": 558, "token": ")"}]], {"trailing": "", "leading": "", "line": 558, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 558, "leaf": true, "token": "containsKey"}, {"trailing": "", "leading": "", "line": 558, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 558, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 558, "token": ")"}]]], {"trailing": "", "leading": "", "line": 558, "token": ")"}], ["{#}", {"trailing": "\n                                ", "leading": "", "line": 558, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                                ", "var": true, "line": 559, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 559, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 559, "leaf": true, "token": "getChangedLastValid"}, {"trailing": "", "leading": "", "line": 559, "token": "("}, {"trailing": "", "leading": "", "line": 559, "token": ")"}]], {"trailing": "", "leading": "", "line": 559, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 559, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 559, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 559, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": "", "line": 559, "token": ","}, ["new#", {"trailing": " ", "leading": " ", "line": 559, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 559, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 559, "token": "<"}, {"trailing": "", "leading": "", "line": 559, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 559, "token": ","}, {"trailing": "", "leading": " ", "line": 559, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 559, "token": ">"}]], {"trailing": "", "leading": "", "line": 559, "token": "("}, {"trailing": "", "leading": "", "line": 559, "token": ")"}]]], {"trailing": "", "leading": "", "line": 559, "token": ")"}]], {"trailing": "\n                            ", "leading": "", "line": 559, "token": ";"}], {"trailing": "\n                            ", "leading": "\n                            ", "line": 560, "token": "}"}]], ["#;", ["##", ["##", {"trailing": "", "leading": "\n                            ", "line": 561, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 561, "token": "<"}, {"trailing": "", "leading": "", "line": 561, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 561, "token": ","}, {"trailing": "", "leading": " ", "line": 561, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 561, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 561, "leaf": true, "token": "lastValidStore"}, {"trailing": " ", "leading": " ", "line": 561, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 561, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 561, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 561, "leaf": true, "token": "getLastValidInnerMap"}, {"trailing": "", "leading": "", "line": 561, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 561, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 561, "token": ")"}]]]], {"trailing": "\n                            ", "leading": "", "line": 561, "token": ";"}], ["if##", {"trailing": "", "leading": "\n                            ", "line": 562, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 562, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 562, "token": "!"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 562, "leaf": true, "token": "lastValidStore"}, {"trailing": "", "leading": "", "line": 562, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 562, "leaf": true, "token": "containsKey"}, {"trailing": "", "leading": "", "line": 562, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 562, "leaf": true, "token": "d1"}, {"trailing": "", "leading": "", "line": 562, "token": ")"}]]], {"trailing": "", "leading": "", "line": 562, "token": ")"}], ["{#}", {"trailing": "\n                                ", "leading": "", "line": 562, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                                ", "var": true, "line": 563, "leaf": true, "token": "lastValidStore"}, {"trailing": "", "leading": "", "line": 563, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 563, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 563, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 563, "leaf": true, "token": "d1"}, {"trailing": " ", "leading": "", "line": 563, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 563, "leaf": true, "token": "last"}], {"trailing": "", "leading": "", "line": 563, "token": ")"}]], {"trailing": "\n                            ", "leading": "", "line": 563, "token": ";"}], {"trailing": "\n                            ", "leading": "\n                            ", "line": 564, "token": "}"}]], ["#;", ["#.#", {"trailing": "", "leading": "\n                            ", "var": true, "line": 565, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 565, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 565, "leaf": true, "token": "setLastValidValue"}, {"trailing": "", "leading": "", "line": 565, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 565, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": "", "line": 565, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 565, "leaf": true, "token": "d1"}, {"trailing": " ", "leading": "", "line": 565, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 565, "leaf": true, "token": "d2"}], {"trailing": "", "leading": "", "line": 565, "token": ")"}]], {"trailing": "\n                            // stop looping once we know that d1 is supported\n                            ", "leading": "", "line": 565, "token": ";"}], {"trailing": "", "leading": "\n                            // stop looping once we know that d1 is supported\n                            ", "line": 567, "token": "break"}, {"trailing": "\n                        ", "leading": "", "line": 567, "token": ";"}, {"trailing": "\n                        \n                    ", "leading": "\n                        ", "line": 568, "token": "}"}]], {"trailing": "\n                ", "leading": "\n                        \n                    ", "line": 570, "token": "}"}]], {"trailing": "\n\n            ", "leading": "\n                ", "line": 571, "token": "}"}]], {"trailing": "\n            // not using AC3_1 efficency improvements\n            ", "leading": "\n\n            ", "line": 573, "token": "}"}], {"trailing": " ", "leading": "\n            // not using AC3_1 efficency improvements\n            ", "line": 575, "token": "else"}, ["{#}", {"trailing": "\n                ", "leading": " ", "line": 575, "token": "{"}, ["for(#)#", {"trailing": " ", "leading": "\n                ", "line": 576, "token": "for"}, {"trailing": "", "leading": " ", "line": 576, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 576, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": " ", "var": true, "line": 576, "leaf": true, "token": "d2"}, {"trailing": " ", "leading": " ", "line": 576, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 576, "leaf": true, "token": "secondDom"}], {"trailing": " ", "leading": "", "line": 576, "token": ")"}, ["{#}", {"trailing": "  \n                // System.out.println(\"d2 is \" + d2);  \n                // checks if there is a constraint that satisfies these values\n                // again using flag to tell which way round to look at values\n                    ", "leading": " ", "line": 576, "token": "{"}, ["if##", {"trailing": "", "leading": "  \n                // System.out.println(\"d2 is \" + d2);  \n                // checks if there is a constraint that satisfies these values\n                // again using flag to tell which way round to look at values\n                    ", "line": 580, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 580, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 580, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 580, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 580, "leaf": true, "token": "getConstraint"}, {"trailing": "", "leading": "", "line": 580, "token": "("}, {"trailing": "", "leading": "", "line": 580, "token": ")"}]], {"trailing": "", "leading": "", "line": 580, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 580, "leaf": true, "token": "cCheck"}, {"trailing": "", "leading": "", "line": 580, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 580, "leaf": true, "token": "d1"}, {"trailing": " ", "leading": "", "line": 580, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 580, "leaf": true, "token": "d2"}, {"trailing": " ", "leading": "", "line": 580, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 580, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 580, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 580, "leaf": true, "token": "getIsInverted"}, {"trailing": "", "leading": "", "line": 580, "token": "("}, {"trailing": "", "leading": "", "line": 580, "token": ")"}]]], {"trailing": "", "leading": "", "line": 580, "token": ")"}]], {"trailing": "", "leading": "", "line": 580, "token": ")"}], ["{#break;}", {"trailing": "\n                        ", "leading": "", "line": 580, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                        ", "var": true, "line": 581, "leaf": true, "token": "supported"}, {"trailing": " ", "leading": " ", "line": 581, "token": "="}, {"trailing": "", "leading": " ", "line": 581, "leaf": true, "token": "true"}], {"trailing": "\n                        // stop looping once we know that d1 is supported\n                        ", "leading": "", "line": 581, "token": ";"}], {"trailing": "", "leading": "\n                        // stop looping once we know that d1 is supported\n                        ", "line": 583, "token": "break"}, {"trailing": "\n                    ", "leading": "", "line": 583, "token": ";"}, {"trailing": "\n                \n                ", "leading": "\n                    ", "line": 584, "token": "}"}]], {"trailing": "\n            ", "leading": "\n                \n                ", "line": 586, "token": "}"}]], {"trailing": "\n            \n            \n            // if there is no valid value for var2 upon var1 == d1, then we remove d1 from the domain\n            ", "leading": "\n            ", "line": 587, "token": "}"}]], ["if##", {"trailing": "", "leading": "\n            \n            \n            // if there is no valid value for var2 upon var1 == d1, then we remove d1 from the domain\n            ", "line": 591, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 591, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 591, "token": "!"}, {"trailing": "", "leading": "", "var": true, "line": 591, "leaf": true, "token": "supported"}], {"trailing": "", "leading": "", "line": 591, "token": ")"}], ["{####}", {"trailing": "\n\n                // only add the domain if it is not already being stored\n\n                ", "leading": "", "line": 591, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n\n                // only add the domain if it is not already being stored\n\n                ", "line": 595, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 595, "token": "<"}, {"trailing": "", "leading": "", "line": 595, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 595, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 595, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 595, "token": "<"}, {"trailing": "", "leading": "", "line": 595, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 595, "token": ">"}]], {"trailing": " ", "leading": "", "line": 595, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 595, "leaf": true, "token": "domainStore"}, {"trailing": " ", "leading": " ", "line": 595, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 595, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 595, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 595, "leaf": true, "token": "getChangedDomains"}, {"trailing": "", "leading": "", "line": 595, "token": "("}, {"trailing": "", "leading": "", "line": 595, "token": ")"}]]]], {"trailing": "\n                ", "leading": "", "line": 595, "token": ";"}], ["if##", {"trailing": "", "leading": "\n                ", "line": 596, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 596, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 596, "token": "!"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 596, "leaf": true, "token": "domainStore"}, {"trailing": "", "leading": "", "line": 596, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 596, "leaf": true, "token": "containsKey"}, {"trailing": "", "leading": "", "line": 596, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 596, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 596, "token": ")"}]]], {"trailing": "", "leading": "", "line": 596, "token": ")"}], ["{#}", {"trailing": "\n                    ", "leading": "", "line": 596, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n                    ", "var": true, "line": 597, "leaf": true, "token": "domainStore"}, {"trailing": "", "leading": "", "line": 597, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 597, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 597, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 597, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": "", "line": 597, "token": ","}, ["#(#)", {"trailing": "", "leading": " ", "line": 597, "leaf": true, "token": "deepCopyIntList"}, {"trailing": "", "leading": "", "line": 597, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 597, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 597, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 597, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 597, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 597, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 597, "token": ")"}]], {"trailing": "", "leading": "", "line": 597, "token": ")"}]], {"trailing": "", "leading": "", "line": 597, "token": ")"}]], {"trailing": "\n                ", "leading": "", "line": 597, "token": ";"}], {"trailing": "\n                ", "leading": "\n                ", "line": 598, "token": "}"}]], ["#;", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 599, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 599, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 599, "leaf": true, "token": "deleteDomValue"}, {"trailing": "", "leading": "", "line": 599, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 599, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": "", "line": 599, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 599, "leaf": true, "token": "d1"}], {"trailing": "", "leading": "", "line": 599, "token": ")"}]], {"trailing": "\n                \n                // atleast one value in the domain removed so we flag to add to queue\n                ", "leading": "", "line": 599, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n                \n                // atleast one value in the domain removed so we flag to add to queue\n                ", "var": true, "line": 602, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 602, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 602, "leaf": true, "token": "incrementChanged"}, {"trailing": "", "leading": "", "line": 602, "token": "("}, {"trailing": "", "leading": "", "line": 602, "token": ")"}]], {"trailing": "\n                // changed ++;\n            ", "leading": "", "line": 602, "token": ";"}], {"trailing": "\n        ", "leading": "\n                // changed ++;\n            ", "line": 604, "token": "}"}]], {"trailing": "\n        ", "leading": "\n        ", "line": 605, "token": "}"}]], ["if##else#", {"trailing": "", "leading": "\n        ", "line": 606, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 606, "token": "("}, ["#==#", ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 606, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 606, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 606, "leaf": true, "token": "getVarDomain"}, {"trailing": "", "leading": "", "line": 606, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 606, "leaf": true, "token": "var1"}, {"trailing": "", "leading": "", "line": 606, "token": ")"}]], {"trailing": "", "leading": "", "line": 606, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 606, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 606, "token": "("}, {"trailing": " ", "leading": "", "line": 606, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 606, "token": "=="}, {"trailing": "", "leading": " ", "line": 606, "leaf": true, "token": "0"}], {"trailing": "", "leading": "", "line": 606, "token": ")"}], ["{##}", {"trailing": "\n            // System.out.println(\"Empty domain\");\n            // ERROR maybe throw an exception? although I think that is slow?\n            // tbh could count the number of changes, and use -1 for error\n            // no real reason to count them but I suppose we might aswell\n            ", "leading": "", "line": 606, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            // System.out.println(\"Empty domain\");\n            // ERROR maybe throw an exception? although I think that is slow?\n            // tbh could count the number of changes, and use -1 for error\n            // no real reason to count them but I suppose we might aswell\n            ", "var": true, "line": 611, "leaf": true, "token": "revertData"}, {"trailing": "", "leading": "", "line": 611, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 611, "leaf": true, "token": "setChanged"}, {"trailing": "", "leading": "", "line": 611, "token": "("}, ["-#", {"trailing": "", "leading": "", "line": 611, "token": "-"}, {"trailing": "", "leading": "", "line": 611, "leaf": true, "token": "1"}], {"trailing": "", "leading": "", "line": 611, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 611, "token": ";"}], ["return#;", {"trailing": " ", "leading": "\n            ", "line": 612, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 612, "leaf": true, "token": "revertData"}, {"trailing": "\n            // return -1;\n        ", "leading": "", "line": 612, "token": ";"}], {"trailing": " ", "leading": "\n            // return -1;\n        ", "line": 614, "token": "}"}], {"trailing": " ", "leading": " ", "line": 614, "token": "else"}, ["{#}", {"trailing": "\n            // if any value removed than changed > 0.\n            \n            ", "leading": " ", "line": 614, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            // if any value removed than changed > 0.\n            \n            ", "line": 617, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 617, "leaf": true, "token": "revertData"}, {"trailing": "\n        ", "leading": "", "line": 617, "token": ";"}], {"trailing": "\n    ", "leading": "\n        ", "line": 618, "token": "}"}]], {"trailing": "\n\n    \n\n\n    //helper functions to create deep copies for reverting back to\n\n    ", "leading": "\n    ", "line": 619, "token": "}"}], "method": "revise", "beginline": 489, "class": "BinaryCSPSolver", "features": [13, 46, 37, 777, 778, 779, 780, 781, 781, 13, 46, 37, 782, 782, 783, 784, 785, 786, 787, 787, 60, 61, 62, 122, 788, 788, 13, 44, 45, 37, 74, 74, 13, 46, 36, 45, 30, 30, 663, 664, 665, 718, 667, 667, 13, 44, 45, 37, 668, 668, 13, 46, 36, 45, 719, 719, 30, 30, 721, 722, 723, 724, 725, 725, 110, 111, 111, 112, 789, 789, 113, 114, 115, 116, 117, 117, 13, 44, 118, 37, 119, 119, 268, 790, 523, 524, 525, 525, 110, 111, 111, 112, 791, 791, 113, 114, 115, 116, 117, 117, 13, 44, 118, 37, 119, 119, 268, 790, 523, 524, 525, 525, 13, 46, 46, 367, 792, 792, 793, 793, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 401, 401, 549, 549, 794, 795, 796, 797, 798, 798, 13, 46, 37, 197, 535, 535, 799, 799, 536, 537, 538, 539, 540, 540, 13, 46, 46, 52, 800, 800, 792, 792, 543, 543, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 106, 106, 401, 401, 549, 549, 550, 551, 552, 553, 554, 554, 13, 44, 37, 220, 801, 801, 103, 103, 556, 556, 13, 46, 36, 37, 802, 802, 802, 802, 30, 30, 47, 48, 49, 120, 51, 51, 13, 52, 53, 36, 106, 106, 106, 106, 54, 54, 13, 46, 46, 367, 803, 803, 800, 800, 30, 30, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 401, 401, 549, 549, 794, 795, 796, 797, 798, 798, 13, 46, 37, 197, 535, 535, 799, 799, 536, 537, 538, 539, 540, 540, 13, 46, 46, 52, 800, 800, 803, 803, 543, 543, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 106, 106, 401, 401, 549, 549, 550, 551, 552, 553, 554, 554, 13, 44, 37, 220, 801, 801, 103, 103, 556, 556, 13, 46, 36, 37, 802, 802, 802, 802, 30, 30, 47, 48, 49, 120, 51, 51, 13, 52, 53, 36, 106, 106, 106, 106, 54, 54, 13, 44, 45, 73, 30, 30, 13, 46, 749, 36, 137, 137, 804, 804, 30, 30, 64, 65, 66, 805, 88, 88, 75, 757, 76, 77, 436, 436, 13, 230, 81, 82, 806, 806, 84, 84, 60, 237, 807, 808, 123, 123, 13, 809, 90, 82, 810, 810, 811, 811, 74, 74, 13, 44, 45, 37, 30, 30, 13, 46, 36, 45, 94, 94, 135, 135, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 812, 812, 813, 813, 97, 97, 357, 358, 359, 814, 815, 815, 13, 44, 118, 37, 360, 360, 816, 817, 818, 819, 820, 820, 13, 46, 27, 367, 157, 157, 569, 569, 821, 821, 158, 159, 160, 570, 162, 162, 163, 164, 164, 165, 166, 166, 167, 168, 169, 170, 171, 171, 313, 314, 315, 822, 317, 317, 13, 44, 45, 37, 748, 748, 13, 46, 36, 45, 823, 823, 824, 824, 30, 30, 825, 826, 827, 828, 829, 829, 13, 144, 52, 53, 830, 830, 831, 831, 832, 832, 13, 147, 52, 53, 148, 148, 30, 30, 13, 46, 367, 197, 731, 731, 833, 833, 30, 30, 656, 657, 658, 834, 660, 660, 13, 52, 53, 367, 401, 401, 662, 662, 13, 44, 37, 197, 103, 103, 30, 30, 361, 362, 364, 835, 365, 365, 13, 44, 45, 37, 366, 366, 60, 72, 121, 122, 123, 123, 13, 44, 45, 73, 74, 74, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 836, 836, 137, 137, 30, 30, 64, 65, 66, 87, 88, 88, 13, 89, 90, 82, 91, 91, 92, 92, 69, 69, 13, 46, 246, 98, 94, 94, 837, 837, 30, 30, 55, 56, 57, 838, 59, 59, 13, 52, 53, 246, 95, 95, 96, 96, 97, 97, 13, 249, 98, 99, 839, 839, 250, 250, 30, 30, 13, 44, 37, 840, 103, 103, 30, 30, 13, 36, 37, 840, 841, 841, 842, 842, 30, 30, 13, 44, 45, 73, 30, 30, 13, 36, 45, 73, 105, 105, 105, 105, 30, 30, 13, 80, 81, 82, 83, 83, 30, 30, 13, 46, 85, 81, 86, 86, 843, 843, 30, 30, 64, 65, 66, 87, 88, 88, 13, 89, 90, 82, 91, 91, 92, 92, 69, 69, 13, 44, 45, 37, 30, 30, 13, 46, 36, 45, 94, 94, 70, 70, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 95, 95, 96, 96, 97, 97, 13, 46, 46, 98, 844, 844, 845, 845, 30, 30, 846, 847, 848, 849, 850, 850, 851, 852, 853, 854, 855, 855, 13, 205, 52, 53, 416, 416, 745, 745, 856, 856, 13, 214, 52, 53, 857, 857, 30, 30, 13, 46, 218, 52, 858, 858, 859, 859, 30, 30, 860, 861, 862, 863, 864, 864, 13, 44, 37, 865, 103, 103, 103, 103, 866, 866, 361, 362, 364, 867, 365, 365, 13, 46, 46, 437, 868, 868, 366, 366, 335, 336, 337, 338, 339, 339, 869, 870, 871, 872, 873, 873, 13, 52, 53, 437, 874, 874, 875, 875, 876, 876, 13, 46, 46, 37, 877, 877, 868, 868, 30, 30, 335, 336, 337, 338, 339, 339, 878, 879, 880, 881, 882, 882, 13, 144, 52, 53, 145, 145, 883, 883, 884, 884, 324, 325, 885, 886, 887, 887, 113, 265, 115, 526, 329, 329, 113, 273, 115, 526, 330, 330, 324, 325, 325, 888, 889, 889, 113, 265, 115, 116, 329, 329, 113, 273, 115, 116, 330, 330, 13, 44, 118, 37, 119, 119, 13, 46, 36, 118, 890, 890, 890, 890, 30, 30, 891, 892, 893, 894, 895, 895, 13, 52, 53, 36, 566, 566, 106, 106, 896, 896, 13, 46, 437, 98, 897, 897, 30, 30, 869, 870, 871, 872, 898, 898, 13, 52, 53, 437, 899, 899, 900, 900, 876, 876, 13, 46, 37, 101, 901, 901, 902, 902, 30, 30, 878, 879, 880, 881, 903, 903, 13, 144, 52, 53, 145, 145, 904, 904, 884, 884, 13, 147, 52, 53, 905, 905, 410, 410, 30, 30, 13, 46, 37, 906, 907, 907, 345, 345, 30, 30, 347, 348, 349, 350, 351, 351, 13, 205, 52, 53, 417, 417, 908, 908, 353, 353, 13, 214, 52, 53, 215, 215, 216, 216, 30, 30, 13, 218, 52, 53, 909, 909, 419, 419, 30, 30, 113, 124, 125, 910, 911, 911, 13, 127, 82, 220, 912, 912, 913, 913, 119, 119, 13, 128, 82, 220, 914, 914, 915, 915, 30, 30, 13, 46, 46, 98, 916, 916, 917, 917, 30, 30, 846, 847, 848, 849, 850, 850, 851, 852, 853, 854, 855, 855, 13, 205, 52, 53, 918, 918, 908, 908, 856, 856, 13, 214, 52, 53, 919, 919, 920, 920, 30, 30, 13, 46, 218, 52, 858, 858, 921, 921, 30, 30, 860, 861, 862, 863, 864, 864, 13, 44, 37, 840, 103, 103, 103, 103, 866, 866, 361, 362, 364, 922, 365, 365, 13, 437, 98, 99, 923, 923, 923, 923, 366, 366, 324, 325, 325, 888, 887, 887, 113, 265, 115, 116, 329, 329, 268, 269, 270, 924, 272, 272, 113, 114, 115, 273, 274, 274, 13, 44, 118, 37, 119, 119, 13, 46, 36, 118, 925, 925, 926, 926, 30, 30, 277, 278, 279, 927, 281, 281, 13, 46, 437, 98, 897, 897, 928, 928, 869, 870, 871, 872, 898, 898, 13, 52, 53, 437, 106, 106, 106, 106, 876, 876, 13, 46, 37, 101, 901, 901, 902, 902, 30, 30, 878, 879, 880, 881, 903, 903, 13, 144, 52, 53, 145, 145, 145, 145, 884, 884, 574, 575, 929, 930, 578, 578, 13, 46, 52, 147, 931, 931, 932, 932, 580, 580, 47, 48, 49, 609, 51, 51, 13, 52, 53, 52, 566, 566, 106, 106, 54, 54, 13, 46, 37, 101, 610, 610, 933, 933, 30, 30, 612, 613, 614, 615, 616, 616, 13, 144, 52, 53, 145, 145, 934, 934, 617, 617, 13, 147, 52, 53, 935, 935, 936, 936, 30, 30, 13, 46, 37, 101, 937, 937, 938, 938, 30, 30, 939, 940, 941, 942, 943, 943, 13, 46, 46, 27, 618, 618, 93, 93, 944, 944, 47, 48, 49, 50, 51, 51, 13, 52, 53, 46, 566, 566, 106, 106, 54, 54, 64, 65, 66, 433, 88, 88, 60, 945, 946, 621, 621, 13, 46, 37, 197, 947, 947, 948, 948, 74, 74, 783, 784, 785, 786, 787, 787, 75, 134, 949, 950, 951, 951, 13, 21, 197, 952, 952, 953, 953, 84, 84, 13, 21, 220, 682, 682, 952, 952, 30, 30], "index": 16}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 634, "ast": ["{###}", {"trailing": "\n        ", "leading": "", "line": 626, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 627, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 627, "token": "<"}, {"trailing": "", "leading": "", "line": 627, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 627, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 627, "leaf": true, "token": "deepCopy"}, {"trailing": " ", "leading": " ", "line": 627, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 627, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 627, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 627, "token": "<"}, {"trailing": "", "leading": "", "line": 627, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 627, "token": ">"}]], {"trailing": "", "leading": "", "line": 627, "token": "("}, {"trailing": "", "leading": "", "line": 627, "token": ")"}]]]], {"trailing": "\n\n        ", "leading": "", "line": 627, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n\n        ", "line": 629, "token": "for"}, {"trailing": "", "leading": " ", "line": 629, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 629, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": " ", "var": true, "line": 629, "leaf": true, "token": "val"}, {"trailing": " ", "leading": " ", "line": 629, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 629, "leaf": true, "token": "intList"}], {"trailing": " ", "leading": "", "line": 629, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 629, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 630, "leaf": true, "token": "deepCopy"}, {"trailing": "", "leading": "", "line": 630, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 630, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 630, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 630, "leaf": true, "token": "val"}, {"trailing": "", "leading": "", "line": 630, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 630, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n        ", "line": 631, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n        ", "line": 633, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 633, "leaf": true, "token": "deepCopy"}, {"trailing": "\n    ", "leading": "", "line": 633, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 634, "token": "}"}], "method": "deepCopyIntList", "beginline": 626, "class": "BinaryCSPSolver", "features": [268, 269, 269, 521, 113, 114, 115, 116, 274, 274, 13, 44, 118, 37, 119, 119, 268, 269, 523, 524, 525, 525, 113, 114, 115, 526, 274, 274, 113, 124, 125, 330, 330, 13, 127, 82, 119, 119, 13, 128, 82, 30, 30, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 132, 132, 543, 543, 13, 21, 954, 954, 107, 107, 30, 30], "index": 17}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 643, "ast": ["{###}", {"trailing": "\n        ", "leading": "", "line": 636, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 637, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 637, "token": "<"}, ["##", {"trailing": "", "leading": "", "line": 637, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 637, "token": "<"}, {"trailing": "", "leading": "", "line": 637, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 637, "token": ">"}]], {"trailing": " ", "leading": "", "line": 637, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 637, "leaf": true, "token": "deepCopy"}, {"trailing": " ", "leading": " ", "line": 637, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 637, "token": "new"}, ["#()", ["#<>", {"trailing": "", "leading": " ", "line": 637, "leaf": true, "token": "ArrayList"}, {"trailing": "", "leading": "", "line": 637, "token": "<"}, {"trailing": "", "leading": "", "line": 637, "token": ">"}], {"trailing": "", "leading": "", "line": 637, "token": "("}, {"trailing": "", "leading": "", "line": 637, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 637, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 638, "token": "for"}, {"trailing": "", "leading": " ", "line": 638, "token": "("}, ["##:#", ["##", {"trailing": "", "leading": "", "line": 638, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 638, "token": "<"}, {"trailing": "", "leading": "", "line": 638, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 638, "token": ">"}]], {"trailing": " ", "leading": " ", "var": true, "line": 638, "leaf": true, "token": "innerList"}, {"trailing": " ", "leading": " ", "line": 638, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 638, "leaf": true, "token": "intNestedList"}], {"trailing": " ", "leading": "", "line": 638, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 638, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 639, "leaf": true, "token": "deepCopy"}, {"trailing": "", "leading": "", "line": 639, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 639, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 639, "token": "("}, ["#(#)", {"trailing": "", "leading": "", "line": 639, "leaf": true, "token": "deepCopyIntList"}, {"trailing": "", "leading": "", "line": 639, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 639, "leaf": true, "token": "innerList"}, {"trailing": "", "leading": "", "line": 639, "token": ")"}], {"trailing": "", "leading": "", "line": 639, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 639, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n        ", "line": 640, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n        ", "line": 642, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 642, "leaf": true, "token": "deepCopy"}, {"trailing": "\n    ", "leading": "", "line": 642, "token": ";"}], {"trailing": "\n    \n    ", "leading": "\n    ", "line": 643, "token": "}"}], "method": "deepCopy2DIntList", "beginline": 636, "class": "BinaryCSPSolver", "features": [268, 269, 269, 521, 110, 111, 955, 956, 791, 791, 113, 114, 115, 114, 117, 117, 13, 44, 118, 37, 119, 119, 268, 790, 523, 524, 525, 525, 110, 111, 957, 958, 791, 791, 113, 114, 115, 124, 117, 117, 13, 127, 82, 119, 119, 13, 128, 82, 30, 30, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 574, 575, 930, 959, 960, 960, 13, 52, 52, 53, 132, 132, 580, 580, 13, 21, 954, 954, 107, 107, 30, 30], "index": 18}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 652, "ast": ["{###}", {"trailing": "\n        ", "leading": "", "line": 645, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 646, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 646, "token": "<"}, {"trailing": "", "leading": "", "line": 646, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 646, "token": ","}, {"trailing": "", "leading": " ", "line": 646, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 646, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 646, "leaf": true, "token": "deepCopy"}, {"trailing": " ", "leading": " ", "line": 646, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 646, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 646, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 646, "token": "<"}, {"trailing": "", "leading": "", "line": 646, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 646, "token": ","}, {"trailing": "", "leading": " ", "line": 646, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 646, "token": ">"}]], {"trailing": "", "leading": "", "line": 646, "token": "("}, {"trailing": "", "leading": "", "line": 646, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 646, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 647, "token": "for"}, {"trailing": "", "leading": "", "line": 647, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 647, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 647, "token": "."}, {"trailing": "", "leading": "", "line": 647, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 647, "token": "<"}, {"trailing": "", "leading": "", "line": 647, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 647, "token": ","}, {"trailing": "", "leading": " ", "line": 647, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 647, "token": ">"}]], {"trailing": " ", "leading": " ", "var": true, "line": 647, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": " ", "line": 647, "token": ":"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 647, "leaf": true, "token": "intMap"}, {"trailing": "", "leading": "", "line": 647, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 647, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 647, "token": "("}, {"trailing": "", "leading": "", "line": 647, "token": ")"}]]], {"trailing": "", "leading": "", "line": 647, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 647, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 648, "leaf": true, "token": "deepCopy"}, {"trailing": "", "leading": "", "line": 648, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 648, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 648, "token": "("}, ["#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 648, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 648, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 648, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 648, "token": "("}, {"trailing": "", "leading": "", "line": 648, "token": ")"}]], {"trailing": " ", "leading": "", "line": 648, "token": ","}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 648, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 648, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 648, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 648, "token": "("}, {"trailing": "", "leading": "", "line": 648, "token": ")"}]]], {"trailing": "", "leading": "", "line": 648, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 648, "token": ";"}], {"trailing": "\n        \n        ", "leading": "\n        ", "line": 649, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n        \n        ", "line": 651, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 651, "leaf": true, "token": "deepCopy"}, {"trailing": "\n    ", "leading": "", "line": 651, "token": ";"}], {"trailing": "\n\n    // create clone of the hashmap to revert to \n    ", "leading": "\n    ", "line": 652, "token": "}"}], "method": "deepCopyIntMap", "beginline": 645, "class": "BinaryCSPSolver", "features": [324, 325, 325, 888, 113, 265, 115, 116, 329, 329, 113, 273, 115, 116, 330, 330, 13, 44, 118, 37, 119, 119, 324, 325, 885, 886, 887, 887, 113, 265, 115, 526, 329, 329, 113, 273, 115, 526, 330, 330, 255, 256, 257, 258, 961, 961, 260, 261, 262, 263, 264, 264, 113, 265, 266, 124, 267, 267, 113, 273, 266, 124, 330, 330, 13, 127, 82, 119, 119, 13, 46, 128, 82, 30, 30, 282, 283, 284, 285, 962, 962, 13, 46, 37, 99, 902, 902, 289, 289, 878, 879, 880, 881, 903, 903, 13, 46, 144, 52, 295, 295, 884, 884, 297, 298, 299, 300, 301, 301, 13, 46, 147, 52, 302, 302, 303, 303, 304, 304, 305, 306, 307, 308, 309, 309, 13, 21, 963, 963, 107, 107, 311, 311], "index": 19}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 665, "ast": ["{####}", {"trailing": "\n        ", "leading": "", "line": 655, "token": "{"}, ["if##", {"trailing": "", "leading": "\n        ", "line": 656, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 656, "token": "("}, ["#!=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 656, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 656, "token": "."}, {"trailing": " ", "leading": "", "line": 656, "leaf": true, "token": "pruneType"}], {"trailing": " ", "leading": " ", "line": 656, "token": "!="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 656, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 656, "token": "."}, {"trailing": "", "leading": "", "line": 656, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 656, "token": "."}, {"trailing": "", "leading": "", "line": 656, "leaf": true, "token": "AC3_1"}]], {"trailing": "", "leading": "", "line": 656, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 656, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            ", "line": 657, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 657, "leaf": true, "token": "lastValid"}, {"trailing": "\n        ", "leading": "", "line": 657, "token": ";"}], {"trailing": "\n        ", "leading": "\n        ", "line": 658, "token": "}"}]], ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 659, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 659, "token": "<"}, {"trailing": "", "leading": "", "line": 659, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 659, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 659, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 659, "token": "<"}, {"trailing": "", "leading": "", "line": 659, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 659, "token": ","}, {"trailing": "", "leading": " ", "line": 659, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 659, "token": ">"}]], {"trailing": " ", "leading": "", "line": 659, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 659, "leaf": true, "token": "deepCopy"}, {"trailing": " ", "leading": " ", "line": 659, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 659, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 659, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 659, "token": "<"}, {"trailing": "", "leading": "", "line": 659, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 659, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 659, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 659, "token": "<"}, {"trailing": "", "leading": "", "line": 659, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 659, "token": ","}, {"trailing": "", "leading": " ", "line": 659, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 659, "token": ">"}]], {"trailing": "", "leading": "", "line": 659, "token": ">"}]], {"trailing": "", "leading": "", "line": 659, "token": "("}, {"trailing": "", "leading": "", "line": 659, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 659, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 660, "token": "for"}, {"trailing": "", "leading": "", "line": 660, "token": "("}, ["##:#", ["#.##", {"trailing": "", "leading": "", "line": 660, "leaf": true, "token": "Map"}, {"trailing": "", "leading": "", "line": 660, "token": "."}, {"trailing": "", "leading": "", "line": 660, "leaf": true, "token": "Entry"}, ["<#,#>", {"trailing": "", "leading": "", "line": 660, "token": "<"}, {"trailing": "", "leading": "", "line": 660, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 660, "token": ","}, ["##", {"trailing": "", "leading": " ", "line": 660, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 660, "token": "<"}, {"trailing": "", "leading": "", "line": 660, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 660, "token": ","}, {"trailing": "", "leading": " ", "line": 660, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 660, "token": ">"}]], {"trailing": " ", "leading": "", "line": 660, "token": ">"}]], {"trailing": "", "leading": " ", "var": true, "line": 660, "leaf": true, "token": "entry"}, {"trailing": " ", "leading": "", "line": 660, "token": ":"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 660, "leaf": true, "token": "lastValid"}, {"trailing": "", "leading": "", "line": 660, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 660, "leaf": true, "token": "entrySet"}, {"trailing": "", "leading": "", "line": 660, "token": "("}, {"trailing": "", "leading": "", "line": 660, "token": ")"}]]], {"trailing": "", "leading": "", "line": 660, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 660, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 661, "leaf": true, "token": "deepCopy"}, {"trailing": "", "leading": "", "line": 661, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 661, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 661, "token": "("}, ["#,#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 661, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 661, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 661, "leaf": true, "token": "getKey"}, {"trailing": "", "leading": "", "line": 661, "token": "("}, {"trailing": "", "leading": "", "line": 661, "token": ")"}]], {"trailing": " ", "leading": "", "line": 661, "token": ","}, ["#(#)", {"trailing": "", "leading": " ", "line": 661, "leaf": true, "token": "deepCopyIntMap"}, {"trailing": "", "leading": "", "line": 661, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 661, "leaf": true, "token": "entry"}, {"trailing": "", "leading": "", "line": 661, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 661, "leaf": true, "token": "getValue"}, {"trailing": "", "leading": "", "line": 661, "token": "("}, {"trailing": "", "leading": "", "line": 661, "token": ")"}]], {"trailing": "", "leading": "", "line": 661, "token": ")"}]], {"trailing": "", "leading": "", "line": 661, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 661, "token": ";"}], {"trailing": "\n\n        ", "leading": "\n        ", "line": 662, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n        ", "line": 664, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 664, "leaf": true, "token": "deepCopy"}, {"trailing": "\n    ", "leading": "", "line": 664, "token": ";"}], {"trailing": "\n\n    // quality of life printing out list of ints\n    ", "leading": "\n    ", "line": 665, "token": "}"}], "method": "deepCopy2DIntMap", "beginline": 655, "class": "BinaryCSPSolver", "features": [13, 46, 964, 98, 158, 159, 965, 312, 162, 162, 163, 164, 164, 966, 166, 166, 167, 168, 169, 967, 171, 171, 313, 314, 968, 316, 317, 317, 13, 21, 101, 748, 748, 324, 325, 325, 888, 887, 887, 319, 320, 636, 637, 969, 969, 324, 325, 326, 970, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 13, 44, 118, 37, 119, 119, 324, 325, 885, 886, 887, 887, 319, 320, 636, 643, 969, 969, 324, 325, 326, 970, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 255, 256, 257, 258, 961, 961, 260, 261, 262, 263, 264, 264, 319, 320, 321, 322, 323, 323, 324, 325, 326, 327, 328, 328, 113, 265, 115, 273, 329, 329, 113, 273, 115, 273, 330, 330, 13, 127, 82, 119, 119, 13, 46, 128, 82, 971, 971, 30, 30, 282, 283, 284, 285, 962, 962, 13, 46, 37, 99, 902, 902, 289, 289, 878, 879, 880, 881, 903, 903, 13, 46, 144, 52, 295, 295, 884, 884, 297, 298, 299, 300, 301, 301, 972, 973, 974, 975, 976, 976, 13, 46, 52, 147, 302, 302, 303, 303, 977, 977, 305, 306, 307, 978, 309, 309, 13, 21, 963, 963, 107, 107, 311, 311], "index": 20}
{"path": "jsrc/BinaryCSPSolver.java", "endline": 674, "ast": ["{###}", {"trailing": "\n        ", "leading": "", "line": 668, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 669, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 669, "token": "."}, {"trailing": "", "leading": "", "line": 669, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 669, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 669, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 669, "token": "("}, {"trailing": "", "leading": "", "line": 669, "leaf": true, "token": "\"[ \""}, {"trailing": "", "leading": "", "line": 669, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 669, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n        ", "line": 670, "token": "for"}, {"trailing": "", "leading": " ", "line": 670, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 670, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": " ", "var": true, "line": 670, "leaf": true, "token": "integer"}, {"trailing": " ", "leading": " ", "line": 670, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 670, "leaf": true, "token": "Domain"}], {"trailing": " ", "leading": "", "line": 670, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 670, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 671, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 671, "token": "."}, {"trailing": "", "leading": "", "line": 671, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 671, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 671, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 671, "token": "("}, ["#+#", {"trailing": " ", "leading": "", "var": true, "line": 671, "leaf": true, "token": "integer"}, {"trailing": " ", "leading": " ", "line": 671, "token": "+"}, {"trailing": "", "leading": " ", "line": 671, "leaf": true, "token": "\" \""}], {"trailing": "", "leading": "", "line": 671, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 671, "token": ";"}], {"trailing": "\n        ", "leading": "\n        ", "line": 672, "token": "}"}]], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 673, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 673, "token": "."}, {"trailing": "", "leading": "", "line": 673, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 673, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 673, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 673, "token": "("}, {"trailing": "", "leading": "", "line": 673, "leaf": true, "token": "\"]\""}, {"trailing": "", "leading": "", "line": 673, "token": ")"}]], {"trailing": "\n    ", "leading": "", "line": 673, "token": ";"}], {"trailing": "\n", "leading": "\n    ", "line": 674, "token": "}"}], "method": "printDomain", "beginline": 668, "class": "BinaryCSPSolver", "features": [445, 446, 446, 447, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 984, 985, 986, 987, 988, 988, 113, 124, 125, 989, 989, 13, 127, 82, 119, 119, 990, 991, 992, 993, 993, 445, 446, 446, 447, 994, 994, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 13, 15, 52, 53, 995, 995, 996, 996, 997, 998, 999, 1000, 1001, 1001, 445, 446, 446, 447, 1002, 1002, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1003, 1004, 1005, 1006, 1007, 1007], "index": 21}
{"path": "jsrc/BinaryCSP.java", "endline": 86, "ast": ["{#####}", {"trailing": "\n    ", "leading": " ", "line": 78, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n    ", "line": 79, "leaf": true, "token": "StringBuffer"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 79, "leaf": true, "token": "result"}, {"trailing": " ", "leading": " ", "line": 79, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 79, "token": "new"}, ["#()", {"trailing": "", "leading": " ", "line": 79, "leaf": true, "token": "StringBuffer"}, {"trailing": "", "leading": "", "line": 79, "token": "("}, {"trailing": " ", "leading": "", "line": 79, "token": ")"}]]]], {"trailing": "\n    ", "leading": " ", "line": 79, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n    ", "var": true, "line": 80, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 80, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "append"}, {"trailing": "", "leading": "", "line": 80, "token": "("}, {"trailing": "", "leading": "", "line": 80, "leaf": true, "token": "\"CSP:\\n\""}, {"trailing": " ", "leading": "", "line": 80, "token": ")"}]], {"trailing": "\n    ", "leading": " ", "line": 80, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n    ", "line": 81, "token": "for"}, {"trailing": "", "leading": " ", "line": 81, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 81, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 81, "token": "="}, {"trailing": "", "leading": " ", "line": 81, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 81, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 81, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 81, "token": "."}, {"trailing": "", "leading": "", "line": 81, "leaf": true, "token": "length"}]], {"trailing": " ", "leading": "", "line": 81, "token": ";"}, ["#++", {"trailing": "", "leading": " ", "var": true, "line": 81, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 81, "token": "++"}]], {"trailing": "\n      ", "leading": "", "line": 81, "token": ")"}, ["#;", ["#.#", {"trailing": "", "leading": "\n      ", "var": true, "line": 82, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 82, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "append"}, {"trailing": "", "leading": "", "line": 82, "token": "("}, ["#+#", ["#+#", ["#+#", ["#+#", ["#+#", ["#+#", {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "\"Var \""}, {"trailing": "", "leading": "", "line": 82, "token": "+"}, {"trailing": "", "leading": "", "var": true, "line": 82, "leaf": true, "token": "i"}], {"trailing": "", "leading": "", "line": 82, "token": "+"}, {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "\": \""}], {"trailing": "", "leading": "", "line": 82, "token": "+"}, ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 82, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 82, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 82, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 82, "token": "]"}], {"trailing": "", "leading": "", "line": 82, "token": "["}, {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 82, "token": "]"}]], {"trailing": "", "leading": "", "line": 82, "token": "+"}, {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "\" .. \""}], {"trailing": "", "leading": "", "line": 82, "token": "+"}, ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 82, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 82, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 82, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 82, "token": "]"}], {"trailing": "", "leading": "", "line": 82, "token": "["}, {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "1"}, {"trailing": "", "leading": "", "line": 82, "token": "]"}]], {"trailing": "", "leading": "", "line": 82, "token": "+"}, {"trailing": "", "leading": "", "line": 82, "leaf": true, "token": "\"\\n\""}], {"trailing": " ", "leading": "", "line": 82, "token": ")"}]], {"trailing": "\n    ", "leading": " ", "line": 82, "token": ";"}]], ["for(#)#", {"trailing": " ", "leading": "\n    ", "line": 83, "token": "for"}, {"trailing": "", "leading": " ", "line": 83, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 83, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "bc"}, {"trailing": " ", "leading": " ", "line": 83, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 83, "leaf": true, "token": "constraints"}], {"trailing": "\n      ", "leading": "", "line": 83, "token": ")"}, ["#;", ["#.#", {"trailing": "", "leading": "\n      ", "var": true, "line": 84, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 84, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "append"}, {"trailing": "", "leading": "", "line": 84, "token": "("}, ["#+#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 84, "leaf": true, "token": "bc"}, {"trailing": "", "leading": "", "line": 84, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "getConstraint"}, {"trailing": "", "leading": "", "line": 84, "token": "("}, {"trailing": "", "leading": "", "line": 84, "token": ")"}]], {"trailing": "", "leading": "", "line": 84, "token": "+"}, {"trailing": "", "leading": "", "line": 84, "leaf": true, "token": "\"\\n\""}], {"trailing": " ", "leading": "", "line": 84, "token": ")"}]], {"trailing": "\n    ", "leading": " ", "line": 84, "token": ";"}]], ["return#;", {"trailing": " ", "leading": "\n    ", "line": 85, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 85, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 85, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 85, "leaf": true, "token": "toString"}, {"trailing": "", "leading": "", "line": 85, "token": "("}, {"trailing": " ", "leading": "", "line": 85, "token": ")"}]], {"trailing": "\n  ", "leading": " ", "line": 85, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 86, "token": "}"}], "method": "toString", "beginline": 78, "class": "BinaryCSP", "features": [1008, 1009, 1010, 13, 44, 118, 37, 1011, 1011, 1008, 1012, 1013, 1014, 1015, 1015, 13, 46, 37, 1016, 1016, 1011, 1011, 1017, 1018, 1019, 1020, 1021, 1021, 1022, 1023, 1024, 1025, 1026, 1026, 13, 44, 45, 73, 1027, 1027, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 30, 30, 1028, 1029, 1030, 1031, 1032, 1032, 13, 89, 90, 82, 91, 91, 92, 92, 1033, 1033, 13, 46, 37, 99, 1034, 1034, 1016, 1016, 30, 30, 1017, 1018, 1019, 1020, 1021, 1021, 1035, 1036, 1036, 1036, 1037, 1037, 13, 14, 15, 15, 1038, 1038, 1039, 1039, 1040, 1040, 1041, 1042, 1043, 1043, 1044, 1044, 13, 1045, 1045, 14, 1046, 1046, 1047, 1047, 13, 1048, 1045, 14, 1049, 1049, 1050, 1050, 30, 30, 60, 1051, 1052, 1053, 123, 123, 1054, 1055, 1056, 1056, 1057, 1057, 13, 1045, 1045, 14, 1058, 1058, 1046, 1046, 1059, 1059, 13, 1048, 1045, 14, 1060, 1060, 1049, 1049, 30, 30, 75, 1061, 1062, 1063, 79, 79, 1064, 1065, 1066, 1067, 1068, 1068, 319, 322, 648, 1069, 1069, 13, 127, 82, 639, 639, 13, 128, 82, 30, 30, 13, 46, 37, 99, 1034, 1034, 1034, 1034, 30, 30, 1017, 1018, 1019, 1020, 1021, 1021, 13, 46, 15, 52, 1070, 1070, 1071, 1071, 846, 847, 848, 1072, 850, 850, 1064, 1065, 1066, 1067, 1073, 1073, 13, 46, 21, 1074, 1074, 1074, 1074, 1075, 1075, 1076, 1077, 1078, 1079, 1080, 1080], "index": 22}
{"path": "jsrc/BinaryCSP.java", "endline": 90, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 88, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 89, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 89, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 89, "token": "."}, {"trailing": " ", "leading": "", "line": 89, "leaf": true, "token": "length"}], {"trailing": "\n  ", "leading": " ", "line": 89, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 90, "token": "}"}], "method": "getNoVariables", "beginline": 88, "class": "BinaryCSP", "features": [13, 46, 21, 1028, 1029, 1081, 1032, 1032], "index": 23}
{"path": "jsrc/BinaryCSP.java", "endline": 94, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 92, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 93, "token": "return"}, ["#[#]", ["#[#]", {"trailing": "", "leading": " ", "var": true, "line": 93, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 93, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 93, "leaf": true, "token": "varIndex"}, {"trailing": "", "leading": "", "line": 93, "token": "]"}], {"trailing": "", "leading": "", "line": 93, "token": "["}, {"trailing": "", "leading": "", "line": 93, "leaf": true, "token": "0"}, {"trailing": " ", "leading": "", "line": 93, "token": "]"}], {"trailing": "\n  ", "leading": " ", "line": 93, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 94, "token": "}"}], "method": "getLB", "beginline": 92, "class": "BinaryCSP", "features": [13, 1045, 1045, 21, 13, 1048, 1045, 21, 30, 30, 60, 1051, 109, 123, 123], "index": 24}
{"path": "jsrc/BinaryCSP.java", "endline": 98, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 96, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 97, "token": "return"}, ["#[#]", ["#[#]", {"trailing": "", "leading": " ", "var": true, "line": 97, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 97, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 97, "leaf": true, "token": "varIndex"}, {"trailing": "", "leading": "", "line": 97, "token": "]"}], {"trailing": "", "leading": "", "line": 97, "token": "["}, {"trailing": "", "leading": "", "line": 97, "leaf": true, "token": "1"}, {"trailing": " ", "leading": "", "line": 97, "token": "]"}], {"trailing": "\n  ", "leading": " ", "line": 97, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 98, "token": "}"}], "method": "getUB", "beginline": 96, "class": "BinaryCSP", "features": [13, 1045, 1045, 21, 13, 1048, 1045, 21, 30, 30, 75, 1061, 1082, 79, 79], "index": 25}
{"path": "jsrc/BinaryCSP.java", "endline": 102, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 100, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 101, "token": "return"}, {"trailing": " ", "leading": " ", "var": true, "line": 101, "leaf": true, "token": "constraints"}, {"trailing": "\n  ", "leading": " ", "line": 101, "token": ";"}], {"trailing": "\n\n  // public void setConstraints(ArrayList<BinaryArcConstraint> constraints) {\n  //   this.constraints = constraints;\n  // }\n\n\n\n  ", "leading": "\n  ", "line": 102, "token": "}"}], "method": "getConstraints", "beginline": 100, "class": "BinaryCSP", "features": [13, 21], "index": 26}
{"path": "jsrc/BinaryCSP.java", "endline": 112, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 110, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 111, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 111, "leaf": true, "token": "varDomains"}, {"trailing": "\n  ", "leading": "", "line": 111, "token": ";"}], {"trailing": "\n\n\n\n  ", "leading": "\n  ", "line": 112, "token": "}"}], "method": "getVarDomains", "beginline": 110, "class": "BinaryCSP", "features": [13, 21], "index": 27}
{"path": "jsrc/BinaryCSP.java", "endline": 118, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 116, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 117, "token": "this"}, {"trailing": "", "leading": "", "line": 117, "token": "."}, {"trailing": " ", "leading": "", "line": 117, "leaf": true, "token": "varDomains"}], {"trailing": " ", "leading": " ", "line": 117, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 117, "leaf": true, "token": "varDomains"}], {"trailing": "\n  ", "leading": "", "line": 117, "token": ";"}], {"trailing": "\n\n\n\n  ", "leading": "\n  ", "line": 118, "token": "}"}], "method": "setVarDomains", "beginline": 116, "class": "BinaryCSP", "features": [1083, 1084, 1085, 1086, 13, 36, 37, 1087, 1087], "index": 28}
{"path": "jsrc/BinaryCSP.java", "endline": 124, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 122, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 123, "token": "return"}, ["#[#]", {"trailing": "", "leading": " ", "var": true, "line": 123, "leaf": true, "token": "varAssignments"}, {"trailing": "", "leading": "", "line": 123, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 123, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 123, "token": "]"}], {"trailing": "\n  ", "leading": "", "line": 123, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 124, "token": "}"}], "method": "getVarAssignment", "beginline": 122, "class": "BinaryCSP", "features": [13, 1045, 21, 13, 1048, 21, 30, 30], "index": 29}
{"path": "jsrc/BinaryCSP.java", "endline": 128, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 126, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 127, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 127, "leaf": true, "token": "varDomains"}, {"trailing": "", "leading": "", "line": 127, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 127, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 127, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 127, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 127, "token": ")"}]], {"trailing": "\n  ", "leading": "", "line": 127, "token": ";"}], {"trailing": "\n\n  // removes a value from the domain of the var\n  ", "leading": "\n  ", "line": 128, "token": "}"}], "method": "getVarDomain", "beginline": 126, "class": "BinaryCSP", "features": [13, 46, 21, 55, 56, 57, 108, 59, 59, 13, 52, 53, 21, 97, 97], "index": 30}
{"path": "jsrc/BinaryCSP.java", "endline": 150, "ast": ["{###}", {"trailing": "\n    // using Integer.valueof to ensure that we remove by value and not by index\n \n    ", "leading": "", "line": 131, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n    // using Integer.valueof to ensure that we remove by value and not by index\n \n    ", "line": 134, "leaf": true, "token": "List"}, ["<#>", {"trailing": "", "leading": "", "line": 134, "token": "<"}, {"trailing": "", "leading": "", "line": 134, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 134, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 134, "leaf": true, "token": "innerList"}, {"trailing": " ", "leading": " ", "line": 134, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 134, "leaf": true, "token": "varDomains"}, {"trailing": "", "leading": "", "line": 134, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 134, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 134, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 134, "leaf": true, "token": "var"}, {"trailing": "", "leading": "", "line": 134, "token": ")"}]]]], {"trailing": "\n \n    ", "leading": "", "line": 134, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n \n    ", "var": true, "line": 136, "leaf": true, "token": "innerList"}, {"trailing": "", "leading": "", "line": 136, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 136, "leaf": true, "token": "remove"}, {"trailing": "", "leading": "", "line": 136, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 136, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 136, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 136, "leaf": true, "token": "valueOf"}, {"trailing": "", "leading": "", "line": 136, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 136, "leaf": true, "token": "val"}, {"trailing": "", "leading": "", "line": 136, "token": ")"}]], {"trailing": "", "leading": "", "line": 136, "token": ")"}]], {"trailing": "\n    ", "leading": "", "line": 136, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n    ", "var": true, "line": 137, "leaf": true, "token": "varDomains"}, {"trailing": "", "leading": "", "line": 137, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 137, "leaf": true, "token": "set"}, {"trailing": "", "leading": "", "line": 137, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 137, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 137, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 137, "leaf": true, "token": "innerList"}], {"trailing": "", "leading": "", "line": 137, "token": ")"}]], {"trailing": "\n\n\n    // if(varDomains.get(var).size() == initialLength){\n    //   for(int i = 0; i < getNoVariables(); i ++){\n    //       BinaryCSPSolver.printDomain(getVarDomain(i));\n    //   }\n      \n    //   System.exit(1);\n    // }\n    \n    \n\n  ", "leading": "", "line": 137, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n\n\n    // if(varDomains.get(var).size() == initialLength){\n    //   for(int i = 0; i < getNoVariables(); i ++){\n    //       BinaryCSPSolver.printDomain(getVarDomain(i));\n    //   }\n      \n    //   System.exit(1);\n    // }\n    \n    \n\n  ", "line": 150, "token": "}"}], "method": "deleteDomValue", "beginline": 131, "class": "BinaryCSP", "features": [110, 111, 111, 112, 113, 114, 115, 116, 117, 117, 13, 44, 118, 37, 119, 119, 13, 46, 36, 118, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 97, 97, 13, 46, 37, 581, 581, 30, 30, 582, 583, 584, 585, 586, 586, 113, 587, 588, 589, 590, 590, 591, 592, 593, 594, 595, 595, 13, 52, 53, 52, 597, 597, 13, 46, 37, 1088, 1088, 30, 30, 1089, 1090, 1091, 1092, 1093, 1093, 13, 144, 52, 53, 145, 145, 1094, 1094, 13, 147, 52, 53, 1095, 1095, 148, 148, 30, 30], "index": 31}
{"path": "jsrc/BinaryCSP.java", "endline": 154, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 152, "token": "{"}, ["#;", ["#.#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 153, "token": "this"}, {"trailing": "", "leading": "", "line": 153, "token": "."}, {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "varDomains"}], {"trailing": "", "leading": "", "line": 153, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 153, "leaf": true, "token": "set"}, {"trailing": "", "leading": "", "line": 153, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 153, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 153, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 153, "leaf": true, "token": "varDomain"}], {"trailing": "", "leading": "", "line": 153, "token": ")"}]], {"trailing": "\n  ", "leading": "", "line": 153, "token": ";"}], {"trailing": "\n\n  // allows the assignment of a variable\n  ", "leading": "\n  ", "line": 154, "token": "}"}], "method": "setVarDomain", "beginline": 152, "class": "BinaryCSP", "features": [1083, 1084, 1096, 1086, 1089, 1090, 1091, 1092, 1097, 1097, 13, 144, 52, 53, 1094, 1094, 13, 147, 52, 53, 30, 30], "index": 32}
{"path": "jsrc/BinaryCSP.java", "endline": 160, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 157, "token": "{"}, ["#;", ["#=#", ["#[#]", {"trailing": "", "leading": "\n    ", "var": true, "line": 158, "leaf": true, "token": "varAssignments"}, {"trailing": "", "leading": "", "line": 158, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 158, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 158, "token": "]"}], {"trailing": " ", "leading": " ", "line": 158, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 158, "leaf": true, "token": "OptionalInt"}, {"trailing": "", "leading": "", "line": 158, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 158, "leaf": true, "token": "of"}, {"trailing": "", "leading": "", "line": 158, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 158, "leaf": true, "token": "val"}, {"trailing": "", "leading": "", "line": 158, "token": ")"}]]], {"trailing": "\n    \n  ", "leading": "", "line": 158, "token": ";"}], {"trailing": "\n  ", "leading": "\n    \n  ", "line": 160, "token": "}"}], "method": "assign", "beginline": 157, "class": "BinaryCSP", "features": [13, 1045, 44, 37, 13, 1048, 44, 37, 30, 30, 1098, 1099, 1100, 1101, 1102, 1102, 1103, 1104, 1105, 1106, 1107, 1107, 13, 52, 53, 36, 1108, 1108], "index": 33}
{"path": "jsrc/BinaryCSP.java", "endline": 163, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 161, "token": "{"}, ["#;", ["#=#", ["#[#]", {"trailing": "", "leading": "\n    ", "var": true, "line": 162, "leaf": true, "token": "varAssignments"}, {"trailing": "", "leading": "", "line": 162, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 162, "leaf": true, "token": "var"}, {"trailing": " ", "leading": "", "line": 162, "token": "]"}], {"trailing": " ", "leading": " ", "line": 162, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 162, "leaf": true, "token": "OptionalInt"}, {"trailing": "", "leading": "", "line": 162, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 162, "leaf": true, "token": "empty"}, {"trailing": "", "leading": "", "line": 162, "token": "("}, {"trailing": "", "leading": "", "line": 162, "token": ")"}]]], {"trailing": "\n  ", "leading": "", "line": 162, "token": ";"}], {"trailing": "\n\n\n  ", "leading": "\n  ", "line": 163, "token": "}"}], "method": "unassign", "beginline": 161, "class": "BinaryCSP", "features": [13, 1045, 44, 37, 13, 1048, 44, 37, 30, 30, 1098, 1099, 1100, 1101, 1102, 1102, 1109, 1110, 1111, 1112, 1113, 1113], "index": 34}
{"path": "jsrc/BinaryCSP.java", "endline": 168, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 166, "token": "{"}, ["#;", ["#+=#", {"trailing": " ", "leading": "\n    ", "var": true, "line": 167, "leaf": true, "token": "numNodesSearched"}, {"trailing": " ", "leading": " ", "line": 167, "token": "+="}, {"trailing": "", "leading": " ", "line": 167, "leaf": true, "token": "1"}], {"trailing": "\n  ", "leading": "", "line": 167, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 168, "token": "}"}], "method": "incrementNodesSearched", "beginline": 166, "class": "BinaryCSP", "features": [13, 129, 37, 75, 1114, 758, 79, 79], "index": 35}
{"path": "jsrc/BinaryCSP.java", "endline": 172, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 170, "token": "{"}, ["#;", ["#+=#", {"trailing": " ", "leading": "\n    ", "var": true, "line": 171, "leaf": true, "token": "numArcRevisions"}, {"trailing": " ", "leading": " ", "line": 171, "token": "+="}, {"trailing": "", "leading": " ", "line": 171, "leaf": true, "token": "1"}], {"trailing": "\n  ", "leading": "", "line": 171, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 172, "token": "}"}], "method": "incrementArcRevisions", "beginline": 170, "class": "BinaryCSP", "features": [13, 129, 37, 75, 1114, 758, 79, 79], "index": 36}
{"path": "jsrc/BinaryCSP.java", "endline": 176, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 174, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 175, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 175, "leaf": true, "token": "numNodesSearched"}, {"trailing": "\n  ", "leading": "", "line": 175, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 176, "token": "}"}], "method": "getNodesSearched", "beginline": 174, "class": "BinaryCSP", "features": [13, 21], "index": 37}
{"path": "jsrc/BinaryCSP.java", "endline": 180, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 178, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 179, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 179, "leaf": true, "token": "numArcRevisions"}, {"trailing": "\n  ", "leading": "", "line": 179, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 180, "token": "}"}], "method": "getArcRevisions", "beginline": 178, "class": "BinaryCSP", "features": [13, 21], "index": 38}
{"path": "jsrc/BinaryCSP.java", "endline": 184, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 182, "token": "{"}, ["#;", ["#.#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 183, "token": "this"}, {"trailing": "", "leading": "", "line": 183, "token": "."}, {"trailing": "", "leading": "", "line": 183, "leaf": true, "token": "lastValid"}], {"trailing": "", "leading": "", "line": 183, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 183, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 183, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 183, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": "", "line": 183, "token": ","}, ["new#", {"trailing": " ", "leading": " ", "line": 183, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 183, "leaf": true, "token": "HashMap"}, ["<#,#>", {"trailing": "", "leading": "", "line": 183, "token": "<"}, {"trailing": "", "leading": "", "line": 183, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 183, "token": ","}, {"trailing": "", "leading": " ", "line": 183, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 183, "token": ">"}]], {"trailing": "", "leading": "", "line": 183, "token": "("}, {"trailing": "", "leading": "", "line": 183, "token": ")"}]]], {"trailing": "", "leading": "", "line": 183, "token": ")"}]], {"trailing": "\n  ", "leading": "", "line": 183, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 184, "token": "}"}], "method": "instantiateConstraintMap", "beginline": 182, "class": "BinaryCSP", "features": [1115, 1116, 1117, 1118, 878, 879, 880, 881, 1119, 1119, 13, 144, 52, 53, 884, 884, 324, 325, 885, 886, 887, 887, 113, 265, 115, 526, 329, 329, 113, 273, 115, 526, 330, 330], "index": 39}
{"path": "jsrc/BinaryCSP.java", "endline": 187, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 185, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 186, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 186, "leaf": true, "token": "lastValid"}, {"trailing": "\n  ", "leading": "", "line": 186, "token": ";"}], {"trailing": "\n  \n  ", "leading": "\n  ", "line": 187, "token": "}"}], "method": "getLastValid", "beginline": 185, "class": "BinaryCSP", "features": [13, 21], "index": 40}
{"path": "jsrc/BinaryCSP.java", "endline": 191, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 189, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 190, "token": "this"}, {"trailing": "", "leading": "", "line": 190, "token": "."}, {"trailing": " ", "leading": "", "line": 190, "leaf": true, "token": "lastValid"}], {"trailing": " ", "leading": " ", "line": 190, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 190, "leaf": true, "token": "lastValid"}], {"trailing": "\n  ", "leading": "", "line": 190, "token": ";"}], {"trailing": "\n\n   ", "leading": "\n  ", "line": 191, "token": "}"}], "method": "setLastValid", "beginline": 189, "class": "BinaryCSP", "features": [1115, 1116, 1120, 1118, 13, 36, 37, 1121, 1121], "index": 41}
{"path": "jsrc/BinaryCSP.java", "endline": 195, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 193, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 194, "token": "return"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 194, "leaf": true, "token": "lastValid"}, {"trailing": "", "leading": "", "line": 194, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 194, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 194, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 194, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 194, "token": ")"}]], {"trailing": "", "leading": "", "line": 194, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 194, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 194, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 194, "leaf": true, "token": "domPos"}, {"trailing": "", "leading": "", "line": 194, "token": ")"}]], {"trailing": "\n  ", "leading": "", "line": 194, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 195, "token": "}"}], "method": "getLastValidValuePos", "beginline": 193, "class": "BinaryCSP", "features": [13, 46, 46, 21, 55, 56, 57, 1122, 59, 59, 13, 52, 53, 46, 97, 97, 55, 56, 57, 108, 59, 59, 13, 52, 53, 21, 97, 97], "index": 42}
{"path": "jsrc/BinaryCSP.java", "endline": 198, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 196, "token": "{"}, ["#;", ["#.#", ["#.#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 197, "token": "this"}, {"trailing": "", "leading": "", "line": 197, "token": "."}, {"trailing": "", "leading": "", "line": 197, "leaf": true, "token": "lastValid"}], {"trailing": "", "leading": "", "line": 197, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 197, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 197, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 197, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 197, "token": ")"}]], {"trailing": "", "leading": "", "line": 197, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 197, "leaf": true, "token": "put"}, {"trailing": "", "leading": "", "line": 197, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 197, "leaf": true, "token": "domPos"}, {"trailing": " ", "leading": "", "line": 197, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 197, "leaf": true, "token": "val"}], {"trailing": "", "leading": "", "line": 197, "token": ")"}]], {"trailing": " \n  ", "leading": "", "line": 197, "token": ";"}], {"trailing": "\n\n  ", "leading": " \n  ", "line": 198, "token": "}"}], "method": "setLastValidValue", "beginline": 196, "class": "BinaryCSP", "features": [1115, 1116, 1117, 1117, 55, 56, 57, 1122, 1123, 1123, 13, 52, 53, 46, 97, 97, 878, 879, 880, 881, 903, 903, 13, 144, 52, 53, 884, 884, 13, 147, 52, 53, 30, 30], "index": 43}
{"path": "jsrc/BinaryCSP.java", "endline": 202, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 200, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 201, "token": "this"}, {"trailing": "", "leading": "", "line": 201, "token": "."}, {"trailing": " ", "leading": "", "line": 201, "leaf": true, "token": "startTime"}], {"trailing": " ", "leading": " ", "line": 201, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 201, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 201, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 201, "leaf": true, "token": "currentTimeMillis"}, {"trailing": "", "leading": "", "line": 201, "token": "("}, {"trailing": "", "leading": "", "line": 201, "token": ")"}]]], {"trailing": "\n  ", "leading": "", "line": 201, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 202, "token": "}"}], "method": "setStartTime", "beginline": 200, "class": "BinaryCSP", "features": [1124, 1125, 1126, 1127, 445, 446, 1128, 447, 1129, 1129, 466, 467, 468, 1130, 470, 470], "index": 44}
{"path": "jsrc/BinaryCSP.java", "endline": 206, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 204, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 205, "token": "return"}, ["this.#", {"trailing": "", "leading": " ", "line": 205, "token": "this"}, {"trailing": "", "leading": "", "line": 205, "token": "."}, {"trailing": "", "leading": "", "line": 205, "leaf": true, "token": "startTime"}], {"trailing": "\n  ", "leading": "", "line": 205, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 206, "token": "}"}], "method": "getStartTime", "beginline": 204, "class": "BinaryCSP", "features": [1124, 1125, 1131], "index": 45}
{"path": "jsrc/BinaryCSP.java", "endline": 210, "ast": ["{#}", {"trailing": "\n    ", "leading": "", "line": 208, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 209, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 209, "leaf": true, "token": "varAssignments"}, {"trailing": "\n  ", "leading": "", "line": 209, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 210, "token": "}"}], "method": "getVarAssignments", "beginline": 208, "class": "BinaryCSP", "features": [13, 21], "index": 46}
{"path": "jsrc/BinaryCSP.java", "endline": 214, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 212, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 213, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 213, "leaf": true, "token": "reliantConstraints"}, {"trailing": "", "leading": "", "line": 213, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 213, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 213, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 213, "leaf": true, "token": "checkVar"}, {"trailing": "", "leading": "", "line": 213, "token": ")"}]], {"trailing": "\n  ", "leading": "", "line": 213, "token": ";"}], {"trailing": "\n\n  ", "leading": "\n  ", "line": 214, "token": "}"}], "method": "getReliantConstraints", "beginline": 212, "class": "BinaryCSP", "features": [13, 46, 21, 55, 56, 57, 108, 59, 59, 13, 52, 53, 21, 97, 97], "index": 47}
{"path": "jsrc/BinaryCSP.java", "endline": 218, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 216, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 217, "token": "this"}, {"trailing": "", "leading": "", "line": 217, "token": "."}, {"trailing": " ", "leading": "", "line": 217, "leaf": true, "token": "reliantConstraints"}], {"trailing": " ", "leading": " ", "line": 217, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 217, "leaf": true, "token": "reliantConstraints"}], {"trailing": "\n  ", "leading": "", "line": 217, "token": ";"}], {"trailing": "\n\n", "leading": "\n  ", "line": 218, "token": "}"}], "method": "setReliantConstraints", "beginline": 216, "class": "BinaryCSP", "features": [1132, 1133, 1134, 1135, 13, 36, 37, 1136, 1136], "index": 48}
{"path": "jsrc/VisualChecker.java", "endline": 15, "ast": ["{###}", {"trailing": "\n        ", "leading": "", "line": 8, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\n        ", "line": 9, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 9, "token": "<"}, {"trailing": "", "leading": "", "line": 9, "leaf": true, "token": "Integer"}, {"trailing": " ", "leading": "", "line": 9, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 9, "leaf": true, "token": "sol"}, {"trailing": " ", "leading": " ", "line": 9, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 9, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 9, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 9, "token": "<"}, {"trailing": "", "leading": "", "line": 9, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 9, "token": ">"}]], {"trailing": "", "leading": "", "line": 9, "token": "("}, {"trailing": "", "leading": "", "line": 9, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 9, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 10, "token": "for"}, {"trailing": "", "leading": "", "line": 10, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 10, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 10, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 10, "token": "="}, {"trailing": "", "leading": " ", "line": 10, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 10, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 10, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 10, "token": "<"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 10, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 10, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 10, "leaf": true, "token": "getNoVariables"}, {"trailing": "", "leading": "", "line": 10, "token": "("}, {"trailing": "", "leading": "", "line": 10, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 10, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 10, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 10, "token": "++"}]], {"trailing": "", "leading": "", "line": 10, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 10, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 11, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 11, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 11, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 11, "token": "("}, ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 11, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 11, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 11, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 11, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 11, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 11, "token": ")"}]], {"trailing": "", "leading": "", "line": 11, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 11, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 11, "token": "("}, {"trailing": "", "leading": "", "line": 11, "token": ")"}]], {"trailing": "", "leading": "", "line": 11, "token": ")"}]], {"trailing": "\n            \n        ", "leading": "", "line": 11, "token": ";"}], {"trailing": "\n        ", "leading": "\n            \n        ", "line": 13, "token": "}"}]], ["#;", ["#(#)", {"trailing": "", "leading": "\n        ", "line": 14, "leaf": true, "token": "drawChess"}, {"trailing": "", "leading": "", "line": 14, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 14, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 14, "token": ")"}], {"trailing": "\n    ", "leading": "", "line": 14, "token": ";"}], {"trailing": "\n    ", "leading": "\n    ", "line": 15, "token": "}"}], "method": "drawChess", "beginline": 8, "class": "VisualChecker", "features": [268, 269, 269, 521, 113, 114, 115, 116, 274, 274, 13, 44, 118, 37, 119, 119, 268, 269, 523, 524, 525, 525, 113, 114, 115, 526, 274, 274, 13, 44, 45, 73, 119, 119, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 46, 85, 81, 30, 30, 529, 530, 531, 532, 533, 533, 13, 89, 90, 82, 91, 91, 92, 92, 534, 534, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 13, 46, 46, 52, 541, 541, 543, 543, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 95, 95, 96, 96, 549, 549, 550, 551, 552, 553, 554, 554, 1137, 1138, 1139, 1140, 1140, 13, 52, 37, 557, 557, 401, 401, 1141, 1141], "index": 49}
{"path": "jsrc/VisualChecker.java", "endline": 103, "ast": ["{#########}", {"trailing": "\n        ", "leading": "", "line": 16, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n        ", "line": 17, "leaf": true, "token": "Boolean"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 17, "leaf": true, "token": "failed"}, {"trailing": " ", "leading": " ", "line": 17, "token": "="}, {"trailing": "", "leading": " ", "line": 17, "leaf": true, "token": "false"}]], {"trailing": "\n        // int size = instance.getNoVariables();\n        // System.out.println(\"hello world\");\n        ", "leading": "", "line": 17, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n        // int size = instance.getNoVariables();\n        // System.out.println(\"hello world\");\n        ", "line": 20, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 20, "leaf": true, "token": "size"}, {"trailing": " ", "leading": " ", "line": 20, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 20, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 20, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 20, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 20, "token": "("}, {"trailing": "", "leading": "", "line": 20, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 20, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 21, "token": "for"}, {"trailing": "", "leading": "", "line": 21, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 21, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 21, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 21, "token": "="}, {"trailing": "", "leading": " ", "line": 21, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 21, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 21, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 21, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 21, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 21, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 21, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 21, "token": "++"}]], {"trailing": "", "leading": "", "line": 21, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 21, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 22, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 22, "token": "."}, {"trailing": "", "leading": "", "line": 22, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 22, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 22, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 22, "token": "("}, ["#+#", ["#+#", ["#+#", {"trailing": " ", "leading": "", "line": 22, "leaf": true, "token": "\"Var: \""}, {"trailing": " ", "leading": " ", "line": 22, "token": "+"}, {"trailing": " ", "leading": " ", "var": true, "line": 22, "leaf": true, "token": "i"}], {"trailing": " ", "leading": " ", "line": 22, "token": "+"}, {"trailing": " ", "leading": " ", "line": 22, "leaf": true, "token": "\" Val: \""}], {"trailing": " ", "leading": " ", "line": 22, "token": "+"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 22, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 22, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 22, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 22, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 22, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 22, "token": ")"}]]], {"trailing": "", "leading": "", "line": 22, "token": ")"}]], {"trailing": "\n            \n        ", "leading": "", "line": 22, "token": ";"}], {"trailing": "\n        \n\n        // assume square\n        ", "leading": "\n            \n        ", "line": 24, "token": "}"}]], ["#;", ["##", ["#[][]", {"trailing": "", "leading": "\n        \n\n        // assume square\n        ", "line": 28, "leaf": true, "token": "String"}, {"trailing": "", "leading": "", "line": 28, "token": "["}, {"trailing": "", "leading": "", "line": 28, "token": "]"}, {"trailing": "", "leading": "", "line": 28, "token": "["}, {"trailing": " ", "leading": "", "line": 28, "token": "]"}], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 28, "leaf": true, "token": "board"}, {"trailing": " ", "leading": " ", "line": 28, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 28, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 28, "leaf": true, "token": "String"}, ["[#][#]", {"trailing": "", "leading": "", "line": 28, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 28, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 28, "token": "]"}, {"trailing": "", "leading": "", "line": 28, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 28, "leaf": true, "token": "size"}, {"trailing": "", "leading": "", "line": 28, "token": "]"}]]]]], {"trailing": "\n        \n        // fill with 0s first\n        ", "leading": "", "line": 28, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        \n        // fill with 0s first\n        ", "line": 31, "token": "for"}, {"trailing": "", "leading": "", "line": 31, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 31, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 31, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 31, "token": "="}, {"trailing": "", "leading": " ", "line": 31, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 31, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 31, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 31, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 31, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 31, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 31, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 31, "token": "++"}]], {"trailing": "", "leading": "", "line": 31, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 31, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n            ", "line": 32, "token": "for"}, {"trailing": "", "leading": "", "line": 32, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 32, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 32, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 32, "token": "="}, {"trailing": "", "leading": " ", "line": 32, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 32, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 32, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 32, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 32, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 32, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 32, "leaf": true, "token": "j"}, {"trailing": "", "leading": " ", "line": 32, "token": "++"}]], {"trailing": "", "leading": "", "line": 32, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 32, "token": "{"}, ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\n                ", "var": true, "line": 33, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 33, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 33, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 33, "token": "]"}], {"trailing": "", "leading": "", "line": 33, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 33, "leaf": true, "token": "j"}, {"trailing": " ", "leading": "", "line": 33, "token": "]"}], {"trailing": " ", "leading": " ", "line": 33, "token": "="}, {"trailing": "", "leading": " ", "line": 33, "leaf": true, "token": "\"0\""}], {"trailing": "\n            ", "leading": "", "line": 33, "token": ";"}], {"trailing": "\n        ", "leading": "\n            ", "line": 34, "token": "}"}]], {"trailing": "\n\n        // populate queens \n        ", "leading": "\n        ", "line": 35, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n\n        // populate queens \n        ", "line": 38, "token": "for"}, {"trailing": "", "leading": "", "line": 38, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 38, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 38, "leaf": true, "token": "queenRow"}, {"trailing": " ", "leading": " ", "line": 38, "token": "="}, {"trailing": "", "leading": " ", "line": 38, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 38, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 38, "leaf": true, "token": "queenRow"}, {"trailing": " ", "leading": " ", "line": 38, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 38, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 38, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 38, "leaf": true, "token": "queenRow"}, {"trailing": "", "leading": " ", "line": 38, "token": "++"}]], {"trailing": "", "leading": "", "line": 38, "token": ")"}, ["{####}", {"trailing": "\n            // queen put on a space that is invalid\n            ", "leading": "", "line": 38, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n            // queen put on a space that is invalid\n            ", "line": 40, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 40, "leaf": true, "token": "queenCol"}, {"trailing": " ", "leading": " ", "line": 40, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 40, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 40, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 40, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 40, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 40, "leaf": true, "token": "queenRow"}, {"trailing": "", "leading": "", "line": 40, "token": ")"}]]]], {"trailing": "\n            ", "leading": "", "line": 40, "token": ";"}], ["if##", {"trailing": "", "leading": "\n            ", "line": 41, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 41, "token": "("}, ["#.#", ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 41, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 41, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 41, "leaf": true, "token": "queenRow"}, {"trailing": "", "leading": "", "line": 41, "token": "]"}], {"trailing": "", "leading": "", "line": 41, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 41, "leaf": true, "token": "queenCol"}, {"trailing": "", "leading": "", "line": 41, "token": "]"}], {"trailing": "", "leading": "", "line": 41, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 41, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 41, "token": "("}, {"trailing": "", "leading": "", "line": 41, "leaf": true, "token": "\"X\""}, {"trailing": "", "leading": "", "line": 41, "token": ")"}]], {"trailing": "", "leading": "", "line": 41, "token": ")"}], ["{#}", {"trailing": "\n                ", "leading": "", "line": 41, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                ", "var": true, "line": 42, "leaf": true, "token": "failed"}, {"trailing": " ", "leading": " ", "line": 42, "token": "="}, {"trailing": "", "leading": " ", "line": 42, "leaf": true, "token": "true"}], {"trailing": "\n            ", "leading": "", "line": 42, "token": ";"}], {"trailing": "\n\n            ", "leading": "\n            ", "line": 43, "token": "}"}]], ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\n\n            ", "var": true, "line": 45, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 45, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 45, "leaf": true, "token": "queenRow"}, {"trailing": "", "leading": "", "line": 45, "token": "]"}], {"trailing": "", "leading": "", "line": 45, "token": "["}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 45, "leaf": true, "token": "sol"}, {"trailing": "", "leading": "", "line": 45, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 45, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 45, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 45, "leaf": true, "token": "queenRow"}, {"trailing": "", "leading": "", "line": 45, "token": ")"}]], {"trailing": " ", "leading": "", "line": 45, "token": "]"}], {"trailing": " ", "leading": " ", "line": 45, "token": "="}, {"trailing": "", "leading": " ", "line": 45, "leaf": true, "token": "\"Q\""}], {"trailing": "\n\n           \n\n            \n            ", "leading": "", "line": 45, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n\n           \n\n            \n            ", "line": 50, "token": "for"}, {"trailing": "", "leading": "", "line": 50, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 50, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 50, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 50, "token": "="}, {"trailing": "", "leading": " ", "line": 50, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 50, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 50, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 50, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 50, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 50, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 50, "leaf": true, "token": "row"}, {"trailing": "", "leading": " ", "line": 50, "token": "++"}]], {"trailing": "", "leading": "", "line": 50, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 50, "token": "{"}, ["for(#)#", {"trailing": " ", "leading": "\n                ", "line": 51, "token": "for"}, {"trailing": "", "leading": " ", "line": 51, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 51, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 51, "token": "="}, {"trailing": "", "leading": " ", "line": 51, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 51, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 51, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 51, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "col"}, {"trailing": "", "leading": " ", "line": 51, "token": "++"}]], {"trailing": "", "leading": "", "line": 51, "token": ")"}, ["{#}", {"trailing": "\n\n                    // for all adjacent squares that are not precisely where the current queen is are checked and then excluded\n                    // if there is a queen on one of these spaces, the checker fails\n                    ", "leading": "", "line": 51, "token": "{"}, ["if##else#", {"trailing": " ", "leading": "\n\n                    // for all adjacent squares that are not precisely where the current queen is are checked and then excluded\n                    // if there is a queen on one of these spaces, the checker fails\n                    ", "line": 55, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 55, "token": "("}, ["#||#", ["(#)", {"trailing": "", "leading": "", "line": 55, "token": "("}, ["#&&#", ["#==#", {"trailing": " ", "leading": "", "var": true, "line": 55, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 55, "token": "=="}, {"trailing": " ", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "queenRow"}], {"trailing": " ", "leading": " ", "line": 55, "token": "&&"}, ["#!=#", {"trailing": " ", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 55, "token": "!="}, {"trailing": "", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "queenCol"}]], {"trailing": " ", "leading": "", "line": 55, "token": ")"}], {"trailing": " ", "leading": " ", "line": 55, "token": "||"}, ["(#)", {"trailing": "", "leading": " ", "line": 55, "token": "("}, ["#&&#", ["#==#", {"trailing": " ", "leading": "", "var": true, "line": 55, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 55, "token": "=="}, {"trailing": " ", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "queenCol"}], {"trailing": " ", "leading": " ", "line": 55, "token": "&&"}, ["#!=#", {"trailing": " ", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 55, "token": "!="}, {"trailing": "", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "queenRow"}]], {"trailing": "", "leading": "", "line": 55, "token": ")"}]], {"trailing": "", "leading": "", "line": 55, "token": ")"}], ["{##}", {"trailing": "\n                        ", "leading": "", "line": 55, "token": "{"}, ["if##", {"trailing": "", "leading": "\n                        ", "line": 56, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 56, "token": "("}, ["#.#", ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 56, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 56, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 56, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 56, "token": "]"}], {"trailing": "", "leading": "", "line": 56, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 56, "leaf": true, "token": "col"}, {"trailing": "", "leading": "", "line": 56, "token": "]"}], {"trailing": "", "leading": "", "line": 56, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 56, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 56, "token": "("}, {"trailing": "", "leading": "", "line": 56, "leaf": true, "token": "\"Q\""}, {"trailing": "", "leading": "", "line": 56, "token": ")"}]], {"trailing": "", "leading": "", "line": 56, "token": ")"}], ["{#}", {"trailing": "\n                            ", "leading": "", "line": 56, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                            ", "var": true, "line": 57, "leaf": true, "token": "failed"}, {"trailing": " ", "leading": " ", "line": 57, "token": "="}, {"trailing": "", "leading": " ", "line": 57, "leaf": true, "token": "true"}], {"trailing": "\n                        ", "leading": "", "line": 57, "token": ";"}], {"trailing": "\n                        ", "leading": "\n                        ", "line": 58, "token": "}"}]], ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\n                        ", "var": true, "line": 59, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 59, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 59, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 59, "token": "]"}], {"trailing": "", "leading": "", "line": 59, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 59, "leaf": true, "token": "col"}, {"trailing": " ", "leading": "", "line": 59, "token": "]"}], {"trailing": " ", "leading": " ", "line": 59, "token": "="}, {"trailing": "", "leading": " ", "line": 59, "leaf": true, "token": "\"X\""}], {"trailing": "\n                    ", "leading": "", "line": 59, "token": ";"}], {"trailing": " \n                    // diagonals when row and col equal distance from Q\n                    ", "leading": "\n                    ", "line": 60, "token": "}"}], {"trailing": " ", "leading": " \n                    // diagonals when row and col equal distance from Q\n                    ", "line": 62, "token": "else"}, ["if##", {"trailing": " ", "leading": " ", "line": 62, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 62, "token": "("}, ["#&&#", ["#&&#", ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 62, "leaf": true, "token": "Math"}, {"trailing": "", "leading": "", "line": 62, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 62, "leaf": true, "token": "abs"}, {"trailing": "", "leading": "", "line": 62, "token": "("}, ["(#)", {"trailing": "", "leading": "", "line": 62, "token": "("}, ["#-#", {"trailing": " ", "leading": "", "var": true, "line": 62, "leaf": true, "token": "queenRow"}, {"trailing": " ", "leading": " ", "line": 62, "token": "-"}, {"trailing": "", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "row"}], {"trailing": "", "leading": "", "line": 62, "token": ")"}], {"trailing": " ", "leading": "", "line": 62, "token": ")"}]], {"trailing": " ", "leading": " ", "line": 62, "token": "=="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "Math"}, {"trailing": "", "leading": "", "line": 62, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 62, "leaf": true, "token": "abs"}, {"trailing": "", "leading": "", "line": 62, "token": "("}, ["#-#", {"trailing": " ", "leading": "", "var": true, "line": 62, "leaf": true, "token": "queenCol"}, {"trailing": " ", "leading": " ", "line": 62, "token": "-"}, {"trailing": "", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "col"}], {"trailing": " ", "leading": "", "line": 62, "token": ")"}]]], {"trailing": " ", "leading": " ", "line": 62, "token": "&&"}, ["#!=#", {"trailing": " ", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "queenRow"}, {"trailing": " ", "leading": " ", "line": 62, "token": "!="}, {"trailing": " ", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "row"}]], {"trailing": " ", "leading": " ", "line": 62, "token": "&&"}, ["#!=#", {"trailing": " ", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "queenCol"}, {"trailing": " ", "leading": " ", "line": 62, "token": "!="}, {"trailing": "", "leading": " ", "var": true, "line": 62, "leaf": true, "token": "col"}]], {"trailing": "", "leading": "", "line": 62, "token": ")"}], ["{##}", {"trailing": "\n                        ", "leading": "", "line": 62, "token": "{"}, ["if##", {"trailing": "", "leading": "\n                        ", "line": 63, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 63, "token": "("}, ["#.#", ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 63, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 63, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 63, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 63, "token": "]"}], {"trailing": "", "leading": "", "line": 63, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 63, "leaf": true, "token": "col"}, {"trailing": "", "leading": "", "line": 63, "token": "]"}], {"trailing": "", "leading": "", "line": 63, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 63, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 63, "token": "("}, {"trailing": "", "leading": "", "line": 63, "leaf": true, "token": "\"Q\""}, {"trailing": "", "leading": "", "line": 63, "token": ")"}]], {"trailing": "", "leading": "", "line": 63, "token": ")"}], ["{#}", {"trailing": "\n                            ", "leading": "", "line": 63, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n                            ", "var": true, "line": 64, "leaf": true, "token": "failed"}, {"trailing": " ", "leading": " ", "line": 64, "token": "="}, {"trailing": "", "leading": " ", "line": 64, "leaf": true, "token": "true"}], {"trailing": "\n                        ", "leading": "", "line": 64, "token": ";"}], {"trailing": "\n                        ", "leading": "\n                        ", "line": 65, "token": "}"}]], ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\n                        ", "var": true, "line": 66, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 66, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 66, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 66, "token": "]"}], {"trailing": "", "leading": "", "line": 66, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 66, "leaf": true, "token": "col"}, {"trailing": " ", "leading": "", "line": 66, "token": "]"}], {"trailing": " ", "leading": " ", "line": 66, "token": "="}, {"trailing": "", "leading": " ", "line": 66, "leaf": true, "token": "\"X\""}], {"trailing": "\n                    ", "leading": "", "line": 66, "token": ";"}], {"trailing": "\n                ", "leading": "\n                    ", "line": 67, "token": "}"}]]], {"trailing": "\n            ", "leading": "\n                ", "line": 68, "token": "}"}]], {"trailing": "\n\n\n\n            // // print after each step just for testing\n            // for(int i = 0; i < size; i ++){\n            //     System.out.print(\"[ \");\n            //     for(int j = 0; j < size; j ++){\n            //         System.out.print(board[i][j]);\n            //     }\n            //     System.out.println(\" ]\");\n            // }\n            // System.out.println();\n\n\n        ", "leading": "\n            ", "line": 69, "token": "}"}]], {"trailing": "\n\n\n\n        // print board\n        ", "leading": "\n\n\n\n            // // print after each step just for testing\n            // for(int i = 0; i < size; i ++){\n            //     System.out.print(\"[ \");\n            //     for(int j = 0; j < size; j ++){\n            //         System.out.print(board[i][j]);\n            //     }\n            //     System.out.println(\" ]\");\n            // }\n            // System.out.println();\n\n\n        ", "line": 84, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n\n\n\n        // print board\n        ", "line": 89, "token": "for"}, {"trailing": "", "leading": "", "line": 89, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 89, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 89, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 89, "token": "="}, {"trailing": "", "leading": " ", "line": 89, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 89, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 89, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 89, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 89, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 89, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 89, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 89, "token": "++"}]], {"trailing": "", "leading": "", "line": 89, "token": ")"}, ["{###}", {"trailing": "\n            ", "leading": "", "line": 89, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 90, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 90, "token": "."}, {"trailing": "", "leading": "", "line": 90, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 90, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 90, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 90, "token": "("}, {"trailing": "", "leading": "", "line": 90, "leaf": true, "token": "\"[ \""}, {"trailing": "", "leading": "", "line": 90, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 90, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n            ", "line": 91, "token": "for"}, {"trailing": "", "leading": "", "line": 91, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 91, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 91, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 91, "token": "="}, {"trailing": "", "leading": " ", "line": 91, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 91, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 91, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 91, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 91, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 91, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 91, "leaf": true, "token": "j"}, {"trailing": "", "leading": " ", "line": 91, "token": "++"}]], {"trailing": "", "leading": "", "line": 91, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 91, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 92, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 92, "token": "."}, {"trailing": "", "leading": "", "line": 92, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 92, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 92, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 92, "token": "("}, ["#[#]", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 92, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 92, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 92, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 92, "token": "]"}], {"trailing": "", "leading": "", "line": 92, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 92, "leaf": true, "token": "j"}, {"trailing": "", "leading": "", "line": 92, "token": "]"}], {"trailing": "", "leading": "", "line": 92, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 92, "token": ";"}], {"trailing": "\n            ", "leading": "\n            ", "line": 93, "token": "}"}]], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 94, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 94, "token": "."}, {"trailing": "", "leading": "", "line": 94, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 94, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 94, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 94, "token": "("}, {"trailing": "", "leading": "", "line": 94, "leaf": true, "token": "\" ]\""}, {"trailing": "", "leading": "", "line": 94, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 94, "token": ";"}], {"trailing": "\n        ", "leading": "\n        ", "line": 95, "token": "}"}]], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 96, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 96, "token": "."}, {"trailing": "", "leading": "", "line": 96, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 96, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 96, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 96, "token": "("}, {"trailing": "", "leading": "", "line": 96, "token": ")"}]], {"trailing": "\n    \n        \n\n        ", "leading": "", "line": 96, "token": ";"}], ["if##", {"trailing": "", "leading": "\n    \n        \n\n        ", "line": 100, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 100, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 100, "leaf": true, "token": "failed"}, {"trailing": "", "leading": "", "line": 100, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 100, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 101, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 101, "token": "."}, {"trailing": "", "leading": "", "line": 101, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 101, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 101, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 101, "token": "("}, {"trailing": "", "leading": "", "line": 101, "leaf": true, "token": "\"Solution is invalid!\""}, {"trailing": "", "leading": "", "line": 101, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 101, "token": ";"}], {"trailing": "\n    ", "leading": "\n        ", "line": 102, "token": "}"}]], {"trailing": "\n\n    ", "leading": "\n    ", "line": 103, "token": "}"}], "method": "drawChess", "beginline": 16, "class": "VisualChecker", "features": [357, 358, 359, 13, 44, 118, 37, 360, 360, 816, 817, 818, 819, 820, 820, 13, 44, 45, 37, 821, 821, 13, 46, 36, 45, 30, 30, 64, 65, 66, 67, 88, 88, 13, 44, 45, 73, 69, 69, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 100, 100, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1143, 1144, 1144, 1144, 1145, 1145, 13, 14, 15, 15, 1038, 1038, 1039, 1039, 1146, 1146, 1147, 1148, 1149, 1150, 1151, 1151, 13, 46, 14, 52, 94, 94, 1152, 1152, 55, 56, 57, 1153, 59, 59, 13, 52, 53, 14, 1154, 1154, 95, 95, 97, 97, 1155, 1156, 1157, 1158, 1159, 1159, 13, 44, 118, 37, 1160, 1160, 1155, 1157, 1161, 1162, 1159, 1159, 13, 1163, 118, 689, 1164, 1164, 1165, 1165, 1160, 1160, 13, 1166, 118, 689, 1167, 1167, 1168, 1168, 30, 30, 13, 44, 45, 73, 1169, 1169, 1170, 1170, 30, 30, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 1171, 1171, 74, 74, 13, 85, 81, 82, 1172, 1172, 1173, 1173, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 44, 45, 73, 30, 30, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 1174, 1174, 1172, 1172, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 1045, 1045, 44, 1175, 1175, 30, 30, 13, 1048, 1045, 44, 1050, 1050, 1176, 1176, 30, 30, 13, 1048, 44, 37, 1050, 1050, 1176, 1176, 30, 30, 1177, 1178, 1179, 1180, 1181, 1181, 13, 44, 45, 73, 1182, 1182, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 1174, 1174, 1174, 1174, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 44, 45, 37, 30, 30, 13, 46, 36, 45, 70, 70, 94, 94, 30, 30, 55, 56, 57, 71, 59, 59, 13, 52, 53, 36, 95, 95, 96, 96, 97, 97, 13, 1045, 1045, 46, 1058, 1058, 1175, 1175, 30, 30, 13, 1048, 1045, 46, 1183, 1183, 1050, 1050, 30, 30, 13, 1048, 46, 98, 1184, 1184, 30, 30, 1185, 1186, 1187, 1188, 1189, 1189, 1190, 1191, 1192, 1193, 1194, 1194, 13, 44, 37, 101, 103, 103, 1195, 1195, 361, 362, 364, 1196, 365, 365, 13, 1045, 1045, 44, 1058, 1058, 1058, 1058, 366, 366, 13, 1048, 1045, 44, 1060, 1060, 1183, 1183, 30, 30, 13, 46, 1048, 44, 70, 70, 70, 70, 30, 30, 55, 56, 57, 1197, 59, 59, 13, 52, 53, 1048, 1198, 1198, 1198, 1198, 97, 97, 1199, 1200, 1201, 1202, 1203, 1203, 13, 44, 45, 73, 1204, 1204, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 1174, 1174, 1174, 1174, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 44, 45, 73, 30, 30, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 1174, 1174, 1174, 1174, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 27, 28, 155, 1205, 1205, 1206, 1206, 30, 30, 13, 29, 28, 155, 1207, 1207, 1208, 1208, 30, 30, 13, 964, 31, 155, 1209, 1209, 1210, 1210, 30, 30, 13, 1211, 31, 155, 1212, 1212, 1213, 1213, 30, 30, 13, 27, 28, 177, 1214, 1214, 1205, 1205, 30, 30, 13, 29, 28, 177, 1215, 1215, 1208, 1208, 30, 30, 13, 964, 31, 177, 1216, 1216, 1209, 1209, 30, 30, 13, 1211, 31, 177, 1217, 1217, 1218, 1218, 30, 30, 13, 1045, 1045, 46, 1058, 1058, 1058, 1058, 30, 30, 13, 1048, 1045, 46, 1219, 1219, 1220, 1220, 30, 30, 13, 1048, 46, 98, 1220, 1220, 1219, 1219, 30, 30, 1185, 1186, 1187, 1188, 1189, 1189, 1199, 1221, 1222, 1223, 1224, 1224, 13, 44, 37, 101, 103, 103, 103, 103, 1204, 1204, 361, 362, 364, 1196, 365, 365, 13, 1045, 1045, 44, 1058, 1058, 1058, 1058, 366, 366, 13, 1048, 1045, 44, 1060, 1060, 1219, 1219, 30, 30, 13, 1048, 44, 37, 1060, 1060, 1220, 1220, 30, 30, 1190, 1225, 1226, 1227, 1228, 1228, 1229, 1230, 1231, 1232, 1233, 1233, 1234, 1235, 1236, 1237, 1238, 1238, 13, 749, 52, 53, 1239, 1239, 1240, 1240, 1241, 1241, 13, 471, 52, 53, 1242, 1242, 1242, 1242, 30, 30, 1229, 1230, 1243, 1232, 1244, 1244, 1234, 1235, 1236, 1245, 1238, 1238, 13, 749, 52, 53, 1240, 1240, 1239, 1239, 1241, 1241, 13, 471, 52, 53, 1242, 1242, 1242, 1242, 30, 30, 13, 964, 31, 28, 1246, 1246, 1247, 1247, 30, 30, 13, 1211, 31, 28, 1248, 1248, 1212, 1212, 30, 30, 13, 964, 31, 98, 1246, 1246, 1249, 1249, 30, 30, 13, 1211, 31, 98, 1248, 1248, 1212, 1212, 30, 30, 13, 1045, 1045, 46, 1058, 1058, 1058, 1058, 30, 30, 13, 1048, 1045, 46, 1250, 1250, 1251, 1251, 30, 30, 13, 1048, 46, 98, 1250, 1250, 1251, 1251, 30, 30, 1185, 1186, 1187, 1188, 1189, 1189, 1199, 1221, 1222, 1223, 1224, 1224, 13, 44, 37, 101, 103, 103, 103, 103, 1204, 1204, 361, 362, 364, 1196, 365, 365, 13, 1045, 1045, 44, 1058, 1058, 1058, 1058, 366, 366, 13, 1048, 1045, 44, 1060, 1060, 1250, 1250, 30, 30, 13, 1048, 44, 37, 1060, 1060, 1250, 1250, 30, 30, 1190, 1225, 1226, 1252, 1228, 1228, 13, 44, 45, 73, 1253, 1253, 1254, 1254, 1195, 1195, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 1255, 1255, 74, 74, 13, 85, 81, 82, 1174, 1174, 1174, 1174, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 984, 985, 986, 987, 988, 988, 13, 44, 45, 73, 1253, 1253, 1254, 1254, 1256, 1256, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 1255, 1255, 74, 74, 13, 85, 81, 82, 1174, 1174, 1174, 1174, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 13, 1045, 1045, 52, 1058, 1058, 1058, 1058, 996, 996, 13, 1048, 1045, 52, 1050, 1050, 1176, 1176, 30, 30, 13, 1048, 52, 53, 1050, 1050, 1176, 1176, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1257, 1258, 1259, 1260, 1261, 1261, 445, 446, 446, 447, 1262, 1262, 449, 450, 451, 452, 453, 453, 454, 1263, 456, 457, 458, 458, 13, 98, 1264, 1264, 1264, 1264, 1265, 1265, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1266, 1267, 1268, 1269, 1270, 1270], "index": 50}
{"path": "jsrc/VisualChecker.java", "endline": 134, "ast": ["{#######}", {"trailing": "\n        ", "leading": "", "line": 105, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n        ", "line": 106, "leaf": true, "token": "Boolean"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 106, "leaf": true, "token": "failed"}, {"trailing": " ", "leading": " ", "line": 106, "token": "="}, {"trailing": "", "leading": " ", "line": 106, "leaf": true, "token": "false"}]], {"trailing": "\n\n        ", "leading": "", "line": 106, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "\n\n        ", "line": 108, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "size"}, {"trailing": " ", "leading": " ", "line": 108, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 108, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 108, "leaf": true, "token": "getNoVariables"}, {"trailing": "", "leading": "", "line": 108, "token": "("}, {"trailing": "", "leading": "", "line": 108, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 108, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 109, "token": "for"}, {"trailing": "", "leading": "", "line": 109, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 109, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 109, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 109, "token": "="}, {"trailing": "", "leading": " ", "line": 109, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 109, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 109, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 109, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 109, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 109, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 109, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 109, "token": "++"}]], {"trailing": "", "leading": "", "line": 109, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 109, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 110, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 110, "token": "."}, {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 110, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 110, "token": "("}, ["#+#", ["#+#", ["#+#", {"trailing": " ", "leading": "", "line": 110, "leaf": true, "token": "\"Var: \""}, {"trailing": " ", "leading": " ", "line": 110, "token": "+"}, {"trailing": " ", "leading": " ", "var": true, "line": 110, "leaf": true, "token": "i"}], {"trailing": " ", "leading": " ", "line": 110, "token": "+"}, {"trailing": " ", "leading": " ", "line": 110, "leaf": true, "token": "\" Val: \""}], {"trailing": " ", "leading": " ", "line": 110, "token": "+"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 110, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 110, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 110, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 110, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 110, "token": ")"}]], {"trailing": "", "leading": "", "line": 110, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 110, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 110, "token": "("}, {"trailing": "", "leading": "", "line": 110, "token": ")"}]]], {"trailing": "", "leading": "", "line": 110, "token": ")"}]], {"trailing": "\n            \n        ", "leading": "", "line": 110, "token": ";"}], {"trailing": "\n\n\n        ", "leading": "\n            \n        ", "line": 112, "token": "}"}]], ["#;", ["##", ["#[][]", {"trailing": "", "leading": "\n\n\n        ", "line": 115, "leaf": true, "token": "Integer"}, {"trailing": "", "leading": "", "line": 115, "token": "["}, {"trailing": "", "leading": "", "line": 115, "token": "]"}, {"trailing": "", "leading": "", "line": 115, "token": "["}, {"trailing": " ", "leading": "", "line": 115, "token": "]"}], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 115, "leaf": true, "token": "board"}, {"trailing": " ", "leading": " ", "line": 115, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 115, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 115, "leaf": true, "token": "Integer"}, ["[#][#]", {"trailing": "", "leading": "", "line": 115, "token": "["}, {"trailing": "", "leading": "", "line": 115, "leaf": true, "token": "9"}, {"trailing": "", "leading": "", "line": 115, "token": "]"}, {"trailing": "", "leading": "", "line": 115, "token": "["}, {"trailing": "", "leading": "", "line": 115, "leaf": true, "token": "9"}, {"trailing": "", "leading": "", "line": 115, "token": "]"}]]]]], {"trailing": "\n        ", "leading": "", "line": 115, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 116, "token": "for"}, {"trailing": "", "leading": "", "line": 116, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 116, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 116, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 116, "token": "="}, {"trailing": "", "leading": " ", "line": 116, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 116, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 116, "leaf": true, "token": "row"}, {"trailing": " ", "leading": " ", "line": 116, "token": "<"}, {"trailing": "", "leading": " ", "line": 116, "leaf": true, "token": "9"}], {"trailing": " ", "leading": "", "line": 116, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 116, "leaf": true, "token": "row"}, {"trailing": "", "leading": " ", "line": 116, "token": "++"}]], {"trailing": "", "leading": "", "line": 116, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 116, "token": "{"}, ["for(#)#", {"trailing": "", "leading": "\n            ", "line": 117, "token": "for"}, {"trailing": "", "leading": "", "line": 117, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 117, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 117, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 117, "token": "="}, {"trailing": "", "leading": " ", "line": 117, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 117, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 117, "leaf": true, "token": "col"}, {"trailing": " ", "leading": " ", "line": 117, "token": "<"}, {"trailing": "", "leading": " ", "line": 117, "leaf": true, "token": "9"}], {"trailing": " ", "leading": "", "line": 117, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 117, "leaf": true, "token": "col"}, {"trailing": "", "leading": " ", "line": 117, "token": "++"}]], {"trailing": "", "leading": "", "line": 117, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 117, "token": "{"}, ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\n                ", "var": true, "line": 118, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 118, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 118, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 118, "token": "]"}], {"trailing": "", "leading": "", "line": 118, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 118, "leaf": true, "token": "col"}, {"trailing": " ", "leading": "", "line": 118, "token": "]"}], {"trailing": " ", "leading": " ", "line": 118, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 118, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 118, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 118, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 118, "token": "("}, ["#+#", ["(#)", {"trailing": "", "leading": "", "line": 118, "token": "("}, ["#*#", {"trailing": "", "leading": "", "var": true, "line": 118, "leaf": true, "token": "row"}, {"trailing": "", "leading": "", "line": 118, "token": "*"}, {"trailing": "", "leading": "", "line": 118, "leaf": true, "token": "9"}], {"trailing": " ", "leading": "", "line": 118, "token": ")"}], {"trailing": " ", "leading": " ", "line": 118, "token": "+"}, {"trailing": "", "leading": " ", "var": true, "line": 118, "leaf": true, "token": "col"}], {"trailing": "", "leading": "", "line": 118, "token": ")"}]], {"trailing": "", "leading": "", "line": 118, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 118, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 118, "token": "("}, {"trailing": "", "leading": "", "line": 118, "token": ")"}]]], {"trailing": "\n            ", "leading": "", "line": 118, "token": ";"}], {"trailing": "\n        ", "leading": "\n            ", "line": 119, "token": "}"}]], {"trailing": "\n\n        // print board\n        ", "leading": "\n        ", "line": 120, "token": "}"}]], ["for(#)#", {"trailing": "", "leading": "\n\n        // print board\n        ", "line": 123, "token": "for"}, {"trailing": "", "leading": "", "line": 123, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 123, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 123, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 123, "token": "="}, {"trailing": "", "leading": " ", "line": 123, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 123, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 123, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 123, "token": "<"}, {"trailing": "", "leading": " ", "line": 123, "leaf": true, "token": "9"}], {"trailing": " ", "leading": "", "line": 123, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 123, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 123, "token": "++"}]], {"trailing": "", "leading": "", "line": 123, "token": ")"}, ["{###}", {"trailing": "\n            ", "leading": "", "line": 123, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 124, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 124, "token": "."}, {"trailing": "", "leading": "", "line": 124, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 124, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 124, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 124, "token": "("}, {"trailing": "", "leading": "", "line": 124, "leaf": true, "token": "\"[ \""}, {"trailing": "", "leading": "", "line": 124, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 124, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n            ", "line": 125, "token": "for"}, {"trailing": "", "leading": "", "line": 125, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 125, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 125, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 125, "token": "="}, {"trailing": "", "leading": " ", "line": 125, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 125, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 125, "leaf": true, "token": "j"}, {"trailing": " ", "leading": " ", "line": 125, "token": "<"}, {"trailing": "", "leading": " ", "line": 125, "leaf": true, "token": "9"}], {"trailing": " ", "leading": "", "line": 125, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 125, "leaf": true, "token": "j"}, {"trailing": "", "leading": " ", "line": 125, "token": "++"}]], {"trailing": "", "leading": "", "line": 125, "token": ")"}, ["{#}", {"trailing": "\n                ", "leading": "", "line": 125, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n                ", "var": true, "line": 126, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 126, "token": "."}, {"trailing": "", "leading": "", "line": 126, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 126, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 126, "leaf": true, "token": "print"}, {"trailing": "", "leading": "", "line": 126, "token": "("}, ["#+#", ["#+#", {"trailing": " ", "leading": "", "line": 126, "leaf": true, "token": "\" \""}, {"trailing": " ", "leading": " ", "line": 126, "token": "+"}, ["#[#]", ["#[#]", {"trailing": "", "leading": " ", "var": true, "line": 126, "leaf": true, "token": "board"}, {"trailing": "", "leading": "", "line": 126, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 126, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 126, "token": "]"}], {"trailing": "", "leading": "", "line": 126, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 126, "leaf": true, "token": "j"}, {"trailing": " ", "leading": "", "line": 126, "token": "]"}]], {"trailing": " ", "leading": " ", "line": 126, "token": "+"}, {"trailing": "", "leading": " ", "line": 126, "leaf": true, "token": "\" \""}], {"trailing": "", "leading": "", "line": 126, "token": ")"}]], {"trailing": "\n            ", "leading": "", "line": 126, "token": ";"}], {"trailing": "\n            ", "leading": "\n            ", "line": 127, "token": "}"}]], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 128, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 128, "token": "."}, {"trailing": "", "leading": "", "line": 128, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 128, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 128, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 128, "token": "("}, {"trailing": "", "leading": "", "line": 128, "leaf": true, "token": "\" ]\""}, {"trailing": "", "leading": "", "line": 128, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 128, "token": ";"}], {"trailing": "\n        ", "leading": "\n        ", "line": 129, "token": "}"}]], ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n        ", "var": true, "line": 130, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 130, "token": "."}, {"trailing": "", "leading": "", "line": 130, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 130, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 130, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 130, "token": "("}, {"trailing": "", "leading": "", "line": 130, "token": ")"}]], {"trailing": "\n\n\n        // TODO add checks here but cba rn\n    ", "leading": "", "line": 130, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n\n\n        // TODO add checks here but cba rn\n    ", "line": 134, "token": "}"}], "method": "drawSudoku", "beginline": 105, "class": "VisualChecker", "features": [357, 358, 359, 13, 44, 118, 37, 360, 360, 816, 817, 818, 819, 820, 820, 13, 44, 45, 37, 821, 821, 13, 46, 36, 45, 30, 30, 529, 530, 531, 1271, 533, 533, 13, 44, 45, 73, 534, 534, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 100, 100, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1143, 1144, 1144, 1144, 1145, 1145, 13, 14, 15, 15, 1038, 1038, 1039, 1039, 1146, 1146, 1147, 1148, 1149, 1150, 1151, 1151, 13, 46, 46, 14, 541, 541, 1152, 1152, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 1154, 1154, 95, 95, 549, 549, 550, 551, 552, 1272, 554, 554, 113, 1273, 116, 1274, 1275, 1275, 13, 44, 118, 37, 119, 119, 113, 116, 1276, 1277, 911, 911, 1278, 1279, 1280, 1281, 1282, 1282, 1278, 1283, 1280, 1281, 1284, 1284, 13, 44, 45, 73, 1285, 1285, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 1278, 1286, 1287, 1288, 1289, 1289, 13, 89, 90, 82, 91, 91, 92, 92, 1285, 1285, 13, 44, 45, 73, 30, 30, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 1278, 1286, 1287, 1288, 1289, 1289, 13, 89, 90, 82, 91, 91, 92, 92, 1285, 1285, 13, 1045, 1045, 44, 1175, 1175, 30, 30, 13, 1048, 1045, 44, 1050, 1050, 1176, 1176, 30, 30, 13, 1048, 44, 37, 1050, 1050, 1176, 1176, 30, 30, 13, 46, 46, 36, 800, 800, 541, 541, 30, 30, 544, 545, 546, 547, 548, 548, 13, 1290, 15, 52, 1291, 1291, 1292, 1292, 549, 549, 1278, 1293, 1294, 1295, 1289, 1289, 13, 14, 52, 53, 1296, 1296, 1038, 1038, 1285, 1285, 550, 551, 552, 1297, 554, 554, 13, 44, 45, 73, 1169, 1169, 1170, 1170, 556, 556, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 1171, 1171, 74, 74, 1278, 1286, 1287, 1288, 1289, 1289, 13, 89, 90, 82, 91, 91, 92, 92, 1285, 1285, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 984, 985, 986, 987, 988, 988, 13, 44, 45, 73, 1256, 1256, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 1278, 1286, 1287, 1288, 1289, 1289, 13, 89, 90, 82, 91, 91, 92, 92, 1285, 1285, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 979, 980, 981, 982, 983, 983, 997, 1298, 1298, 999, 1299, 1299, 13, 1045, 1045, 14, 1058, 1058, 1175, 1175, 1300, 1300, 13, 1048, 1045, 14, 1050, 1050, 1176, 1176, 30, 30, 13, 1048, 14, 15, 1050, 1050, 1176, 1176, 30, 30, 997, 998, 999, 1000, 1001, 1001, 445, 446, 446, 447, 1002, 1002, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1257, 1258, 1259, 1260, 1261, 1261, 445, 446, 446, 447, 1262, 1262, 449, 450, 451, 452, 453, 453, 454, 1263, 456, 457, 458, 458], "index": 51}
{"path": "jsrc/VisualChecker.java", "endline": 143, "ast": ["{##}", {"trailing": "\n        // TODO check distances \n        ", "leading": "", "line": 136, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n        // TODO check distances \n        ", "line": 138, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 138, "leaf": true, "token": "size"}, {"trailing": " ", "leading": " ", "line": 138, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 138, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 138, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 138, "leaf": true, "token": "getNoVariables"}, {"trailing": "", "leading": "", "line": 138, "token": "("}, {"trailing": "", "leading": "", "line": 138, "token": ")"}]]]], {"trailing": "\n        ", "leading": "", "line": 138, "token": ";"}], ["for(#)#", {"trailing": "", "leading": "\n        ", "line": 139, "token": "for"}, {"trailing": "", "leading": "", "line": 139, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 139, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 139, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 139, "token": "="}, {"trailing": "", "leading": " ", "line": 139, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 139, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 139, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 139, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 139, "leaf": true, "token": "size"}], {"trailing": " ", "leading": "", "line": 139, "token": ";"}, ["#++", {"trailing": " ", "leading": " ", "var": true, "line": 139, "leaf": true, "token": "i"}, {"trailing": "", "leading": " ", "line": 139, "token": "++"}]], {"trailing": "", "leading": "", "line": 139, "token": ")"}, ["{#}", {"trailing": "\n            ", "leading": "", "line": 139, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\n            ", "var": true, "line": 140, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 140, "token": "."}, {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 140, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 140, "token": "("}, ["#+#", ["#+#", ["#+#", {"trailing": " ", "leading": "", "line": 140, "leaf": true, "token": "\"Var: \""}, {"trailing": " ", "leading": " ", "line": 140, "token": "+"}, {"trailing": " ", "leading": " ", "var": true, "line": 140, "leaf": true, "token": "i"}], {"trailing": " ", "leading": " ", "line": 140, "token": "+"}, {"trailing": " ", "leading": " ", "line": 140, "leaf": true, "token": "\" Val: \""}], {"trailing": " ", "leading": " ", "line": 140, "token": "+"}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 140, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 140, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "getVarAssignment"}, {"trailing": "", "leading": "", "line": 140, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 140, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 140, "token": ")"}]], {"trailing": "", "leading": "", "line": 140, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "getAsInt"}, {"trailing": "", "leading": "", "line": 140, "token": "("}, {"trailing": "", "leading": "", "line": 140, "token": ")"}]]], {"trailing": "", "leading": "", "line": 140, "token": ")"}]], {"trailing": "\n            \n        ", "leading": "", "line": 140, "token": ";"}], {"trailing": "\n    ", "leading": "\n            \n        ", "line": 142, "token": "}"}]], {"trailing": "\n", "leading": "\n    ", "line": 143, "token": "}"}], "method": "drawLangsfords", "beginline": 136, "class": "VisualChecker", "features": [13, 44, 45, 37, 13, 46, 36, 45, 30, 30, 529, 530, 531, 1271, 533, 533, 13, 44, 45, 73, 534, 534, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 100, 100, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1143, 1144, 1144, 1144, 1145, 1145, 13, 14, 15, 15, 1038, 1038, 1039, 1039, 1146, 1146, 1147, 1148, 1149, 1150, 1151, 1151, 13, 46, 46, 14, 541, 541, 1152, 1152, 544, 545, 546, 547, 548, 548, 13, 52, 53, 46, 1154, 1154, 95, 95, 549, 549, 550, 551, 552, 1272, 554, 554], "index": 52}
{"path": "jsrc/BinaryCSPReader.java", "endline": 70, "ast": ["{############}", {"trailing": "\r\n    ", "leading": " ", "line": 16, "token": "{"}, ["if##", {"trailing": " ", "leading": "\r\n    ", "line": 17, "token": "if"}, ["(#)", {"trailing": "", "leading": " ", "line": 17, "token": "("}, ["#<#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 17, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 17, "token": "."}, {"trailing": " ", "leading": "", "line": 17, "leaf": true, "token": "length"}], {"trailing": " ", "leading": " ", "line": 17, "token": "<"}, {"trailing": "", "leading": " ", "line": 17, "leaf": true, "token": "4"}], {"trailing": " ", "leading": "", "line": 17, "token": ")"}], ["{#return;}", {"trailing": "\r\n      ", "leading": " ", "line": 17, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 18, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 18, "token": "."}, {"trailing": "", "leading": "", "line": 18, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 18, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 18, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 18, "token": "("}, {"trailing": "", "leading": "", "line": 18, "leaf": true, "token": "\"Usage: java BinaryCSPReader <file.csp> <search-type> <variable-selection-type> <value-selection-type> (optional) 'all-solutions'\""}, {"trailing": " ", "leading": "", "line": 18, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 18, "token": ";"}], {"trailing": " ", "leading": "\r\n      ", "line": 19, "token": "return"}, {"trailing": "\r\n    ", "leading": " ", "line": 19, "token": ";"}, {"trailing": "\r\n\r\n    ", "leading": "\r\n    ", "line": 20, "token": "}"}]], ["#;", ["##", {"trailing": " ", "leading": "\r\n\r\n    ", "line": 22, "leaf": true, "token": "BinaryCSPReader"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 22, "leaf": true, "token": "reader"}, {"trailing": " ", "leading": " ", "line": 22, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 22, "token": "new"}, ["#()", {"trailing": "", "leading": " ", "line": 22, "leaf": true, "token": "BinaryCSPReader"}, {"trailing": "", "leading": "", "line": 22, "token": "("}, {"trailing": " ", "leading": "", "line": 22, "token": ")"}]]]], {"trailing": "\r\n    ", "leading": " ", "line": 22, "token": ";"}], ["#;", ["##", ["#.#", {"trailing": "", "leading": "\r\n    ", "line": 23, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 23, "token": "."}, {"trailing": " ", "leading": "", "line": 23, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": " ", "var": true, "line": 23, "leaf": true, "token": "pruneType"}], {"trailing": "\r\n    ", "leading": "", "line": 23, "token": ";"}], ["#;", ["##", ["#.#", {"trailing": "", "leading": "\r\n    ", "line": 24, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 24, "token": "."}, {"trailing": " ", "leading": "", "line": 24, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": " ", "var": true, "line": 24, "leaf": true, "token": "valType"}], {"trailing": "\r\n    ", "leading": "", "line": 24, "token": ";"}], ["#;", ["##", ["#.#", {"trailing": "", "leading": "\r\n    ", "line": 25, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 25, "token": "."}, {"trailing": " ", "leading": "", "line": 25, "leaf": true, "token": "VarType"}], {"trailing": "", "leading": " ", "var": true, "line": 25, "leaf": true, "token": "varType"}], {"trailing": "\r\n\r\n    ", "leading": "", "line": 25, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\r\n\r\n    ", "line": 27, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 27, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 27, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 27, "token": "["}, {"trailing": "", "leading": "", "line": 27, "leaf": true, "token": "1"}, {"trailing": "", "leading": "", "line": 27, "token": "]"}], {"trailing": "", "leading": "", "line": 27, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 27, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 27, "token": "("}, {"trailing": "", "leading": "", "line": 27, "leaf": true, "token": "\"FC\""}, {"trailing": "", "leading": "", "line": 27, "token": ")"}]], {"trailing": "", "leading": "", "line": 27, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 27, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 28, "leaf": true, "token": "pruneType"}, {"trailing": " ", "leading": " ", "line": 28, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 28, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 28, "token": "."}, {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 28, "token": "."}, {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "FC"}]], {"trailing": "\r\n    ", "leading": "", "line": 28, "token": ";"}], {"trailing": " ", "leading": "\r\n    ", "line": 29, "token": "}"}], {"trailing": " ", "leading": " ", "line": 29, "token": "else"}, ["if##else#", {"trailing": "", "leading": " ", "line": 29, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 29, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 29, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 29, "token": "["}, {"trailing": "", "leading": "", "line": 29, "leaf": true, "token": "1"}, {"trailing": "", "leading": "", "line": 29, "token": "]"}], {"trailing": "", "leading": "", "line": 29, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 29, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 29, "token": "("}, {"trailing": "", "leading": "", "line": 29, "leaf": true, "token": "\"AC3\""}, {"trailing": "", "leading": "", "line": 29, "token": ")"}]], {"trailing": "", "leading": "", "line": 29, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 29, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 30, "leaf": true, "token": "pruneType"}, {"trailing": " ", "leading": " ", "line": 30, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 30, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 30, "token": "."}, {"trailing": "", "leading": "", "line": 30, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 30, "token": "."}, {"trailing": "", "leading": "", "line": 30, "leaf": true, "token": "AC3"}]], {"trailing": "\r\n    ", "leading": "", "line": 30, "token": ";"}], {"trailing": " ", "leading": "\r\n    ", "line": 31, "token": "}"}], {"trailing": " ", "leading": " ", "line": 31, "token": "else"}, ["if##else#", {"trailing": "", "leading": " ", "line": 31, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 31, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 31, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 31, "token": "["}, {"trailing": "", "leading": "", "line": 31, "leaf": true, "token": "1"}, {"trailing": "", "leading": "", "line": 31, "token": "]"}], {"trailing": "", "leading": "", "line": 31, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 31, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 31, "token": "("}, {"trailing": "", "leading": "", "line": 31, "leaf": true, "token": "\"AC3_1\""}, {"trailing": "", "leading": "", "line": 31, "token": ")"}]], {"trailing": "", "leading": "", "line": 31, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 31, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 32, "leaf": true, "token": "pruneType"}, {"trailing": " ", "leading": " ", "line": 32, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 32, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 32, "token": "."}, {"trailing": "", "leading": "", "line": 32, "leaf": true, "token": "PruneType"}], {"trailing": "", "leading": "", "line": 32, "token": "."}, {"trailing": "", "leading": "", "line": 32, "leaf": true, "token": "AC3_1"}]], {"trailing": "\r\n    ", "leading": "", "line": 32, "token": ";"}], {"trailing": "\r\n\r\n    ", "leading": "\r\n    ", "line": 33, "token": "}"}], {"trailing": " ", "leading": "\r\n\r\n    ", "line": 35, "token": "else"}, ["{#return;}", {"trailing": "\r\n      ", "leading": " ", "line": 35, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 36, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 36, "token": "."}, {"trailing": "", "leading": "", "line": 36, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 36, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 36, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 36, "token": "("}, {"trailing": "", "leading": "", "line": 36, "leaf": true, "token": "\"Valid search types are 'FC', 'AC3', 'AC3_1'\""}, {"trailing": " ", "leading": "", "line": 36, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 36, "token": ";"}], {"trailing": " ", "leading": "\r\n      ", "line": 37, "token": "return"}, {"trailing": "\r\n    ", "leading": " ", "line": 37, "token": ";"}, {"trailing": "\r\n\r\n    ", "leading": "\r\n    ", "line": 38, "token": "}"}]]]], ["if##else#", {"trailing": "", "leading": "\r\n\r\n    ", "line": 40, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 40, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 40, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 40, "token": "["}, {"trailing": "", "leading": "", "line": 40, "leaf": true, "token": "2"}, {"trailing": "", "leading": "", "line": 40, "token": "]"}], {"trailing": "", "leading": "", "line": 40, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 40, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 40, "token": "("}, {"trailing": "", "leading": "", "line": 40, "leaf": true, "token": "\"ASC\""}, {"trailing": "", "leading": "", "line": 40, "token": ")"}]], {"trailing": "", "leading": "", "line": 40, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 40, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 41, "leaf": true, "token": "varType"}, {"trailing": " ", "leading": " ", "line": 41, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 41, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 41, "token": "."}, {"trailing": "", "leading": "", "line": 41, "leaf": true, "token": "VarType"}], {"trailing": "", "leading": "", "line": 41, "token": "."}, {"trailing": "", "leading": "", "line": 41, "leaf": true, "token": "ASC"}]], {"trailing": "\r\n    ", "leading": "", "line": 41, "token": ";"}], {"trailing": " ", "leading": "\r\n    ", "line": 42, "token": "}"}], {"trailing": " ", "leading": " ", "line": 42, "token": "else"}, ["if##else#", {"trailing": "", "leading": " ", "line": 42, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 42, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 42, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 42, "token": "["}, {"trailing": "", "leading": "", "line": 42, "leaf": true, "token": "2"}, {"trailing": "", "leading": "", "line": 42, "token": "]"}], {"trailing": "", "leading": "", "line": 42, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 42, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 42, "token": "("}, {"trailing": "", "leading": "", "line": 42, "leaf": true, "token": "\"SMALL_DOM\""}, {"trailing": "", "leading": "", "line": 42, "token": ")"}]], {"trailing": "", "leading": "", "line": 42, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 42, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 43, "leaf": true, "token": "varType"}, {"trailing": " ", "leading": " ", "line": 43, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 43, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 43, "token": "."}, {"trailing": "", "leading": "", "line": 43, "leaf": true, "token": "VarType"}], {"trailing": "", "leading": "", "line": 43, "token": "."}, {"trailing": "", "leading": "", "line": 43, "leaf": true, "token": "SMALL_DOM"}]], {"trailing": "\r\n    ", "leading": "", "line": 43, "token": ";"}], {"trailing": "\r\n    ", "leading": "\r\n    ", "line": 44, "token": "}"}], {"trailing": " ", "leading": "\r\n    ", "line": 45, "token": "else"}, ["{#return;}", {"trailing": "\r\n      ", "leading": " ", "line": 45, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 46, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 46, "token": "."}, {"trailing": "", "leading": "", "line": 46, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 46, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 46, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 46, "token": "("}, {"trailing": "", "leading": "", "line": 46, "leaf": true, "token": "\"Valid var search types are 'ASC', 'SMALL_DOM'\""}, {"trailing": " ", "leading": "", "line": 46, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 46, "token": ";"}], {"trailing": " ", "leading": "\r\n      ", "line": 47, "token": "return"}, {"trailing": "\r\n    ", "leading": " ", "line": 47, "token": ";"}, {"trailing": "\r\n\r\n    ", "leading": "\r\n    ", "line": 48, "token": "}"}]]], ["if##else#", {"trailing": "", "leading": "\r\n\r\n    ", "line": 50, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 50, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 50, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 50, "token": "["}, {"trailing": "", "leading": "", "line": 50, "leaf": true, "token": "3"}, {"trailing": "", "leading": "", "line": 50, "token": "]"}], {"trailing": "", "leading": "", "line": 50, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 50, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 50, "token": "("}, {"trailing": "", "leading": "", "line": 50, "leaf": true, "token": "\"ASC\""}, {"trailing": "", "leading": "", "line": 50, "token": ")"}]], {"trailing": "", "leading": "", "line": 50, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 50, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 51, "leaf": true, "token": "valType"}, {"trailing": " ", "leading": " ", "line": 51, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 51, "token": "."}, {"trailing": "", "leading": "", "line": 51, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": "", "line": 51, "token": "."}, {"trailing": "", "leading": "", "line": 51, "leaf": true, "token": "ASC"}]], {"trailing": "\r\n    ", "leading": "", "line": 51, "token": ";"}], {"trailing": " ", "leading": "\r\n    ", "line": 52, "token": "}"}], {"trailing": " ", "leading": " ", "line": 52, "token": "else"}, ["if##else#", {"trailing": "", "leading": " ", "line": 52, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 52, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 52, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 52, "token": "["}, {"trailing": "", "leading": "", "line": 52, "leaf": true, "token": "3"}, {"trailing": "", "leading": "", "line": 52, "token": "]"}], {"trailing": "", "leading": "", "line": 52, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 52, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 52, "token": "("}, {"trailing": "", "leading": "", "line": 52, "leaf": true, "token": "\"MIN_CONFLICTS\""}, {"trailing": "", "leading": "", "line": 52, "token": ")"}]], {"trailing": "", "leading": "", "line": 52, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 52, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 53, "leaf": true, "token": "valType"}, {"trailing": " ", "leading": " ", "line": 53, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 53, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 53, "token": "."}, {"trailing": "", "leading": "", "line": 53, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": "", "line": 53, "token": "."}, {"trailing": "", "leading": "", "line": 53, "leaf": true, "token": "MIN_CONFLICTS"}]], {"trailing": "\r\n    ", "leading": "", "line": 53, "token": ";"}], {"trailing": " ", "leading": "\r\n    ", "line": 54, "token": "}"}], {"trailing": " ", "leading": " ", "line": 54, "token": "else"}, ["if##else#", {"trailing": "", "leading": " ", "line": 54, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 54, "token": "("}, ["#.#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 54, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 54, "token": "["}, {"trailing": "", "leading": "", "line": 54, "leaf": true, "token": "3"}, {"trailing": "", "leading": "", "line": 54, "token": "]"}], {"trailing": "", "leading": "", "line": 54, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 54, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 54, "token": "("}, {"trailing": "", "leading": "", "line": 54, "leaf": true, "token": "\"MIN_CONFLICTS_FORCE_FC\""}, {"trailing": "", "leading": "", "line": 54, "token": ")"}]], {"trailing": "", "leading": "", "line": 54, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 54, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 55, "leaf": true, "token": "valType"}, {"trailing": " ", "leading": " ", "line": 55, "token": "="}, ["#.#", ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 55, "leaf": true, "token": "BinaryCSP"}, {"trailing": "", "leading": "", "line": 55, "token": "."}, {"trailing": "", "leading": "", "line": 55, "leaf": true, "token": "ValType"}], {"trailing": "", "leading": "", "line": 55, "token": "."}, {"trailing": "", "leading": "", "line": 55, "leaf": true, "token": "MIN_CONFLICTS_FORCE_FC"}]], {"trailing": "\r\n    ", "leading": "", "line": 55, "token": ";"}], {"trailing": "\r\n    ", "leading": "\r\n    ", "line": 56, "token": "}"}], {"trailing": " ", "leading": "\r\n    ", "line": 57, "token": "else"}, ["{#return;}", {"trailing": "\r\n      ", "leading": " ", "line": 57, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 58, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 58, "token": "."}, {"trailing": "", "leading": "", "line": 58, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 58, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 58, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 58, "token": "("}, {"trailing": "", "leading": "", "line": 58, "leaf": true, "token": "\"Valid val search types are 'ASC', 'MIN_CONFLICTS', 'MIN_CONFLICTS_FORCE_FC\""}, {"trailing": " ", "leading": "", "line": 58, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 58, "token": ";"}], {"trailing": " ", "leading": "\r\n      ", "line": 59, "token": "return"}, {"trailing": "\r\n    ", "leading": " ", "line": 59, "token": ";"}, {"trailing": "\r\n    \r\n\r\n    ", "leading": "\r\n    ", "line": 60, "token": "}"}]]]], ["#;", ["##", {"trailing": " ", "leading": "\r\n    \r\n\r\n    ", "line": 63, "leaf": true, "token": "Boolean"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 63, "leaf": true, "token": "allSolutions"}, {"trailing": " ", "leading": " ", "line": 63, "token": "="}, {"trailing": "", "leading": " ", "line": 63, "leaf": true, "token": "false"}]], {"trailing": "\r\n    ", "leading": "", "line": 63, "token": ";"}], ["if##", {"trailing": "", "leading": "\r\n    ", "line": 64, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 64, "token": "("}, ["#&&#", ["#==#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 64, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 64, "token": "."}, {"trailing": " ", "leading": "", "line": 64, "leaf": true, "token": "length"}], {"trailing": " ", "leading": " ", "line": 64, "token": "=="}, {"trailing": " ", "leading": " ", "line": 64, "leaf": true, "token": "5"}], {"trailing": " ", "leading": " ", "line": 64, "token": "&&"}, ["#.#", ["#[#]", {"trailing": "", "leading": " ", "var": true, "line": 64, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 64, "token": "["}, {"trailing": "", "leading": "", "line": 64, "leaf": true, "token": "4"}, {"trailing": "", "leading": "", "line": 64, "token": "]"}], {"trailing": "", "leading": "", "line": 64, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 64, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 64, "token": "("}, {"trailing": "", "leading": "", "line": 64, "leaf": true, "token": "\"all-solutions\""}, {"trailing": "", "leading": "", "line": 64, "token": ")"}]]], {"trailing": "", "leading": "", "line": 64, "token": ")"}], ["{#}", {"trailing": "\r\n      ", "leading": "", "line": 64, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 65, "leaf": true, "token": "allSolutions"}, {"trailing": " ", "leading": " ", "line": 65, "token": "="}, {"trailing": "", "leading": " ", "line": 65, "leaf": true, "token": "true"}], {"trailing": "\r\n    ", "leading": "", "line": 65, "token": ";"}], {"trailing": "\r\n    ", "leading": "\r\n    ", "line": 66, "token": "}"}]], ["#;", ["##", {"trailing": " ", "leading": "\r\n    ", "line": 67, "leaf": true, "token": "BinaryCSP"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "instance"}, {"trailing": " ", "leading": " ", "line": 67, "token": "="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "reader"}, {"trailing": "", "leading": "", "line": 67, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 67, "leaf": true, "token": "readBinaryCSP"}, {"trailing": "", "leading": "", "line": 67, "token": "("}, ["#,#,#,#,#", ["#[#]", {"trailing": "", "leading": "", "var": true, "line": 67, "leaf": true, "token": "args"}, {"trailing": "", "leading": "", "line": 67, "token": "["}, {"trailing": "", "leading": "", "line": 67, "leaf": true, "token": "0"}, {"trailing": "", "leading": "", "line": 67, "token": "]"}], {"trailing": " ", "leading": "", "line": 67, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "pruneType"}, {"trailing": " ", "leading": "", "line": 67, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "varType"}, {"trailing": " ", "leading": "", "line": 67, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "valType"}, {"trailing": " ", "leading": "", "line": 67, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "allSolutions"}], {"trailing": "", "leading": "", "line": 67, "token": ")"}]]]], {"trailing": "\r\n\t  // System.out.println(instance);\r\n    ", "leading": "", "line": 67, "token": ";"}], ["#;", ["new#", {"trailing": " ", "leading": "\r\n\t  // System.out.println(instance);\r\n    ", "line": 69, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 69, "leaf": true, "token": "BinaryCSPSolver"}, ["(#)", {"trailing": "", "leading": "", "line": 69, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 69, "leaf": true, "token": "instance"}, {"trailing": "", "leading": "", "line": 69, "token": ")"}]]], {"trailing": "\r\n  ", "leading": "", "line": 69, "token": ";"}], {"trailing": "\r\n\r\n  /**\r\n   * File format:\r\n   * <no. vars>\r\n   * NB vars indexed from 0\r\n   * We assume that the domain of all vars is specified in terms of bounds\r\n   * <lb>, <ub> (one per var)\r\n   * Then the list of constraints\r\n   * c(<varno>, <varno>)\r\n   * binary tuples\r\n   * <domain val>, <domain val>\r\n   */\r\n  ", "leading": "\r\n  ", "line": 70, "token": "}"}], "method": "main", "beginline": 16, "class": "BinaryCSPReader", "features": [13, 46, 80, 98, 1028, 1029, 1301, 1302, 1032, 1032, 1303, 1304, 1305, 1306, 1306, 445, 446, 446, 447, 1307, 1307, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1308, 1309, 1310, 1311, 1312, 1312, 1313, 1314, 1315, 1316, 1316, 13, 44, 118, 37, 1317, 1317, 1313, 1318, 1319, 1320, 1321, 1321, 163, 164, 1322, 1323, 1324, 1324, 167, 168, 1325, 1326, 171, 171, 13, 118, 37, 1327, 1327, 163, 164, 1322, 1323, 1328, 1328, 187, 188, 1329, 1330, 191, 191, 13, 118, 37, 1331, 1331, 163, 164, 1322, 1323, 1328, 1328, 374, 375, 1332, 1333, 378, 378, 13, 118, 37, 1334, 1334, 13, 1045, 46, 367, 1046, 1046, 30, 30, 75, 1061, 1335, 711, 79, 79, 1185, 1186, 1187, 1336, 1337, 1337, 1338, 1339, 1340, 1341, 1342, 1342, 13, 44, 37, 197, 198, 198, 1343, 1343, 163, 164, 164, 1344, 1328, 1328, 167, 168, 169, 1345, 171, 171, 172, 173, 1346, 1347, 176, 176, 13, 1045, 46, 367, 1058, 1058, 1046, 1046, 180, 180, 75, 1061, 1335, 711, 79, 79, 1185, 1186, 1187, 1336, 1337, 1337, 1348, 1349, 1350, 1351, 1352, 1352, 13, 44, 37, 197, 103, 103, 198, 198, 1353, 1353, 163, 164, 164, 1344, 1328, 1328, 167, 168, 169, 1345, 171, 171, 1354, 1355, 1356, 1357, 1358, 1358, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 1359, 1359, 75, 1061, 1335, 711, 79, 79, 1185, 1186, 1187, 1336, 1337, 1337, 1360, 1361, 1362, 1363, 1364, 1364, 13, 44, 37, 197, 103, 103, 103, 103, 1365, 1365, 163, 164, 164, 1344, 1328, 1328, 167, 168, 169, 1345, 171, 171, 313, 314, 1366, 1367, 317, 317, 445, 446, 446, 447, 1368, 1368, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1369, 1370, 1371, 1372, 1373, 1373, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 1374, 1374, 1375, 1376, 1377, 1378, 1379, 1379, 1185, 1186, 1187, 1336, 1380, 1380, 1381, 1382, 1383, 1384, 1385, 1385, 13, 44, 37, 197, 198, 198, 1386, 1386, 163, 164, 164, 1344, 1328, 1328, 374, 375, 376, 1387, 378, 378, 379, 380, 1388, 1389, 383, 383, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 385, 385, 1375, 1376, 1377, 1378, 1379, 1379, 1185, 1186, 1187, 1336, 1380, 1380, 1390, 1391, 1392, 1393, 1394, 1394, 13, 44, 37, 197, 103, 103, 198, 198, 1395, 1395, 163, 164, 164, 1344, 1328, 1328, 374, 375, 376, 1387, 378, 378, 1396, 1397, 1398, 1399, 1400, 1400, 445, 446, 446, 447, 1401, 1401, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1402, 1403, 1404, 1405, 1406, 1406, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 1407, 1407, 1408, 1409, 1410, 1411, 1412, 1412, 1185, 1186, 1187, 1336, 1413, 1413, 1381, 1382, 1383, 1384, 1385, 1385, 13, 44, 37, 197, 198, 198, 1386, 1386, 163, 164, 164, 1344, 1328, 1328, 187, 188, 189, 1414, 191, 191, 379, 380, 1388, 1389, 395, 395, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 385, 385, 1408, 1409, 1410, 1411, 1412, 1412, 1185, 1186, 1187, 1336, 1413, 1413, 1415, 1416, 1417, 1418, 1419, 1419, 13, 44, 37, 197, 103, 103, 198, 198, 1420, 1420, 163, 164, 164, 1344, 1328, 1328, 187, 188, 189, 1414, 191, 191, 1421, 1422, 1423, 1424, 1425, 1425, 13, 1045, 46, 367, 1058, 1058, 1058, 1058, 1426, 1426, 1408, 1409, 1410, 1411, 1412, 1412, 1185, 1186, 1187, 1336, 1413, 1413, 1427, 1428, 1429, 1430, 1431, 1431, 13, 44, 37, 197, 103, 103, 103, 103, 1432, 1432, 163, 164, 164, 1344, 1328, 1328, 187, 188, 189, 1414, 191, 191, 192, 193, 1433, 1434, 196, 196, 445, 446, 446, 447, 1435, 1435, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 1436, 1437, 1438, 1439, 1440, 1440, 357, 358, 359, 1441, 1441, 13, 44, 118, 37, 360, 360, 816, 817, 818, 819, 820, 820, 13, 46, 27, 28, 1442, 1442, 1442, 1442, 821, 821, 1028, 1029, 1443, 1444, 1032, 1032, 1445, 1446, 1447, 1448, 1449, 1449, 13, 1045, 46, 31, 1046, 1046, 1058, 1058, 1450, 1450, 1303, 1451, 1452, 1453, 1454, 1454, 1185, 1186, 1187, 1455, 1456, 1456, 1457, 1458, 1459, 1460, 1461, 1461, 13, 44, 37, 101, 103, 103, 1462, 1462, 361, 362, 364, 1196, 365, 365, 163, 1322, 1323, 1463, 1463, 13, 44, 118, 37, 1464, 1464, 13, 46, 36, 118, 1465, 1465, 30, 30, 1466, 1467, 1468, 1469, 1470, 1470, 13, 1045, 1471, 52, 1058, 1058, 1046, 1046, 1472, 1472, 60, 1051, 1473, 61, 123, 123, 13, 1474, 52, 53, 1475, 1475, 1475, 1475, 74, 74, 13, 1476, 52, 53, 1477, 1477, 1477, 1477, 30, 30, 13, 1478, 52, 53, 1479, 1479, 1479, 1479, 30, 30, 13, 1480, 52, 53, 1481, 1481, 1481, 1481, 30, 30, 1482, 1483, 1484, 1485, 1486, 1486, 13, 118, 689, 37, 1264, 1264, 1487, 1487], "index": 53}
{"path": "jsrc/BinaryCSPReader.java", "endline": 119, "ast": ["{#returnnull;}", {"trailing": "\r\n    ", "leading": " ", "line": 83, "token": "{"}, ["try###", {"trailing": " ", "leading": "\r\n    ", "line": 84, "token": "try"}, ["{##############}", {"trailing": "\r\n      ", "leading": " ", "line": 84, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 85, "leaf": true, "token": "inFR"}, {"trailing": " ", "leading": " ", "line": 85, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 85, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 85, "leaf": true, "token": "FileReader"}, ["(#)", {"trailing": "", "leading": "", "line": 85, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 85, "leaf": true, "token": "fn"}, {"trailing": " ", "leading": "", "line": 85, "token": ")"}]]]], {"trailing": "\r\n      ", "leading": " ", "line": 85, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\r\n      ", "var": true, "line": 86, "leaf": true, "token": "in"}, {"trailing": " ", "leading": " ", "line": 86, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 86, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 86, "leaf": true, "token": "StreamTokenizer"}, ["(#)", {"trailing": "", "leading": "", "line": 86, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 86, "leaf": true, "token": "inFR"}, {"trailing": " ", "leading": "", "line": 86, "token": ")"}]]]], {"trailing": "\r\n      ", "leading": " ", "line": 86, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 87, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 87, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 87, "leaf": true, "token": "ordinaryChar"}, {"trailing": "", "leading": "", "line": 87, "token": "("}, {"trailing": "", "leading": "", "line": 87, "leaf": true, "token": "'('"}, {"trailing": " ", "leading": "", "line": 87, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 87, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 88, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 88, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 88, "leaf": true, "token": "ordinaryChar"}, {"trailing": "", "leading": "", "line": 88, "token": "("}, {"trailing": "", "leading": "", "line": 88, "leaf": true, "token": "')'"}, {"trailing": " ", "leading": "", "line": 88, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 88, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 89, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 89, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 89, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 89, "token": "("}, {"trailing": " ", "leading": "", "line": 89, "token": ")"}]], {"trailing": "                                         // n\r\n      ", "leading": " ", "line": 89, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "                                         // n\r\n      ", "line": 90, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 90, "leaf": true, "token": "n"}, {"trailing": " ", "leading": " ", "line": 90, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 90, "token": "("}, {"trailing": "", "leading": "", "line": 90, "token": "int"}, {"trailing": "", "leading": "", "line": 90, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 90, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 90, "token": "."}, {"trailing": " ", "leading": "", "line": 90, "leaf": true, "token": "nval"}]]]], {"trailing": "\r\n      ", "leading": " ", "line": 90, "token": ";"}], ["#;", ["int[][]#", {"trailing": "", "leading": "\r\n      ", "line": 91, "token": "int"}, {"trailing": "", "leading": "", "line": 91, "token": "["}, {"trailing": "", "leading": "", "line": 91, "token": "]"}, {"trailing": "", "leading": "", "line": 91, "token": "["}, {"trailing": " ", "leading": "", "line": 91, "token": "]"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 91, "leaf": true, "token": "domainBounds"}, {"trailing": " ", "leading": " ", "line": 91, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 91, "token": "new"}, ["int#", {"trailing": "", "leading": " ", "line": 91, "token": "int"}, ["[#][#]", {"trailing": "", "leading": "", "line": 91, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 91, "leaf": true, "token": "n"}, {"trailing": "", "leading": "", "line": 91, "token": "]"}, {"trailing": "", "leading": "", "line": 91, "token": "["}, {"trailing": "", "leading": "", "line": 91, "leaf": true, "token": "2"}, {"trailing": " ", "leading": "", "line": 91, "token": "]"}]]]]], {"trailing": "\r\n      ", "leading": " ", "line": 91, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\r\n      ", "line": 92, "token": "for"}, {"trailing": "", "leading": " ", "line": 92, "token": "("}, ["#;#;#", ["int#", {"trailing": " ", "leading": "", "line": 92, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 92, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 92, "token": "="}, {"trailing": "", "leading": " ", "line": 92, "leaf": true, "token": "0"}]], {"trailing": " ", "leading": "", "line": 92, "token": ";"}, ["#<#", {"trailing": " ", "leading": " ", "var": true, "line": 92, "leaf": true, "token": "i"}, {"trailing": " ", "leading": " ", "line": 92, "token": "<"}, {"trailing": "", "leading": " ", "var": true, "line": 92, "leaf": true, "token": "n"}], {"trailing": " ", "leading": "", "line": 92, "token": ";"}, ["#++", {"trailing": "", "leading": " ", "var": true, "line": 92, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 92, "token": "++"}]], {"trailing": " ", "leading": "", "line": 92, "token": ")"}, ["{#####}", {"trailing": "\r\n\t      ", "leading": " ", "line": 92, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t      ", "var": true, "line": 93, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 93, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 93, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 93, "token": "("}, {"trailing": " ", "leading": "", "line": 93, "token": ")"}]], {"trailing": "                                  // ith ub\r\n\t      ", "leading": " ", "line": 93, "token": ";"}], ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "                                  // ith ub\r\n\t      ", "var": true, "line": 94, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 94, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 94, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 94, "token": "]"}], {"trailing": "", "leading": "", "line": 94, "token": "["}, {"trailing": "", "leading": "", "line": 94, "leaf": true, "token": "0"}, {"trailing": " ", "leading": "", "line": 94, "token": "]"}], {"trailing": " ", "leading": " ", "line": 94, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 94, "token": "("}, {"trailing": "", "leading": "", "line": 94, "token": "int"}, {"trailing": "", "leading": "", "line": 94, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 94, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 94, "token": "."}, {"trailing": " ", "leading": "", "line": 94, "leaf": true, "token": "nval"}]]], {"trailing": "\r\n\t\t    ", "leading": " ", "line": 94, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t\t    ", "var": true, "line": 95, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 95, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 95, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 95, "token": "("}, {"trailing": " ", "leading": "", "line": 95, "token": ")"}]], {"trailing": "                                   // ','\r\n\t\t    ", "leading": " ", "line": 95, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "                                   // ','\r\n\t\t    ", "var": true, "line": 96, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 96, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 96, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 96, "token": "("}, {"trailing": " ", "leading": "", "line": 96, "token": ")"}]], {"trailing": "\r\n\t      ", "leading": " ", "line": 96, "token": ";"}], ["#;", ["#=#", ["#[#]", ["#[#]", {"trailing": "", "leading": "\r\n\t      ", "var": true, "line": 97, "leaf": true, "token": "domainBounds"}, {"trailing": "", "leading": "", "line": 97, "token": "["}, {"trailing": "", "leading": "", "var": true, "line": 97, "leaf": true, "token": "i"}, {"trailing": "", "leading": "", "line": 97, "token": "]"}], {"trailing": "", "leading": "", "line": 97, "token": "["}, {"trailing": "", "leading": "", "line": 97, "leaf": true, "token": "1"}, {"trailing": " ", "leading": "", "line": 97, "token": "]"}], {"trailing": " ", "leading": " ", "line": 97, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 97, "token": "("}, {"trailing": "", "leading": "", "line": 97, "token": "int"}, {"trailing": "", "leading": "", "line": 97, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 97, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 97, "token": "."}, {"trailing": " ", "leading": "", "line": 97, "leaf": true, "token": "nval"}]]], {"trailing": "\r\n      ", "leading": " ", "line": 97, "token": ";"}], {"trailing": "\r\n      ", "leading": "\r\n      ", "line": 98, "token": "}"}]], ["#;", ["##", ["##", {"trailing": "", "leading": "\r\n      ", "line": 99, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 99, "token": "<"}, {"trailing": "", "leading": "", "line": 99, "leaf": true, "token": "BinaryConstraint"}, {"trailing": " ", "leading": "", "line": 99, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 99, "leaf": true, "token": "constraints"}, {"trailing": " ", "leading": " ", "line": 99, "token": "="}, ["#()", {"trailing": "", "leading": " ", "line": 99, "leaf": true, "token": "readBinaryConstraints"}, {"trailing": "", "leading": "", "line": 99, "token": "("}, {"trailing": " ", "leading": "", "line": 99, "token": ")"}]]], {"trailing": "\r\n      ", "leading": " ", "line": 99, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "\r\n      ", "line": 100, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 100, "token": "<"}, {"trailing": "", "leading": "", "line": 100, "leaf": true, "token": "BinaryArcConstraint"}, {"trailing": " ", "leading": "", "line": 100, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 100, "leaf": true, "token": "arcConstraints"}, {"trailing": " ", "leading": " ", "line": 100, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 100, "token": "new"}, ["#()", ["#<>", {"trailing": "", "leading": " ", "line": 100, "leaf": true, "token": "ArrayList"}, {"trailing": "", "leading": "", "line": 100, "token": "<"}, {"trailing": "", "leading": "", "line": 100, "token": ">"}], {"trailing": "", "leading": "", "line": 100, "token": "("}, {"trailing": "", "leading": "", "line": 100, "token": ")"}]]]], {"trailing": "\r\n      // creates a pair of binaryArcConstraints for each constraint\r\n      // pointing at the same underlying constraint to reduce the amount of storage required\r\n      ", "leading": "", "line": 100, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\r\n      // creates a pair of binaryArcConstraints for each constraint\r\n      // pointing at the same underlying constraint to reduce the amount of storage required\r\n      ", "line": 103, "token": "for"}, {"trailing": "", "leading": " ", "line": 103, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 103, "leaf": true, "token": "BinaryConstraint"}, {"trailing": " ", "leading": " ", "var": true, "line": 103, "leaf": true, "token": "constraint"}, {"trailing": " ", "leading": " ", "line": 103, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 103, "leaf": true, "token": "constraints"}], {"trailing": " ", "leading": "", "line": 103, "token": ")"}, ["{##}", {"trailing": "\r\n          ", "leading": " ", "line": 103, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\r\n          ", "var": true, "line": 104, "leaf": true, "token": "arcConstraints"}, {"trailing": "", "leading": "", "line": 104, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 104, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 104, "token": "("}, ["new#", {"trailing": " ", "leading": "", "line": 104, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 104, "leaf": true, "token": "BinaryArcConstraint"}, ["(#)", {"trailing": "", "leading": "", "line": 104, "token": "("}, ["#,#", {"trailing": "", "leading": "", "line": 104, "leaf": true, "token": "false"}, {"trailing": " ", "leading": "", "line": 104, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 104, "leaf": true, "token": "constraint"}], {"trailing": "", "leading": "", "line": 104, "token": ")"}]]], {"trailing": "", "leading": "", "line": 104, "token": ")"}]], {"trailing": "\r\n          ", "leading": "", "line": 104, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n          ", "var": true, "line": 105, "leaf": true, "token": "arcConstraints"}, {"trailing": "", "leading": "", "line": 105, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 105, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 105, "token": "("}, ["new#", {"trailing": " ", "leading": "", "line": 105, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 105, "leaf": true, "token": "BinaryArcConstraint"}, ["(#)", {"trailing": "", "leading": "", "line": 105, "token": "("}, ["#,#", {"trailing": "", "leading": "", "line": 105, "leaf": true, "token": "true"}, {"trailing": " ", "leading": "", "line": 105, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 105, "leaf": true, "token": "constraint"}], {"trailing": "", "leading": "", "line": 105, "token": ")"}]]], {"trailing": "", "leading": "", "line": 105, "token": ")"}]], {"trailing": "\r\n      ", "leading": "", "line": 105, "token": ";"}], {"trailing": "\r\n\r\n      ", "leading": "\r\n      ", "line": 106, "token": "}"}]], ["#;", ["##", {"trailing": " ", "leading": "\r\n\r\n      ", "line": 108, "leaf": true, "token": "BinaryCSP"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "csp"}, {"trailing": " ", "leading": " ", "line": 108, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 108, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 108, "leaf": true, "token": "BinaryCSP"}, ["(#)", {"trailing": "", "leading": "", "line": 108, "token": "("}, ["#,#,#,#,#,#", {"trailing": "", "leading": "", "var": true, "line": 108, "leaf": true, "token": "domainBounds"}, {"trailing": " ", "leading": "", "line": 108, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "arcConstraints"}, {"trailing": " ", "leading": "", "line": 108, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "pruneType"}, {"trailing": " ", "leading": "", "line": 108, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "varType"}, {"trailing": " ", "leading": "", "line": 108, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "valType"}, {"trailing": " ", "leading": "", "line": 108, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 108, "leaf": true, "token": "allSolutions"}], {"trailing": "", "leading": "", "line": 108, "token": ")"}]]]]], {"trailing": "\r\n\r\n      \r\n      // TESTING:\r\n      // System.out.println(csp) ;\r\n      ", "leading": "", "line": 108, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\r\n      \r\n      // TESTING:\r\n      // System.out.println(csp) ;\r\n      ", "var": true, "line": 113, "leaf": true, "token": "inFR"}, {"trailing": "", "leading": "", "line": 113, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 113, "leaf": true, "token": "close"}, {"trailing": "", "leading": "", "line": 113, "token": "("}, {"trailing": " ", "leading": "", "line": 113, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 113, "token": ";"}], ["return#;", {"trailing": " ", "leading": "\r\n      ", "line": 114, "token": "return"}, {"trailing": " ", "leading": " ", "var": true, "line": 114, "leaf": true, "token": "csp"}, {"trailing": "\r\n    ", "leading": " ", "line": 114, "token": ";"}], {"trailing": "\r\n    ", "leading": "\r\n    ", "line": 115, "token": "}"}], ["catch(##)#", {"trailing": " ", "leading": "\r\n    ", "line": 116, "token": "catch"}, {"trailing": "", "leading": " ", "line": 116, "token": "("}, {"trailing": " ", "leading": "", "line": 116, "leaf": true, "token": "FileNotFoundException"}, {"trailing": "", "leading": " ", "var": true, "line": 116, "leaf": true, "token": "e"}, {"trailing": " ", "leading": "", "line": 116, "token": ")"}, ["{#}", {"trailing": "", "leading": " ", "line": 116, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 116, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 116, "token": "."}, {"trailing": "", "leading": "", "line": 116, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 116, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 116, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 116, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 116, "leaf": true, "token": "e"}, {"trailing": "", "leading": "", "line": 116, "token": ")"}]], {"trailing": "", "leading": "", "line": 116, "token": ";"}], {"trailing": "\r\n    ", "leading": "", "line": 116, "token": "}"}]], ["catch(##)#", {"trailing": " ", "leading": "\r\n    ", "line": 117, "token": "catch"}, {"trailing": "", "leading": " ", "line": 117, "token": "("}, {"trailing": " ", "leading": "", "line": 117, "leaf": true, "token": "IOException"}, {"trailing": "", "leading": " ", "var": true, "line": 117, "leaf": true, "token": "e"}, {"trailing": " ", "leading": "", "line": 117, "token": ")"}, ["{#}", {"trailing": "", "leading": " ", "line": 117, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 117, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 117, "token": "."}, {"trailing": "", "leading": "", "line": 117, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 117, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 117, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 117, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 117, "leaf": true, "token": "e"}, {"trailing": "", "leading": "", "line": 117, "token": ")"}]], {"trailing": "", "leading": "", "line": 117, "token": ";"}], {"trailing": "\r\n    ", "leading": "", "line": 117, "token": "}"}]]], {"trailing": " ", "leading": "\r\n    ", "line": 118, "token": "return"}, {"trailing": " ", "leading": " ", "line": 118, "token": "null"}, {"trailing": "\r\n  ", "leading": " ", "line": 118, "token": ";"}, {"trailing": "\r\n\r\n  /**\r\n   *\r\n   */\r\n  ", "leading": "\r\n  ", "line": 119, "token": "}"}], "method": "readBinaryCSP", "beginline": 83, "class": "BinaryCSPReader", "features": [13, 44, 37, 1488, 1489, 1490, 1491, 1492, 1493, 1493, 13, 118, 689, 36, 1494, 1494, 13, 44, 37, 1488, 30, 30, 1495, 1496, 1497, 1498, 1499, 1499, 13, 118, 689, 36, 1264, 1264, 1500, 1500, 13, 46, 37, 1488, 1501, 1501, 30, 30, 1502, 1503, 1504, 1505, 1506, 1506, 1507, 1508, 1509, 1510, 1511, 1511, 13, 46, 37, 1488, 1512, 1512, 1501, 1501, 1513, 1513, 1502, 1503, 1504, 1505, 1506, 1506, 1514, 1515, 1516, 1517, 1518, 1518, 13, 46, 37, 1488, 1519, 1519, 1519, 1519, 1520, 1520, 1521, 1522, 1523, 1524, 1525, 1525, 13, 44, 45, 37, 1526, 1526, 13, 46, 1527, 36, 1528, 1528, 1529, 1529, 30, 30, 1530, 1531, 1532, 1533, 1534, 1534, 13, 44, 1535, 37, 1536, 1536, 13, 1163, 45, 689, 1165, 1165, 30, 30, 1375, 1537, 1538, 1539, 1379, 1379, 13, 44, 45, 73, 1540, 1540, 60, 72, 121, 136, 123, 123, 13, 80, 81, 82, 83, 83, 74, 74, 13, 85, 81, 82, 1173, 1173, 100, 100, 30, 30, 13, 89, 90, 82, 91, 91, 92, 92, 30, 30, 13, 46, 37, 99, 1541, 1541, 1542, 1542, 30, 30, 1521, 1522, 1523, 1524, 1525, 1525, 13, 1045, 1045, 44, 1175, 1175, 1526, 1526, 13, 1048, 1045, 44, 1050, 1050, 1176, 1176, 30, 30, 60, 1051, 1543, 122, 123, 123, 13, 46, 1527, 36, 1528, 1528, 1544, 1544, 74, 74, 1530, 1531, 1532, 1533, 1534, 1534, 13, 46, 37, 99, 1541, 1541, 1542, 1542, 1536, 1536, 1521, 1522, 1523, 1524, 1525, 1525, 13, 46, 37, 99, 1542, 1542, 1541, 1541, 1526, 1526, 1521, 1522, 1523, 1524, 1525, 1525, 13, 1045, 1045, 44, 1058, 1058, 1175, 1175, 1526, 1526, 13, 1048, 1045, 44, 1060, 1060, 1050, 1050, 30, 30, 75, 1061, 1545, 758, 79, 79, 13, 46, 1527, 36, 1528, 1528, 1528, 1528, 84, 84, 1530, 1531, 1532, 1533, 1534, 1534, 268, 269, 269, 521, 1546, 1546, 1547, 1548, 1549, 1550, 1551, 1551, 13, 44, 118, 37, 1552, 1552, 1553, 1554, 1555, 1556, 1557, 1557, 268, 269, 269, 521, 1558, 1558, 319, 635, 636, 637, 1559, 1559, 13, 44, 118, 37, 639, 639, 268, 790, 523, 524, 525, 525, 1547, 1560, 1561, 1562, 1551, 1551, 13, 127, 82, 1488, 1552, 1552, 13, 128, 82, 1488, 1563, 1563, 30, 30, 13, 46, 37, 99, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 319, 637, 1564, 1565, 1566, 1566, 816, 1567, 818, 1568, 1569, 1569, 13, 147, 118, 689, 676, 676, 821, 821, 13, 46, 37, 99, 1570, 1570, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 319, 637, 1564, 1565, 1566, 1566, 361, 1571, 363, 1572, 1573, 1573, 13, 147, 118, 689, 1574, 1574, 676, 676, 366, 366, 163, 1322, 1323, 1575, 1328, 1328, 13, 44, 118, 37, 1464, 1464, 163, 1322, 1576, 1344, 1328, 1328, 13, 1577, 118, 689, 1578, 1578, 1578, 1578, 1464, 1464, 13, 1579, 118, 689, 1580, 1580, 1580, 1580, 30, 30, 13, 1581, 118, 689, 30, 30, 13, 1582, 118, 689, 30, 30, 13, 1583, 118, 689, 30, 30, 13, 1584, 118, 689, 30, 30, 13, 46, 37, 1488, 1585, 1585, 1586, 1586, 30, 30, 1587, 1588, 1589, 1590, 1591, 1591, 13, 21, 1488, 1592, 107, 107, 1593, 1593, 1594, 1595, 1596, 1597, 1598, 1598, 13, 1599, 1600, 1592, 1601, 1601, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 13, 52, 53, 37, 1602, 1602, 1265, 1265, 1603, 1604, 1605, 1606, 1607, 1607, 13, 1599, 1608, 1592, 1609, 1609, 1610, 1610, 1611, 1611, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 13, 52, 53, 37, 1602, 1602, 106, 106, 1265, 1265], "index": 54}
{"path": "jsrc/BinaryCSPReader.java", "endline": 158, "ast": ["{##returnnull;}", {"trailing": "\r\n    ", "leading": " ", "line": 124, "token": "{"}, ["#;", ["##", ["##", {"trailing": "", "leading": "\r\n    ", "line": 125, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 125, "token": "<"}, {"trailing": "", "leading": "", "line": 125, "leaf": true, "token": "BinaryConstraint"}, {"trailing": " ", "leading": "", "line": 125, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 125, "leaf": true, "token": "constraints"}, {"trailing": " ", "leading": " ", "line": 125, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 125, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 125, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 125, "token": "<"}, {"trailing": "", "leading": "", "line": 125, "leaf": true, "token": "BinaryConstraint"}, {"trailing": "", "leading": "", "line": 125, "token": ">"}]], {"trailing": "", "leading": "", "line": 125, "token": "("}, {"trailing": " ", "leading": "", "line": 125, "token": ")"}]]]], {"trailing": "\r\n\t\r\n    ", "leading": " ", "line": 125, "token": ";"}], ["try##", {"trailing": " ", "leading": "\r\n\t\r\n    ", "line": 127, "token": "try"}, ["{###}", {"trailing": "\r\n      ", "leading": " ", "line": 127, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\r\n      ", "var": true, "line": 128, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 128, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 128, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 128, "token": "("}, {"trailing": " ", "leading": "", "line": 128, "token": ")"}]], {"trailing": "                                  //'c' or EOF\r\n      ", "leading": " ", "line": 128, "token": ";"}], ["while##", {"trailing": "", "leading": "                                  //'c' or EOF\r\n      ", "line": 129, "token": "while"}, ["(#)", {"trailing": "", "leading": "", "line": 129, "token": "("}, ["#!=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 129, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 129, "token": "."}, {"trailing": " ", "leading": "", "line": 129, "leaf": true, "token": "ttype"}], {"trailing": " ", "leading": " ", "line": 129, "token": "!="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 129, "leaf": true, "token": "StreamTokenizer"}, {"trailing": "", "leading": "", "line": 129, "token": "."}, {"trailing": "", "leading": "", "line": 129, "leaf": true, "token": "TT_EOF"}]], {"trailing": " ", "leading": "", "line": 129, "token": ")"}], ["{############}", {"trailing": "\r\n\t      // scope\r\n\t      ", "leading": " ", "line": 129, "token": "{"}, ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t      // scope\r\n\t      ", "var": true, "line": 131, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 131, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 131, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 131, "token": "("}, {"trailing": " ", "leading": "", "line": 131, "token": ")"}]], {"trailing": "                                       //'('\r\n\t\t    ", "leading": " ", "line": 131, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "                                       //'('\r\n\t\t    ", "var": true, "line": 132, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 132, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 132, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 132, "token": "("}, {"trailing": " ", "leading": "", "line": 132, "token": ")"}]], {"trailing": "                                       //var\r\n\t      ", "leading": " ", "line": 132, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "                                       //var\r\n\t      ", "line": 133, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 133, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": " ", "line": 133, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 133, "token": "("}, {"trailing": "", "leading": "", "line": 133, "token": "int"}, {"trailing": "", "leading": "", "line": 133, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 133, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 133, "token": "."}, {"trailing": " ", "leading": "", "line": 133, "leaf": true, "token": "nval"}]]]], {"trailing": "\r\n\t\t    ", "leading": " ", "line": 133, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t\t    ", "var": true, "line": 134, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 134, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 134, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 134, "token": "("}, {"trailing": " ", "leading": "", "line": 134, "token": ")"}]], {"trailing": "                                       //','\r\n\t\t    ", "leading": " ", "line": 134, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "                                       //','\r\n\t\t    ", "var": true, "line": 135, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 135, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 135, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 135, "token": "("}, {"trailing": " ", "leading": "", "line": 135, "token": ")"}]], {"trailing": "                                       //var\r\n        ", "leading": " ", "line": 135, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "                                       //var\r\n        ", "line": 136, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 136, "leaf": true, "token": "var2"}, {"trailing": " ", "leading": " ", "line": 136, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 136, "token": "("}, {"trailing": "", "leading": "", "line": 136, "token": "int"}, {"trailing": "", "leading": "", "line": 136, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 136, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 136, "token": "."}, {"trailing": " ", "leading": "", "line": 136, "leaf": true, "token": "nval"}]]]], {"trailing": "\r\n\t\t    ", "leading": " ", "line": 136, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t\t    ", "var": true, "line": 137, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 137, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 137, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 137, "token": "("}, {"trailing": " ", "leading": "", "line": 137, "token": ")"}]], {"trailing": "                                       //')'\r\n\r\n        //tuples\r\n\t\t    ", "leading": " ", "line": 137, "token": ";"}], ["#;", ["##", ["##", {"trailing": "", "leading": "                                       //')'\r\n\r\n        //tuples\r\n\t\t    ", "line": 140, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 140, "token": "<"}, {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "BinaryTuple"}, {"trailing": " ", "leading": "", "line": 140, "token": ">"}]], ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 140, "leaf": true, "token": "tuples"}, {"trailing": " ", "leading": " ", "line": 140, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 140, "token": "new"}, ["#()", ["##", {"trailing": "", "leading": " ", "line": 140, "leaf": true, "token": "ArrayList"}, ["<#>", {"trailing": "", "leading": "", "line": 140, "token": "<"}, {"trailing": "", "leading": "", "line": 140, "leaf": true, "token": "BinaryTuple"}, {"trailing": "", "leading": "", "line": 140, "token": ">"}]], {"trailing": "", "leading": "", "line": 140, "token": "("}, {"trailing": " ", "leading": "", "line": 140, "token": ")"}]]]], {"trailing": "\r\n        ", "leading": " ", "line": 140, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n        ", "var": true, "line": 141, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 141, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 141, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 141, "token": "("}, {"trailing": " ", "leading": "", "line": 141, "token": ")"}]], {"trailing": "              //1st allowed val of 1st tuple\r\n        ", "leading": " ", "line": 141, "token": ";"}], ["while##", {"trailing": " ", "leading": "              //1st allowed val of 1st tuple\r\n        ", "line": 142, "token": "while"}, ["(#)", {"trailing": "", "leading": " ", "line": 142, "token": "("}, ["#&&#", ["!#", {"trailing": "", "leading": "", "line": 142, "token": "!"}, ["#.#", {"trailing": "", "leading": "", "line": 142, "leaf": true, "token": "\"c\""}, {"trailing": "", "leading": "", "line": 142, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 142, "leaf": true, "token": "equals"}, {"trailing": "", "leading": "", "line": 142, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 142, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 142, "token": "."}, {"trailing": "", "leading": "", "line": 142, "leaf": true, "token": "sval"}], {"trailing": " ", "leading": "", "line": 142, "token": ")"}]]], {"trailing": " ", "leading": " ", "line": 142, "token": "&&"}, ["(#)", {"trailing": "", "leading": " ", "line": 142, "token": "("}, ["#!=#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 142, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 142, "token": "."}, {"trailing": " ", "leading": "", "line": 142, "leaf": true, "token": "ttype"}], {"trailing": " ", "leading": " ", "line": 142, "token": "!="}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 142, "leaf": true, "token": "StreamTokenizer"}, {"trailing": "", "leading": "", "line": 142, "token": "."}, {"trailing": "", "leading": "", "line": 142, "leaf": true, "token": "TT_EOF"}]], {"trailing": "", "leading": "", "line": 142, "token": ")"}]], {"trailing": " ", "leading": "", "line": 142, "token": ")"}], ["{######}", {"trailing": "\r\n          ", "leading": " ", "line": 142, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\r\n          ", "line": 143, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 143, "leaf": true, "token": "val1"}, {"trailing": " ", "leading": " ", "line": 143, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 143, "token": "("}, {"trailing": "", "leading": "", "line": 143, "token": "int"}, {"trailing": "", "leading": "", "line": 143, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 143, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 143, "token": "."}, {"trailing": " ", "leading": "", "line": 143, "leaf": true, "token": "nval"}]]]], {"trailing": "\r\n\t        ", "leading": " ", "line": 143, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t        ", "var": true, "line": 144, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 144, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 144, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 144, "token": "("}, {"trailing": " ", "leading": "", "line": 144, "token": ")"}]], {"trailing": "                                   //','\r\n\t        ", "leading": " ", "line": 144, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "                                   //','\r\n\t        ", "var": true, "line": 145, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 145, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 145, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 145, "token": "("}, {"trailing": " ", "leading": "", "line": 145, "token": ")"}]], {"trailing": "                               //2nd val\r\n\t\t      ", "leading": " ", "line": 145, "token": ";"}], ["#;", ["int#", {"trailing": " ", "leading": "                               //2nd val\r\n\t\t      ", "line": 146, "token": "int"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 146, "leaf": true, "token": "val2"}, {"trailing": " ", "leading": " ", "line": 146, "token": "="}, ["(int)#", {"trailing": "", "leading": " ", "line": 146, "token": "("}, {"trailing": "", "leading": "", "line": 146, "token": "int"}, {"trailing": "", "leading": "", "line": 146, "token": ")"}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 146, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 146, "token": "."}, {"trailing": " ", "leading": "", "line": 146, "leaf": true, "token": "nval"}]]]], {"trailing": "\r\n\t\t      ", "leading": " ", "line": 146, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t\t      ", "var": true, "line": 147, "leaf": true, "token": "tuples"}, {"trailing": "", "leading": "", "line": 147, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 147, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 147, "token": "("}, ["new#", {"trailing": " ", "leading": "", "line": 147, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 147, "leaf": true, "token": "BinaryTuple"}, ["(#)", {"trailing": "", "leading": "", "line": 147, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 147, "leaf": true, "token": "val1"}, {"trailing": " ", "leading": "", "line": 147, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 147, "leaf": true, "token": "val2"}], {"trailing": "", "leading": "", "line": 147, "token": ")"}]]], {"trailing": " ", "leading": "", "line": 147, "token": ")"}]], {"trailing": "\r\n\t\t      ", "leading": " ", "line": 147, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n\t\t      ", "var": true, "line": 148, "leaf": true, "token": "in"}, {"trailing": "", "leading": "", "line": 148, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 148, "leaf": true, "token": "nextToken"}, {"trailing": "", "leading": "", "line": 148, "token": "("}, {"trailing": " ", "leading": "", "line": 148, "token": ")"}]], {"trailing": "      //1stallowed val of next tuple/c/EOF\r\n\t\t    ", "leading": " ", "line": 148, "token": ";"}], {"trailing": "\r\n        ", "leading": "      //1stallowed val of next tuple/c/EOF\r\n\t\t    ", "line": 149, "token": "}"}]], ["#;", ["##", {"trailing": " ", "leading": "\r\n        ", "line": 150, "leaf": true, "token": "BinaryConstraint"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 150, "leaf": true, "token": "c"}, {"trailing": " ", "leading": " ", "line": 150, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 150, "token": "new"}, ["##", {"trailing": "", "leading": " ", "line": 150, "leaf": true, "token": "BinaryConstraint"}, ["(#)", {"trailing": "", "leading": "", "line": 150, "token": "("}, ["#,#,#", {"trailing": "", "leading": "", "var": true, "line": 150, "leaf": true, "token": "var1"}, {"trailing": " ", "leading": "", "line": 150, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 150, "leaf": true, "token": "var2"}, {"trailing": " ", "leading": "", "line": 150, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 150, "leaf": true, "token": "tuples"}], {"trailing": " ", "leading": "", "line": 150, "token": ")"}]]]]], {"trailing": "\r\n        ", "leading": " ", "line": 150, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\r\n        ", "var": true, "line": 151, "leaf": true, "token": "constraints"}, {"trailing": "", "leading": "", "line": 151, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 151, "leaf": true, "token": "add"}, {"trailing": "", "leading": "", "line": 151, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 151, "leaf": true, "token": "c"}, {"trailing": " ", "leading": "", "line": 151, "token": ")"}]], {"trailing": "\r\n      ", "leading": " ", "line": 151, "token": ";"}], {"trailing": "\r\n\t  \r\n      ", "leading": "\r\n      ", "line": 152, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\r\n\t  \r\n      ", "line": 154, "token": "return"}, {"trailing": " ", "leading": " ", "var": true, "line": 154, "leaf": true, "token": "constraints"}, {"trailing": "\r\n    ", "leading": " ", "line": 154, "token": ";"}], {"trailing": "\r\n    ", "leading": "\r\n    ", "line": 155, "token": "}"}], ["catch(##)#", {"trailing": " ", "leading": "\r\n    ", "line": 156, "token": "catch"}, {"trailing": "", "leading": " ", "line": 156, "token": "("}, {"trailing": " ", "leading": "", "line": 156, "leaf": true, "token": "IOException"}, {"trailing": "", "leading": " ", "var": true, "line": 156, "leaf": true, "token": "e"}, {"trailing": " ", "leading": "", "line": 156, "token": ")"}, ["{#}", {"trailing": "", "leading": " ", "line": 156, "token": "{"}, ["#;", ["#.#", ["#.#", {"trailing": "", "leading": "", "var": true, "line": 156, "leaf": true, "token": "System"}, {"trailing": "", "leading": "", "line": 156, "token": "."}, {"trailing": "", "leading": "", "line": 156, "leaf": true, "token": "out"}], {"trailing": "", "leading": "", "line": 156, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 156, "leaf": true, "token": "println"}, {"trailing": "", "leading": "", "line": 156, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 156, "leaf": true, "token": "e"}, {"trailing": "", "leading": "", "line": 156, "token": ")"}]], {"trailing": "", "leading": "", "line": 156, "token": ";"}], {"trailing": "\r\n    ", "leading": "", "line": 156, "token": "}"}]]], {"trailing": " ", "leading": "\r\n    ", "line": 157, "token": "return"}, {"trailing": " ", "leading": " ", "line": 157, "token": "null"}, {"trailing": "  \r\n  ", "leading": " ", "line": 157, "token": ";"}, {"trailing": "\r\n", "leading": "  \r\n  ", "line": 158, "token": "}"}], "method": "readBinaryConstraints", "beginline": 124, "class": "BinaryCSPReader", "features": [268, 269, 269, 521, 1547, 1548, 1549, 1550, 1551, 1551, 13, 44, 118, 37, 1552, 1552, 268, 269, 523, 524, 525, 525, 1547, 1548, 1549, 1612, 1551, 1551, 13, 46, 37, 1613, 1552, 1552, 1521, 1522, 1523, 1524, 1525, 1525, 13, 46, 964, 692, 1614, 1614, 1526, 1526, 1615, 1616, 1617, 1618, 1619, 1619, 1495, 1620, 1621, 1622, 1623, 1623, 1624, 1625, 1626, 1627, 1628, 1628, 13, 46, 37, 699, 1629, 1629, 1542, 1542, 1630, 1630, 1521, 1522, 1523, 1524, 1525, 1525, 13, 46, 37, 699, 1542, 1542, 1629, 1629, 1526, 1526, 1521, 1522, 1523, 1524, 1525, 1525, 13, 44, 45, 37, 1526, 1526, 13, 46, 1527, 36, 1528, 1528, 1528, 1528, 30, 30, 1530, 1531, 1532, 1533, 1534, 1534, 13, 46, 37, 699, 1541, 1541, 1542, 1542, 1536, 1536, 1521, 1522, 1523, 1524, 1525, 1525, 13, 46, 37, 699, 1542, 1542, 1541, 1541, 1526, 1526, 1521, 1522, 1523, 1524, 1525, 1525, 13, 44, 45, 37, 1526, 1526, 13, 46, 1527, 36, 1528, 1528, 1528, 1528, 30, 30, 1530, 1531, 1532, 1533, 1534, 1534, 13, 46, 37, 699, 1541, 1541, 1542, 1542, 1536, 1536, 1521, 1522, 1523, 1524, 1525, 1525, 268, 269, 269, 521, 1631, 1631, 1632, 1633, 1634, 1635, 1636, 1636, 13, 44, 118, 37, 1637, 1637, 268, 269, 523, 524, 525, 525, 1632, 1633, 1634, 1638, 1636, 1636, 13, 46, 37, 699, 1542, 1542, 1541, 1541, 1637, 1637, 1521, 1522, 1523, 1524, 1525, 1525, 1639, 1640, 1641, 1642, 1643, 1643, 1185, 1186, 1187, 1644, 1645, 1645, 13, 46, 52, 53, 1646, 1646, 1646, 1646, 1647, 1647, 1648, 1649, 1650, 1649, 1651, 1651, 13, 46, 964, 31, 1652, 1652, 1614, 1614, 1653, 1653, 1615, 1616, 1617, 1654, 1619, 1619, 1495, 1620, 1621, 1655, 1623, 1623, 1624, 1625, 1626, 1656, 1628, 1628, 13, 44, 45, 37, 1630, 1630, 13, 46, 1527, 36, 1657, 1657, 1658, 1658, 30, 30, 1530, 1531, 1532, 1533, 1534, 1534, 13, 46, 37, 699, 1541, 1541, 1629, 1629, 1536, 1536, 1521, 1522, 1523, 1524, 1525, 1525, 13, 46, 37, 699, 1542, 1542, 1541, 1541, 1526, 1526, 1521, 1522, 1523, 1524, 1525, 1525, 13, 44, 45, 37, 1526, 1526, 13, 46, 1527, 36, 1528, 1528, 1528, 1528, 30, 30, 1530, 1531, 1532, 1533, 1534, 1534, 13, 46, 37, 699, 535, 535, 1536, 1536, 536, 537, 538, 539, 540, 540, 1632, 1635, 1659, 1660, 1661, 1661, 13, 144, 118, 689, 408, 408, 1637, 1637, 13, 147, 118, 689, 148, 148, 30, 30, 13, 46, 37, 699, 1541, 1541, 1542, 1542, 30, 30, 1521, 1522, 1523, 1524, 1525, 1525, 1547, 1550, 1662, 1663, 1664, 1664, 13, 44, 118, 37, 1552, 1552, 1547, 1550, 1665, 1666, 1667, 1667, 13, 205, 118, 689, 745, 745, 1552, 1552, 13, 214, 118, 689, 857, 857, 30, 30, 13, 218, 118, 689, 1668, 1668, 419, 419, 30, 30, 13, 46, 37, 699, 535, 535, 30, 30, 536, 537, 538, 539, 540, 540, 13, 52, 53, 37, 401, 401, 543, 543, 13, 21, 1613, 1669, 954, 954, 107, 107, 30, 30, 1603, 1604, 1670, 1671, 1607, 1607, 13, 1599, 1672, 1669, 1611, 1611, 445, 446, 446, 447, 1142, 1142, 449, 450, 451, 452, 453, 453, 454, 455, 456, 457, 458, 458, 13, 52, 53, 37, 1602, 1602, 1265, 1265], "index": 55}
{"path": "jsrc/BinaryArcConstraint.java", "endline": 19, "ast": ["{#}", {"trailing": "\n        ", "leading": "", "line": 13, "token": "{"}, ["if##else#", {"trailing": "", "leading": "\n        ", "line": 14, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 14, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 14, "leaf": true, "token": "isInverted"}, {"trailing": "", "leading": "", "line": 14, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 14, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            ", "line": 15, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 15, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 15, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 15, "leaf": true, "token": "getSecondVar"}, {"trailing": "", "leading": "", "line": 15, "token": "("}, {"trailing": "", "leading": "", "line": 15, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 15, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 16, "token": "}"}], {"trailing": " ", "leading": " ", "line": 16, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 16, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            ", "line": 17, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 17, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 17, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 17, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 17, "token": "("}, {"trailing": "", "leading": "", "line": 17, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 17, "token": ";"}], {"trailing": "\n    ", "leading": "\n        ", "line": 18, "token": "}"}]], {"trailing": "\n\n     ", "leading": "\n    ", "line": 19, "token": "}"}], "method": "getFirstVar", "beginline": 13, "class": "BinaryArcConstraint", "features": [13, 367, 13, 46, 21, 197, 30, 30, 721, 722, 723, 1673, 725, 725, 13, 46, 21, 220, 771, 771, 1674, 1674, 663, 664, 665, 1675, 667, 667], "index": 56}
{"path": "jsrc/BinaryArcConstraint.java", "endline": 27, "ast": ["{#}", {"trailing": "\n        ", "leading": "", "line": 21, "token": "{"}, ["if##else#", {"trailing": "", "leading": "\n        ", "line": 22, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 22, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 22, "leaf": true, "token": "isInverted"}, {"trailing": "", "leading": "", "line": 22, "token": ")"}], ["{#}", {"trailing": "\n            ", "leading": "", "line": 22, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            ", "line": 23, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 23, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 23, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 23, "leaf": true, "token": "getFirstVar"}, {"trailing": "", "leading": "", "line": 23, "token": "("}, {"trailing": "", "leading": "", "line": 23, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 23, "token": ";"}], {"trailing": " ", "leading": "\n        ", "line": 24, "token": "}"}], {"trailing": " ", "leading": " ", "line": 24, "token": "else"}, ["{#}", {"trailing": "\n            ", "leading": " ", "line": 24, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n            ", "line": 25, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 25, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 25, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 25, "leaf": true, "token": "getSecondVar"}, {"trailing": "", "leading": "", "line": 25, "token": "("}, {"trailing": "", "leading": "", "line": 25, "token": ")"}]], {"trailing": "\n        ", "leading": "", "line": 25, "token": ";"}], {"trailing": "\n    ", "leading": "\n        ", "line": 26, "token": "}"}]], {"trailing": "\n\n    ", "leading": "\n    ", "line": 27, "token": "}"}], "method": "getSecondVar", "beginline": 21, "class": "BinaryArcConstraint", "features": [13, 367, 13, 46, 21, 197, 30, 30, 663, 664, 665, 1675, 667, 667, 13, 46, 21, 220, 719, 719, 668, 668, 721, 722, 723, 1673, 725, 725], "index": 57}
{"path": "jsrc/BinaryArcConstraint.java", "endline": 31, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 29, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 30, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 30, "leaf": true, "token": "isInverted"}, {"trailing": "\n    ", "leading": "", "line": 30, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 31, "token": "}"}], "method": "getIsInverted", "beginline": 29, "class": "BinaryArcConstraint", "features": [13, 21], "index": 58}
{"path": "jsrc/BinaryArcConstraint.java", "endline": 35, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 33, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 34, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 34, "leaf": true, "token": "constraint"}, {"trailing": "\n    ", "leading": "", "line": 34, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 35, "token": "}"}], "method": "getConstraint", "beginline": 33, "class": "BinaryArcConstraint", "features": [13, 21], "index": 59}
{"path": "jsrc/BinaryArcConstraint.java", "endline": 39, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 37, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n        ", "line": 38, "token": "this"}, {"trailing": "", "leading": "", "line": 38, "token": "."}, {"trailing": " ", "leading": "", "line": 38, "leaf": true, "token": "constraint"}], {"trailing": " ", "leading": " ", "line": 38, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 38, "leaf": true, "token": "constraint"}], {"trailing": "\n    ", "leading": "", "line": 38, "token": ";"}], {"trailing": "\n\n    \n", "leading": "\n    ", "line": 39, "token": "}"}], "method": "setConstraint", "beginline": 37, "class": "BinaryArcConstraint", "features": [1676, 1677, 1678, 1679, 13, 36, 37, 1680, 1680], "index": 60}
{"path": "jsrc/RevertData.java", "endline": 20, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 18, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 19, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 19, "leaf": true, "token": "changed"}, {"trailing": "\n    ", "leading": "", "line": 19, "token": ";"}], {"trailing": "\n\n\n\n    ", "leading": "\n    ", "line": 20, "token": "}"}], "method": "getChanged", "beginline": 18, "class": "RevertData", "features": [13, 21], "index": 61}
{"path": "jsrc/RevertData.java", "endline": 26, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 24, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n        ", "line": 25, "token": "this"}, {"trailing": "", "leading": "", "line": 25, "token": "."}, {"trailing": " ", "leading": "", "line": 25, "leaf": true, "token": "changed"}], {"trailing": " ", "leading": " ", "line": 25, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 25, "leaf": true, "token": "changed"}], {"trailing": "\n    ", "leading": "", "line": 25, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 26, "token": "}"}], "method": "setChanged", "beginline": 24, "class": "RevertData", "features": [1681, 1682, 1683, 1684, 13, 36, 37, 1685, 1685], "index": 62}
{"path": "jsrc/RevertData.java", "endline": 30, "ast": ["{#}", {"trailing": "\n        ", "leading": "", "line": 28, "token": "{"}, ["#;", ["#++", ["this.#", {"trailing": "", "leading": "\n        ", "line": 29, "token": "this"}, {"trailing": "", "leading": "", "line": 29, "token": "."}, {"trailing": " ", "leading": "", "line": 29, "leaf": true, "token": "changed"}], {"trailing": "", "leading": " ", "line": 29, "token": "++"}], {"trailing": "\n    ", "leading": "", "line": 29, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 30, "token": "}"}], "method": "incrementChanged", "beginline": 28, "class": "RevertData", "features": [1681, 1682, 1686, 1684], "index": 63}
{"path": "jsrc/RevertData.java", "endline": 34, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 32, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 33, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 33, "leaf": true, "token": "changedDomains"}, {"trailing": "\n    ", "leading": "", "line": 33, "token": ";"}], {"trailing": "\n\n\n\n    ", "leading": "\n    ", "line": 34, "token": "}"}], "method": "getChangedDomains", "beginline": 32, "class": "RevertData", "features": [13, 21], "index": 64}
{"path": "jsrc/RevertData.java", "endline": 40, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 38, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n        ", "line": 39, "token": "this"}, {"trailing": "", "leading": "", "line": 39, "token": "."}, {"trailing": " ", "leading": "", "line": 39, "leaf": true, "token": "changedDomains"}], {"trailing": " ", "leading": " ", "line": 39, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 39, "leaf": true, "token": "changedDomains"}], {"trailing": "\n    ", "leading": "", "line": 39, "token": ";"}], {"trailing": "\n\n\n\n    ", "leading": "\n    ", "line": 40, "token": "}"}], "method": "setChangedDomains", "beginline": 38, "class": "RevertData", "features": [1687, 1688, 1689, 1690, 13, 36, 37, 1691, 1691], "index": 65}
{"path": "jsrc/RevertData.java", "endline": 46, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 44, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 45, "token": "return"}, ["this.#", {"trailing": "", "leading": " ", "line": 45, "token": "this"}, {"trailing": "", "leading": "", "line": 45, "token": "."}, {"trailing": "", "leading": "", "line": 45, "leaf": true, "token": "changedLastValid"}], {"trailing": "\n    ", "leading": "", "line": 45, "token": ";"}], {"trailing": "\n\n\n\n    ", "leading": "\n    ", "line": 46, "token": "}"}], "method": "getChangedLastValid", "beginline": 44, "class": "RevertData", "features": [1692, 1693, 1694], "index": 66}
{"path": "jsrc/RevertData.java", "endline": 52, "ast": ["{#}", {"trailing": "\n        ", "leading": " ", "line": 50, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n        ", "line": 51, "token": "this"}, {"trailing": "", "leading": "", "line": 51, "token": "."}, {"trailing": " ", "leading": "", "line": 51, "leaf": true, "token": "changedLastValid"}], {"trailing": " ", "leading": " ", "line": 51, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "changedLastValid"}], {"trailing": "\n    ", "leading": "", "line": 51, "token": ";"}], {"trailing": "\n\n    ", "leading": "\n    ", "line": 52, "token": "}"}], "method": "setChangedLastValid", "beginline": 50, "class": "RevertData", "features": [1692, 1693, 1695, 1696, 13, 36, 37, 1697, 1697], "index": 67}
{"path": "jsrc/RevertData.java", "endline": 56, "ast": ["{#}", {"trailing": "\n        ", "leading": "", "line": 54, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 55, "token": "return"}, ["#.#", ["this.#", {"trailing": "", "leading": " ", "line": 55, "token": "this"}, {"trailing": "", "leading": "", "line": 55, "token": "."}, {"trailing": "", "leading": "", "line": 55, "leaf": true, "token": "changedLastValid"}], {"trailing": "", "leading": "", "line": 55, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 55, "leaf": true, "token": "get"}, {"trailing": "", "leading": "", "line": 55, "token": "("}, {"trailing": "", "leading": "", "var": true, "line": 55, "leaf": true, "token": "constraint"}, {"trailing": "", "leading": "", "line": 55, "token": ")"}]], {"trailing": "\n    ", "leading": "", "line": 55, "token": ";"}], {"trailing": "\n", "leading": "\n    ", "line": 56, "token": "}"}], "method": "getLastValidInnerMap", "beginline": 54, "class": "RevertData", "features": [1692, 1693, 1698, 1694, 55, 56, 57, 108, 1699, 1699, 13, 52, 53, 21, 97, 97], "index": 68}
{"path": "jsrc/BinaryConstraint.java", "endline": 32, "ast": ["{####}", {"trailing": "\n    ", "leading": " ", "line": 26, "token": "{"}, ["#;", ["##", {"trailing": " ", "leading": "\n    ", "line": 27, "leaf": true, "token": "StringBuffer"}, ["#=#", {"trailing": " ", "leading": " ", "var": true, "line": 27, "leaf": true, "token": "result"}, {"trailing": " ", "leading": " ", "line": 27, "token": "="}, ["new#", {"trailing": " ", "leading": " ", "line": 27, "token": "new"}, ["#()", {"trailing": "", "leading": " ", "line": 27, "leaf": true, "token": "StringBuffer"}, {"trailing": "", "leading": "", "line": 27, "token": "("}, {"trailing": " ", "leading": "", "line": 27, "token": ")"}]]]], {"trailing": "\n    ", "leading": " ", "line": 27, "token": ";"}], ["#;", ["#.#", {"trailing": "", "leading": "\n    ", "var": true, "line": 28, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 28, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "append"}, {"trailing": "", "leading": "", "line": 28, "token": "("}, ["#+#", ["#+#", ["#+#", ["#+#", {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "\"c(\""}, {"trailing": "", "leading": "", "line": 28, "token": "+"}, {"trailing": "", "leading": "", "var": true, "line": 28, "leaf": true, "token": "firstVar"}], {"trailing": "", "leading": "", "line": 28, "token": "+"}, {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "\", \""}], {"trailing": "", "leading": "", "line": 28, "token": "+"}, {"trailing": "", "leading": "", "var": true, "line": 28, "leaf": true, "token": "secondVar"}], {"trailing": "", "leading": "", "line": 28, "token": "+"}, {"trailing": "", "leading": "", "line": 28, "leaf": true, "token": "\")\\n\""}], {"trailing": " ", "leading": "", "line": 28, "token": ")"}]], {"trailing": "\n    ", "leading": " ", "line": 28, "token": ";"}], ["for(#)#", {"trailing": " ", "leading": "\n    ", "line": 29, "token": "for"}, {"trailing": "", "leading": " ", "line": 29, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 29, "leaf": true, "token": "BinaryTuple"}, {"trailing": " ", "leading": " ", "var": true, "line": 29, "leaf": true, "token": "bt"}, {"trailing": " ", "leading": " ", "line": 29, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 29, "leaf": true, "token": "tuples"}], {"trailing": "\n      ", "leading": "", "line": 29, "token": ")"}, ["#;", ["#.#", {"trailing": "", "leading": "\n      ", "var": true, "line": 30, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 30, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 30, "leaf": true, "token": "append"}, {"trailing": "", "leading": "", "line": 30, "token": "("}, ["#+#", {"trailing": "", "leading": "", "var": true, "line": 30, "leaf": true, "token": "bt"}, {"trailing": "", "leading": "", "line": 30, "token": "+"}, {"trailing": "", "leading": "", "line": 30, "leaf": true, "token": "\"\\n\""}], {"trailing": " ", "leading": "", "line": 30, "token": ")"}]], {"trailing": "\n    ", "leading": " ", "line": 30, "token": ";"}]], ["return#;", {"trailing": " ", "leading": "\n    ", "line": 31, "token": "return"}, ["#.#", {"trailing": "", "leading": " ", "var": true, "line": 31, "leaf": true, "token": "result"}, {"trailing": "", "leading": "", "line": 31, "token": "."}, ["#()", {"trailing": "", "leading": "", "line": 31, "leaf": true, "token": "toString"}, {"trailing": "", "leading": "", "line": 31, "token": "("}, {"trailing": " ", "leading": "", "line": 31, "token": ")"}]], {"trailing": "\n  ", "leading": " ", "line": 31, "token": ";"}], {"trailing": "\n\n\n  ", "leading": "\n  ", "line": 32, "token": "}"}], "method": "toString", "beginline": 26, "class": "BinaryConstraint", "features": [1008, 1009, 1010, 13, 44, 118, 37, 1011, 1011, 1008, 1012, 1013, 1014, 1015, 1015, 13, 46, 37, 1016, 1016, 1011, 1011, 1017, 1018, 1019, 1020, 1021, 1021, 1700, 1701, 1701, 1701, 1702, 1702, 13, 14, 15, 15, 1703, 1703, 17, 18, 19, 19, 20, 20, 13, 14, 15, 52, 22, 22, 1704, 1705, 1706, 1707, 1708, 1708, 1632, 1709, 1710, 1711, 1711, 13, 127, 82, 1637, 1637, 13, 128, 82, 30, 30, 13, 46, 37, 99, 1034, 1034, 1016, 1016, 30, 30, 1017, 1018, 1019, 1020, 1021, 1021, 13, 15, 52, 53, 995, 995, 1071, 1071, 1064, 1065, 1066, 1067, 1712, 1712, 13, 46, 21, 1074, 1074, 1074, 1074, 1075, 1075, 1076, 1077, 1078, 1079, 1080, 1080], "index": 69}
{"path": "jsrc/BinaryConstraint.java", "endline": 37, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 35, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 36, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 36, "leaf": true, "token": "firstVar"}, {"trailing": "\n  ", "leading": "", "line": 36, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 37, "token": "}"}], "method": "getFirstVar", "beginline": 35, "class": "BinaryConstraint", "features": [13, 21], "index": 70}
{"path": "jsrc/BinaryConstraint.java", "endline": 40, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 38, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 39, "token": "this"}, {"trailing": "", "leading": "", "line": 39, "token": "."}, {"trailing": " ", "leading": "", "line": 39, "leaf": true, "token": "firstVar"}], {"trailing": " ", "leading": " ", "line": 39, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 39, "leaf": true, "token": "firstVar"}], {"trailing": "\n  ", "leading": "", "line": 39, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 40, "token": "}"}], "method": "setFirstVar", "beginline": 38, "class": "BinaryConstraint", "features": [1713, 1714, 1715, 1716, 13, 36, 37, 1717, 1717], "index": 71}
{"path": "jsrc/BinaryConstraint.java", "endline": 43, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 41, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 42, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 42, "leaf": true, "token": "secondVar"}, {"trailing": "\n  ", "leading": "", "line": 42, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 43, "token": "}"}], "method": "getSecondVar", "beginline": 41, "class": "BinaryConstraint", "features": [13, 21], "index": 72}
{"path": "jsrc/BinaryConstraint.java", "endline": 46, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 44, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 45, "token": "this"}, {"trailing": "", "leading": "", "line": 45, "token": "."}, {"trailing": " ", "leading": "", "line": 45, "leaf": true, "token": "secondVar"}], {"trailing": " ", "leading": " ", "line": 45, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 45, "leaf": true, "token": "secondVar"}], {"trailing": "\n  ", "leading": "", "line": 45, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 46, "token": "}"}], "method": "setSecondVar", "beginline": 44, "class": "BinaryConstraint", "features": [1718, 1719, 1720, 1721, 13, 36, 37, 1722, 1722], "index": 73}
{"path": "jsrc/BinaryConstraint.java", "endline": 49, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 47, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n    ", "line": 48, "token": "return"}, {"trailing": "", "leading": " ", "var": true, "line": 48, "leaf": true, "token": "tuples"}, {"trailing": "\n  ", "leading": "", "line": 48, "token": ";"}], {"trailing": "\n  ", "leading": "\n  ", "line": 49, "token": "}"}], "method": "getTuples", "beginline": 47, "class": "BinaryConstraint", "features": [13, 21], "index": 74}
{"path": "jsrc/BinaryConstraint.java", "endline": 52, "ast": ["{#}", {"trailing": "\n    ", "leading": " ", "line": 50, "token": "{"}, ["#;", ["#=#", ["this.#", {"trailing": "", "leading": "\n    ", "line": 51, "token": "this"}, {"trailing": "", "leading": "", "line": 51, "token": "."}, {"trailing": " ", "leading": "", "line": 51, "leaf": true, "token": "tuples"}], {"trailing": " ", "leading": " ", "line": 51, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 51, "leaf": true, "token": "tuples"}], {"trailing": "\n  ", "leading": "", "line": 51, "token": ";"}], {"trailing": "\n\n\n  // SUGGESTION: You will want to add methods here to reason about the constraint\n\n\n  // take two values and check if they are in a tuple for this constraint\n  // we take a boolean to flag if the check should be inverted (to allow for bidirectionality)\n  ", "leading": "\n  ", "line": 52, "token": "}"}], "method": "setTuples", "beginline": 50, "class": "BinaryConstraint", "features": [1723, 1724, 1725, 1726, 13, 36, 37, 1727, 1727], "index": 75}
{"path": "jsrc/BinaryConstraint.java", "endline": 78, "ast": ["{####}", {"trailing": "\n    ", "leading": "", "line": 60, "token": "{"}, ["#;", ["int#", {"trailing": " ", "leading": "\n    ", "line": 61, "token": "int"}, ["#,#", {"trailing": "", "leading": " ", "var": true, "line": 61, "leaf": true, "token": "v1"}, {"trailing": "", "leading": "", "line": 61, "token": ","}, {"trailing": "", "leading": "", "var": true, "line": 61, "leaf": true, "token": "v2"}]], {"trailing": "\n\n    ", "leading": "", "line": 61, "token": ";"}], ["if##else#", {"trailing": "", "leading": "\n\n    ", "line": 63, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 63, "token": "("}, ["!#", {"trailing": "", "leading": "", "line": 63, "token": "!"}, {"trailing": "", "leading": "", "var": true, "line": 63, "leaf": true, "token": "isInverted"}], {"trailing": "", "leading": "", "line": 63, "token": ")"}], ["{##}", {"trailing": "\n      ", "leading": "", "line": 63, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n      ", "var": true, "line": 64, "leaf": true, "token": "v1"}, {"trailing": " ", "leading": " ", "line": 64, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 64, "leaf": true, "token": "val1"}], {"trailing": "\n      ", "leading": "", "line": 64, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\n      ", "var": true, "line": 65, "leaf": true, "token": "v2"}, {"trailing": " ", "leading": " ", "line": 65, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 65, "leaf": true, "token": "val2"}], {"trailing": "\n    ", "leading": "", "line": 65, "token": ";"}], {"trailing": " ", "leading": "\n    ", "line": 66, "token": "}"}], {"trailing": " ", "leading": " ", "line": 66, "token": "else"}, ["{##}", {"trailing": "\n      ", "leading": " ", "line": 66, "token": "{"}, ["#;", ["#=#", {"trailing": " ", "leading": "\n      ", "var": true, "line": 67, "leaf": true, "token": "v1"}, {"trailing": " ", "leading": " ", "line": 67, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 67, "leaf": true, "token": "val2"}], {"trailing": "\n      ", "leading": "", "line": 67, "token": ";"}], ["#;", ["#=#", {"trailing": " ", "leading": "\n      ", "var": true, "line": 68, "leaf": true, "token": "v2"}, {"trailing": " ", "leading": " ", "line": 68, "token": "="}, {"trailing": "", "leading": " ", "var": true, "line": 68, "leaf": true, "token": "val1"}], {"trailing": "\n    ", "leading": "", "line": 68, "token": ";"}], {"trailing": "\n    ", "leading": "\n    ", "line": 69, "token": "}"}]], ["for(#)#", {"trailing": " ", "leading": "\n    ", "line": 70, "token": "for"}, {"trailing": "", "leading": " ", "line": 70, "token": "("}, ["##:#", {"trailing": " ", "leading": "", "line": 70, "leaf": true, "token": "BinaryTuple"}, {"trailing": " ", "leading": " ", "var": true, "line": 70, "leaf": true, "token": "tuple"}, {"trailing": " ", "leading": " ", "line": 70, "token": ":"}, {"trailing": "", "leading": " ", "var": true, "line": 70, "leaf": true, "token": "tuples"}], {"trailing": " ", "leading": "", "line": 70, "token": ")"}, ["{#}", {"trailing": "\n      \n      ", "leading": " ", "line": 70, "token": "{"}, ["if##", {"trailing": "", "leading": "\n      \n      ", "line": 72, "token": "if"}, ["(#)", {"trailing": "", "leading": "", "line": 72, "token": "("}, ["#.#", {"trailing": "", "leading": "", "var": true, "line": 72, "leaf": true, "token": "tuple"}, {"trailing": "", "leading": "", "line": 72, "token": "."}, ["#(#)", {"trailing": "", "leading": "", "line": 72, "leaf": true, "token": "matches"}, {"trailing": "", "leading": "", "line": 72, "token": "("}, ["#,#", {"trailing": "", "leading": "", "var": true, "line": 72, "leaf": true, "token": "v1"}, {"trailing": " ", "leading": "", "line": 72, "token": ","}, {"trailing": "", "leading": " ", "var": true, "line": 72, "leaf": true, "token": "v2"}], {"trailing": "", "leading": "", "line": 72, "token": ")"}]], {"trailing": "", "leading": "", "line": 72, "token": ")"}], ["{#}", {"trailing": "\n        ", "leading": "", "line": 72, "token": "{"}, ["return#;", {"trailing": " ", "leading": "\n        ", "line": 73, "token": "return"}, {"trailing": "", "leading": " ", "line": 73, "leaf": true, "token": "true"}, {"trailing": "\n      ", "leading": "", "line": 73, "token": ";"}], {"trailing": "\n    ", "leading": "\n      ", "line": 74, "token": "}"}]], {"trailing": "\n\n    ", "leading": "\n    ", "line": 75, "token": "}"}]], ["return#;", {"trailing": " ", "leading": "\n\n    ", "line": 77, "token": "return"}, {"trailing": "", "leading": " ", "line": 77, "leaf": true, "token": "false"}, {"trailing": "\n  ", "leading": "", "line": 77, "token": ";"}], {"trailing": "\n", "leading": "\n  ", "line": 78, "token": "}"}], "method": "cCheck", "beginline": 60, "class": "BinaryConstraint", "features": [13, 144, 45, 37, 13, 147, 45, 37, 30, 30, 13, 437, 367, 30, 30, 13, 44, 37, 197, 1728, 1728, 30, 30, 13, 36, 37, 197, 30, 30, 13, 44, 37, 197, 1729, 1729, 30, 30, 13, 36, 37, 197, 30, 30, 13, 44, 37, 220, 103, 103, 1728, 1728, 30, 30, 13, 36, 37, 220, 1730, 1730, 30, 30, 13, 44, 37, 220, 103, 103, 1729, 1729, 30, 30, 13, 36, 37, 220, 1730, 1730, 30, 30, 1632, 1709, 1710, 1731, 1731, 13, 127, 82, 1637, 1637, 13, 128, 82, 30, 30, 13, 46, 98, 99, 1732, 1732, 30, 30, 1733, 1734, 1735, 1736, 1737, 1737, 13, 144, 52, 53, 408, 408, 408, 408, 1738, 1738, 13, 147, 52, 53, 148, 148, 148, 148, 30, 30, 361, 1739, 1196, 1740, 365, 365, 816, 1741, 1742, 1742], "index": 76}
